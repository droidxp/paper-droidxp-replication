<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object peek()>
<android.os.CountDownTimer: android.os.CountDownTimer start()>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<android.view.View: android.content.res.Resources getResources()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.util.AbstractMap: int size()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<java.lang.Byte: byte byteValue()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.lang.ref.Reference: java.lang.Object get()>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<java.lang.ThreadLocal: java.lang.Object get()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<android.graphics.Bitmap: int getHeight()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<java.lang.Class: java.lang.reflect.Field[] getFields()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<android.view.KeyEvent: int getAction()>
<android.view.View: int getWidth()>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<android.graphics.Bitmap: int getWidth()>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.security.MessageDigest: byte[] digest()>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.ArrayList: java.util.Iterator iterator()>
<java.util.zip.Inflater: int getRemaining()>
<android.app.Activity: android.view.WindowManager getWindowManager()>

<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.os.StatFs: int getBlockSize()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<java.lang.StringBuilder: java.lang.String toString()>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>
<android.widget.ZoomButtonsController: android.view.View getZoomControls()>
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[],int,int)>
<java.util.HashMap: java.util.Collection values()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<android.view.MotionEvent: int getAction()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.view.Window: android.view.WindowManager getWindowManager()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.lang.Object: java.lang.Object clone()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.widget.EditText: android.text.Editable getText()>
<java.io.File: java.io.File getParentFile()>
<java.lang.Double: double doubleValue()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>
<java.lang.Class: java.lang.Class[] getDeclaredClasses()>
<java.util.Date: long getTime()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<android.view.View: int getVisibility()>
<java.util.Stack: java.lang.Object peek()>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<java.io.File: java.lang.String getPath()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<java.util.AbstractList: java.util.ListIterator listIterator(int)>
<android.app.ListActivity: android.widget.ListView getListView()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<java.lang.Float: float floatValue()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.util.Random: long nextLong()>
<android.content.ComponentName: java.lang.String getPackageName()>
<android.hardware.Sensor: int getType()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<android.os.HandlerThread: android.os.Looper getLooper()>
<org.json.JSONObject: double getDouble(java.lang.String)>
<android.app.Dialog: android.content.Context getContext()>
<java.util.HashSet: java.util.Iterator iterator()>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<android.view.View: int getHeight()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.os.StatFs: int getAvailableBlocks()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.webkit.WebView: java.lang.String getTitle()>
<android.content.Intent: android.os.Bundle getExtras()>
<android.content.ComponentName: java.lang.String getClassName()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<java.lang.Thread: long getId()>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>
<java.lang.System: java.util.Properties getProperties()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<java.lang.String: char[] toCharArray()>
<java.text.Collator: java.text.Collator getInstance()>
<android.view.MotionEvent: int getPointerId(int)>
<java.util.Calendar: long getTimeInMillis()>
<java.lang.String: byte[] getBytes()>
<android.app.Dialog: android.view.Window getWindow()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<android.view.View: java.lang.Object getTag()>
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>
<android.app.Notification: android.app.Notification clone()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<java.lang.reflect.Method: java.lang.String getName()>
<java.nio.ShortBuffer: java.nio.ShortBuffer put(java.nio.ShortBuffer)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<java.lang.Class: java.lang.String getSimpleName()>
<android.content.Intent: java.lang.String getAction()>
<android.view.View: android.view.ViewParent getParent()>
<android.view.ViewGroup: int getChildCount()>
<java.net.URL: java.lang.String getFile()>
<android.view.MotionEvent: float getRawX()>
<android.location.Location: double getLongitude()>
<android.app.Activity: android.content.Intent getIntent()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<android.os.Bundle: java.util.Set keySet()>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<java.lang.Throwable: java.lang.String getMessage()>
<java.lang.Long: long longValue()>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.view.MotionEvent: float getY()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<java.lang.String: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.util.HashMap: java.util.Set entrySet()>
<android.os.Bundle: int getInt(java.lang.String,int)>
<java.util.Random: float nextFloat()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<java.util.LinkedList: java.lang.Object get(int)>
<java.util.Stack: java.lang.Object pop()>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.security.Provider: java.util.Set keySet()>
<java.io.ObjectStreamClass: java.lang.String getName()>
<java.net.HttpURLConnection: int getResponseCode()>
<java.io.InputStream: long skip(long)>
<android.location.Location: double getLatitude()>
<android.view.Display: int getHeight()>
<java.nio.CharBuffer: java.lang.String toString()>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.os.Message: android.os.Bundle getData()>
<java.util.Calendar: int get(int)>
<java.nio.FloatBuffer: java.nio.FloatBuffer put(java.nio.FloatBuffer)>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.view.Display: int getWidth()>
<java.util.AbstractSequentialList: java.lang.Object get(int)>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.view.View: android.content.Context getContext()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.lang.Class: java.lang.String getName()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<java.util.ArrayList: java.lang.Object get(int)>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<android.os.Bundle: int getInt(java.lang.String)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.content.ComponentName: android.content.ComponentName clone()>
<java.net.URL: java.lang.String getQuery()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<java.io.File: java.lang.String[] list()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<java.math.BigInteger: java.math.BigInteger not()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<java.lang.Class: java.lang.Object newInstance()>
<java.net.URL: java.lang.String getRef()>
<java.lang.String: java.lang.String trim()>
<android.content.ContentValues: java.util.Set valueSet()>
<android.net.NetworkInfo: int getType()>
<android.view.View: int getLeft()>
<java.io.RandomAccessFile: long length()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<java.util.regex.Matcher: java.lang.String group()>
<android.view.MotionEvent: float getRawY()>
<android.widget.RemoteViews: int getLayoutId()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.view.MotionEvent: float getX()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<java.util.Random: double nextDouble()>
<java.nio.Buffer: java.nio.Buffer clear()>
<java.math.BigInteger: long longValue()>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<android.util.SparseArray: android.util.SparseArray clone()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.widget.AdapterView: int getSelectedItemPosition()>
<android.view.View: int getId()>
<java.net.URL: java.lang.String getPath()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<java.io.File: java.lang.String getName()>
<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<java.util.Scanner: java.lang.Object next()>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<java.text.Collator: int compare(java.lang.Object,java.lang.Object)>
<java.io.File: java.io.File[] listFiles()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<org.json.JSONObject: int getInt(java.lang.String)>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<java.io.File: java.lang.String toString()>
<java.io.File: java.io.File getAbsoluteFile()>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<java.nio.Buffer: java.nio.Buffer rewind()>
<java.util.zip.CRC32: long getValue()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<java.io.File: java.lang.String getParent()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.app.Activity: android.view.Window getWindow()>
<java.util.HashMap: java.util.Set keySet()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.view.KeyEvent: int getKeyCode()>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>
<android.content.Intent: android.net.Uri getData()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
