<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<java.lang.Class: int getModifiers()>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<java.lang.Integer: java.lang.String toString()>
<android.support.v4.view.ViewCompatJB: java.lang.Object getAccessibilityNodeProvider(android.view.View)>
<java.net.URLConnection: java.lang.String getContentType()>
<java.lang.Class: java.lang.String getCanonicalName()>
<android.widget.Scroller: int getCurrY()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.net.HttpURLConnection: java.lang.String getContentEncoding()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>
<android.webkit.WebView: float getScale()>
<java.net.Socket: boolean getTcpNoDelay()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)>
<android.view.accessibility.AccessibilityRecord: int getWindowId()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<java.lang.reflect.Field: long getLong(java.lang.Object)>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)>
<android.graphics.Bitmap: int getWidth()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<java.security.MessageDigest: byte[] digest()>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>
<java.util.AbstractList: java.util.Iterator iterator()>
<android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)>
<java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: java.util.Set keySet()>
<android.view.View: float getY()>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>
<android.widget.Scroller: int getDuration()>
<android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)>
<android.widget.CursorAdapter: java.lang.Object getItem(int)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<java.lang.Thread: java.lang.String getName()>
<android.os.Bundle: java.lang.Object clone()>
<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>
<android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>
<android.widget.Scroller: float getCurrVelocity()>
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
<java.net.URI: java.lang.String getScheme()>
<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<android.view.View: int getVisibility()>
<java.net.URLConnection: java.lang.String getContentEncoding()>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<android.widget.VideoView: int getDuration()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<java.lang.Float: float floatValue()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.reflect.Field: java.lang.Class getType()>
<android.view.accessibility.AccessibilityRecord: int getScrollX()>
<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<android.webkit.ConsoleMessage: java.lang.String message()>
<android.view.KeyEvent: int getMetaState()>
<android.os.StatFs: int getAvailableBlocks()>
<java.util.concurrent.FutureTask: java.lang.Object get()>
<android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
<java.util.Locale: java.lang.String getCountry()>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<java.text.Collator: java.text.Collator getInstance()>
<java.lang.String: char[] toCharArray()>
<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()>
<android.content.res.Resources: boolean getBoolean(int)>
<android.view.View: java.lang.Object getTag()>
<java.lang.reflect.Method: java.lang.String getName()>
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.app.Notification$Builder: android.app.Notification getNotification()>
<android.support.v4.view.ViewPager: int getCurrentItem()>
<java.lang.Class: java.lang.String getSimpleName()>
<android.content.Intent: java.lang.String getAction()>
<android.view.ViewGroup: int getChildCount()>
<java.net.URLConnection: java.util.Map getHeaderFields()>
<android.location.Location: double getLongitude()>
<android.support.v4.view.ViewCompatJB: int getImportantForAccessibility(android.view.View)>
<android.app.Activity: android.content.Intent getIntent()>
<android.os.Bundle: long getLong(java.lang.String,long)>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)>
<java.lang.String: java.lang.String toString()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.view.View: android.view.animation.Animation getAnimation()>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>
<android.content.Intent: int getFlags()>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<android.util.SparseIntArray: android.util.SparseIntArray clone()>
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>
<javax.crypto.Mac: byte[] doFinal(byte[])>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()>
<android.view.ViewStub: android.view.View inflate()>
<android.widget.CursorAdapter: int getCount()>
<java.io.File: long getUsableSpace()>
<android.net.TrafficStats: int getThreadStatsTag()>
<android.view.accessibility.AccessibilityRecord: int getToIndex()>
<android.view.View: android.content.Context getContext()>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<android.view.View: int getMeasuredWidth()>
<android.view.View: int getPaddingBottom()>
<android.view.accessibility.AccessibilityRecord: int getFromIndex()>
<java.util.ArrayList: java.lang.Object get(int)>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)>
<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<android.net.Uri$Builder: android.net.Uri build()>
<android.webkit.WebView: int getContentHeight()>
<android.view.View: int getImportantForAccessibility()>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>
<android.view.View$MeasureSpec: int getSize(int)>
<android.view.MotionEvent: int getEdgeFlags()>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.text.ParsePosition: int getIndex()>
<android.widget.CursorAdapter: android.database.Cursor getCursor()>
<java.util.concurrent.TimeUnit: long toMinutes(long)>
<android.location.Location: float getSpeed()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.widget.BaseAdapter: int getItemViewType(int)>
<java.net.URLConnection: java.net.URL getURL()>
<android.widget.AdapterView: long getSelectedItemId()>
<android.content.res.TypedArray: int getInt(int,int)>
<java.util.Calendar: java.util.Date getTime()>
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<java.io.File: java.lang.String getName()>
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<android.view.View: int getTop()>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<java.net.URI: int getPort()>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()>
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
<android.content.Intent: android.content.ComponentName getComponent()>
<java.io.File: java.lang.String toString()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>
<java.util.ArrayList: java.lang.Object[] toArray()>
<android.view.animation.Animation: long getStartTime()>
<java.util.HashMap: java.util.Set keySet()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.view.KeyEvent: int getKeyCode()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<java.lang.Character: char charValue()>
<android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<java.net.Socket: int getLocalPort()>
<java.util.Calendar: int get(int)>
<java.net.InetAddress: java.lang.String getHostAddress()>
<android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>
<android.media.AudioManager: int getMode()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.view.accessibility.AccessibilityEvent: int getRecordCount()>
<java.util.StringTokenizer: java.lang.String nextToken()>
<java.lang.Class: java.lang.annotation.Annotation[] getAnnotations()>
<java.lang.Byte: byte byteValue()>
<android.content.res.Resources: int getInteger(int)>
<android.view.View: int getMeasuredHeight()>
<java.util.LinkedList: java.lang.Object peek()>
<java.lang.ThreadLocal: java.lang.Object get()>
<java.net.Socket: int getSoTimeout()>
<android.graphics.Bitmap: int getHeight()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<java.net.InetAddress: java.lang.String getHostName()>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.net.Socket: java.net.InetAddress getLocalAddress()>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: android.os.Parcelable getParcelableData(java.lang.Object)>
<java.net.URL: java.lang.String getProtocol()>
<java.net.URI: java.lang.String getRawPath()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<android.view.accessibility.AccessibilityRecord: int getItemCount()>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<java.security.KeyStore: java.lang.String getDefaultType()>
<java.util.HashMap: java.util.Collection values()>
<android.animation.ValueAnimator: long getFrameDelay()>
<org.json.JSONArray: int getInt(int)>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
<android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object getBridge()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<org.json.JSONArray: org.json.JSONArray put(boolean)>
<android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>
<android.view.Window: android.view.WindowManager getWindowManager()>
<java.util.Calendar: java.lang.Object clone()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>
<java.io.File: java.io.File getParentFile()>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
<java.lang.Double: double doubleValue()>
<android.view.VelocityTracker: float getXVelocity(int)>
<java.lang.Enum: java.lang.String toString()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>
<android.content.res.Resources: float getDimension(int)>
<android.graphics.Bitmap: int getRowBytes()>
<android.widget.AdapterView: int getLastVisiblePosition()>
<java.lang.Long: java.lang.String toString()>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>
<android.os.HandlerThread: android.os.Looper getLooper()>
<java.util.HashSet: java.util.Iterator iterator()>
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>
<android.view.View: int getHeight()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>
<android.webkit.WebView: java.lang.String getTitle()>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<java.net.DatagramSocket: int getLocalPort()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<android.view.MotionEvent: int getPointerId(int)>
<android.app.Dialog: android.view.Window getWindow()>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<java.lang.Float: double doubleValue()>
<android.app.Notification: android.app.Notification clone()>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<android.view.View: int getScrollY()>
<android.widget.AdapterView: int getCount()>
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.view.animation.Animation: long getDuration()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<java.lang.Short: short shortValue()>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getText(java.lang.Object)>
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getYVelocity(android.view.VelocityTracker,int)>
<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>
<java.security.KeyStore: java.security.cert.Certificate[] getCertificateChain(java.lang.String)>
<javax.net.ServerSocketFactory: javax.net.ServerSocketFactory getDefault()>
<android.view.VelocityTracker: float getYVelocity(int)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<android.view.ViewGroup: int getDescendantFocusability()>
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<java.util.concurrent.TimeUnit: long toHours(long)>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>
<java.net.URL: java.lang.String getQuery()>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>
<org.json.JSONArray: org.json.JSONArray put(double)>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
<java.net.InetAddress: java.net.InetAddress getLocalHost()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<java.net.URL: java.lang.String getRef()>
<java.io.RandomAccessFile: long length()>
<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<java.lang.Enum: java.lang.String name()>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<java.net.Socket: java.io.InputStream getInputStream()>
<android.view.View: int getScrollX()>
<android.view.accessibility.AccessibilityNodeInfo: int getActions()>
<java.util.TreeMap: java.util.Set entrySet()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
<android.os.Handler: android.os.Looper getLooper()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.widget.AdapterView: int getSelectedItemPosition()>
<android.support.v4.view.PagerAdapter: float getPageWidth(int)>
<java.net.URL: java.lang.String getPath()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<java.net.Socket: boolean getKeepAlive()>
<android.view.View: int getPaddingTop()>
<java.net.DatagramPacket: java.net.InetAddress getAddress()>
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitAll()>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
<android.os.Bundle: long getLong(java.lang.String)>
<java.net.DatagramPacket: int getPort()>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<org.json.JSONObject: int getInt(java.lang.String)>
<java.io.File: java.io.File getAbsoluteFile()>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>
<java.text.DateFormat: java.util.TimeZone getTimeZone()>
<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<java.io.FileInputStream: java.io.FileDescriptor getFD()>
<android.content.Intent: android.net.Uri getData()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getPackageName(java.lang.Object)>
<javax.net.ServerSocketFactory: java.net.ServerSocket createServerSocket()>
<android.util.SparseArray: java.lang.Object get(int)>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<java.net.DatagramSocket: int getSoTimeout()>
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.util.List getText(java.lang.Object)>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<android.view.MotionEvent: float getX(int)>
<android.content.Context: java.lang.String getString(int)>
<android.view.View: int getPaddingLeft()>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.Object getSource(java.lang.Object)>
<android.net.Uri$Builder: java.lang.String toString()>
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.net.Uri$Builder: android.net.Uri$Builder query(java.lang.String)>
<android.view.KeyEvent: int getAction()>
<android.widget.TextView: android.text.TextPaint getPaint()>
<android.content.res.Resources: java.lang.String getString(int)>
<android.content.res.TypedArray: int getColor(int,int)>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>
<android.widget.VideoView: int getCurrentPosition()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<java.io.Reader: int read(char[])>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.app.Activity: android.view.WindowManager getWindowManager()>

<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>
<android.view.Display: int getOrientation()>
<android.os.StatFs: int getBlockSize()>
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>
<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<java.util.AbstractMap: java.util.Collection values()>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<android.view.View: int getOverScrollMode()>
<android.widget.EditText: android.text.Editable getText()>
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)>
<java.net.URL: java.lang.String toString()>
<java.util.AbstractCollection: java.lang.String toString()>
<java.lang.StackTraceElement: int getLineNumber()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getChild(java.lang.Object,int)>
<java.net.URI: java.lang.String getAuthority()>
<java.util.Date: long getTime()>
<android.view.VelocityTracker: float getXVelocity()>
<org.json.JSONObject: java.util.Iterator keys()>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.io.File: java.lang.String getPath()>
<java.math.BigInteger: byte[] toByteArray()>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<java.util.AbstractMap: java.lang.String toString()>
<java.util.Random: long nextLong()>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getBeforeText(java.lang.Object)>
<android.hardware.Sensor: int getType()>
<android.app.Activity: java.lang.String getCallingPackage()>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<org.json.JSONObject: double getDouble(java.lang.String)>
<android.app.Dialog: android.content.Context getContext()>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)>
<android.support.v4.view.AccessibilityDelegateCompatJellyBean: java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View)>
<java.lang.StringBuffer: java.lang.String toString()>
<java.lang.System: java.util.Properties getProperties()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>
<android.media.AudioManager: boolean isMusicActive()>
<org.json.JSONObject: long getLong(java.lang.String)>
<android.os.Looper: android.os.Looper getMainLooper()>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<javax.crypto.Cipher: byte[] getIV()>
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<android.widget.CursorAdapter: long getItemId(int)>
<java.text.Format: java.lang.String format(java.lang.Object)>
<android.media.AudioManager: int getRingerMode()>
<android.location.Location: long getTime()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<android.view.View: android.view.ViewParent getParent()>
<android.graphics.Bitmap: int getByteCount()>
<android.content.Intent: java.lang.String getScheme()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<android.os.Bundle: java.util.Set keySet()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()>
<java.util.TimeZone: java.lang.String getID()>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.view.MotionEvent: float getY()>
<java.lang.Boolean: java.lang.String toString()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<android.content.Intent: java.util.Set getCategories()>
<java.util.HashMap: java.util.Set entrySet()>
<java.lang.String: byte[] getBytes(java.lang.String)>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()>
<java.util.Stack: java.lang.Object pop()>
<java.util.LinkedList: java.lang.Object remove()>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.net.HttpURLConnection: int getResponseCode()>
<android.location.Location: double getLatitude()>
<android.media.AudioManager: int getRouting(int)>
<android.view.Display: int getHeight()>
<org.json.JSONArray: double getDouble(int)>
<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>
<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.view.View: int getPaddingRight()>
<android.app.Activity: android.content.ComponentName getComponentName()>
<java.text.SimpleDateFormat: java.text.DateFormatSymbols getDateFormatSymbols()>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<java.lang.Class: java.lang.String getName()>
<android.view.View: int getRight()>
<android.net.Proxy: java.lang.String getDefaultHost()>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<android.os.Bundle: int getInt(java.lang.String)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.view.View: android.os.IBinder getWindowToken()>
<android.view.View: int getBottom()>
<java.util.concurrent.ThreadPoolExecutor: int getActiveCount()>
<org.json.JSONArray: java.lang.String getString(int)>
<android.widget.Scroller: int getCurrX()>
<java.io.File: java.lang.String[] list()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.util.AbstractQueue: java.lang.Object remove()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()>
<java.lang.Class: java.lang.Object newInstance()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>
<java.lang.String: java.lang.String trim()>
<android.net.NetworkInfo: int getType()>
<android.content.Context: java.lang.CharSequence getText(int)>
<android.widget.AdapterView: int getFirstVisiblePosition()>
<android.content.IntentFilter: java.lang.String getAction(int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<org.json.JSONArray: boolean getBoolean(int)>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<java.net.DatagramPacket: int getLength()>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<android.view.accessibility.AccessibilityRecord: int getAddedCount()>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<android.content.res.TypedArray: int getResourceId(int,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<java.net.ServerSocket: int getLocalPort()>
<javax.net.SocketFactory: javax.net.SocketFactory getDefault()>
<android.widget.TextView: int getBaseline()>
<android.view.View: int getId()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<java.net.URLConnection: int getContentLength()>
<android.view.KeyEvent: int getRepeatCount()>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<java.net.URL: java.lang.String toExternalForm()>
<android.location.Location: float getBearing()>
<org.json.JSONArray: org.json.JSONArray put(int)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(java.lang.String)>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>
<java.util.Hashtable: java.lang.Object clone()>
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>
<java.net.DatagramPacket: byte[] getData()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>
<android.content.res.AssetFileDescriptor: long getLength()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.view.View: int[] getDrawableState()>
<java.util.regex.Matcher: java.util.regex.MatchResult toMatchResult()>
<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>
<java.net.URI: java.lang.String toString()>
<android.location.Location: double getAltitude()>
<android.view.View: android.content.res.Resources getResources()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<java.util.concurrent.TimeUnit: long toSeconds(long)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<java.lang.ref.Reference: java.lang.Object get()>
<java.net.ServerSocket: java.net.Socket accept()>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()>
<android.view.ViewGroup: android.view.View findFocus()>
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<android.view.View: int getWidth()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getParent(java.lang.Object)>
<android.app.Activity: android.content.Intent getParentActivityIntent()>
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<java.net.URL: java.lang.String getHost()>
<android.support.v4.view.ViewCompatHC: long getFrameTime()>
<java.util.UUID: java.lang.String toString()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<android.view.View$DragShadowBuilder: android.view.View getView()>
<android.animation.Animator: android.animation.Animator clone()>
<android.view.MotionEvent: int getActionMasked()>
<java.lang.reflect.Field: java.lang.String getName()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>
<android.util.SparseIntArray: int get(int)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)>
<java.text.ParsePosition: int getErrorIndex()>
<android.view.MotionEvent: int getAction()>
<android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<java.lang.Class: java.lang.Object[] getEnumConstants()>
<java.lang.Object: java.lang.Object clone()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>
<java.util.Locale: java.lang.String getDisplayLanguage()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<java.util.Stack: java.lang.Object peek()>
<java.util.Vector: java.util.Enumeration elements()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<java.net.Socket: int getSoLinger()>
<android.content.ComponentName: java.lang.String getPackageName()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()>
<android.view.View$MeasureSpec: int getMode(int)>
<java.net.URL: java.lang.Object getContent()>
<android.location.Location: float getAccuracy()>
<android.view.accessibility.AccessibilityRecord: int getScrollY()>
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<android.widget.Scroller: int getFinalX()>
<java.net.URLConnection: java.util.Map getRequestProperties()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.util.TreeMap: java.util.Set keySet()>
<android.app.ActivityManager: int getMemoryClass()>
<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.net.Socket: int getPort()>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<java.util.Locale: java.util.Locale getDefault()>
<android.support.v4.view.AccessibilityDelegateCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)>
<org.json.JSONArray: java.lang.Object get(int)>
<java.lang.String: byte[] getBytes()>
<java.text.SimpleDateFormat: java.lang.String toPattern()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<org.json.JSONTokener: java.lang.Object nextValue()>
<org.apache.commons.codec.binary.Base64: byte[] decode(byte[])>
<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLServerSocketFactory getServerSocketFactory()>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<java.net.Authenticator: java.net.Authenticator$RequestorType getRequestorType()>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()>
<android.database.CursorWrapper: android.os.Bundle getExtras()>
<android.content.res.ColorStateList: int getDefaultColor()>
<android.content.Intent: java.lang.String getType()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()>
<java.net.Socket: java.net.InetAddress getInetAddress()>
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<java.lang.Long: long longValue()>
<java.lang.Throwable: java.lang.String getMessage()>
<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>
<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<java.util.LinkedList: java.lang.Object get(int)>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<android.os.Bundle: int getInt(java.lang.String,int)>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface$OnCancelListener)>
<android.content.res.Resources: int getColor(int)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.os.Message: android.os.Bundle getData()>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
<android.view.Display: int getWidth()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<android.widget.TextView: java.lang.CharSequence getText()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.content.res.TypedArray: int getInteger(int,int)>
<android.app.Notification$Builder: android.app.Notification build()>
<java.util.Locale: java.lang.String getLanguage()>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)>
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>
<android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
<org.json.JSONArray: long getLong(int)>
<android.view.View: int getLeft()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>
<android.os.Bundle: java.lang.Object get(java.lang.String)>
<android.view.MotionEvent: float getX()>
<java.io.ObjectInputStream: java.lang.String readUTF()>
<java.util.Random: double nextDouble()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<android.webkit.WebView: java.lang.String getUrl()>
<android.app.Activity: android.content.ComponentName getCallingActivity()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.view.VelocityTracker: float getYVelocity()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.content.res.TypedArray: java.lang.String getString(int)>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<java.lang.Throwable: java.lang.Throwable getCause()>
<org.json.JSONArray: org.json.JSONArray put(long)>
<java.io.File: java.io.File[] listFiles()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.view.MotionEvent: float getY(int)>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<java.io.File: java.lang.String getParent()>
<android.app.Activity: android.view.Window getWindow()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.lang.Thread: int getPriority()>
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>
<android.app.Activity: android.app.Application getApplication()>
<java.io.StringWriter: java.lang.String toString()>
