<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<android.location.Location: double getAltitude()>
<android.view.View: android.content.res.Resources getResources()>
<org.apache.http.auth.AuthScope: int getPort()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<org.apache.http.auth.AuthScope: java.lang.String getScheme()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<java.net.URLConnection: java.lang.String getContentType()>
<android.content.Context: java.lang.String getString(int)>
<android.view.View: int getPaddingLeft()>
<java.lang.Byte: byte byteValue()>
<android.app.Activity: android.app.ActionBar getActionBar()>
<android.widget.Scroller: int getCurrY()>
<android.view.View: int getMeasuredHeight()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.util.Date: java.lang.String toGMTString()>
<java.lang.ref.Reference: java.lang.Object get()>
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<android.graphics.Bitmap: int getHeight()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.content.res.Resources: java.lang.String getString(int)>
<android.view.KeyEvent: int getAction()>
<android.view.View: int getWidth()>
<java.lang.reflect.Field: long getLong(java.lang.Object)>
<java.net.URI: java.lang.String getHost()>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.graphics.Bitmap: int getWidth()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<android.widget.ArrayAdapter: int getCount()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
<java.net.URL: java.lang.String getHost()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<java.util.UUID: java.lang.String toString()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<java.net.URL: java.lang.String getProtocol()>
<java.security.MessageDigest: byte[] digest()>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.reflect.Field: java.lang.String getName()>
<java.util.WeakHashMap: java.util.Set keySet()>
<android.view.Display: int getOrientation()>

<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<java.lang.StringBuilder: java.lang.String toString()>
<android.view.View: android.view.View getRootView()>
<android.app.DialogFragment: android.app.Dialog getDialog()>
<java.util.HashMap: java.util.Collection values()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<android.app.Fragment: android.os.Bundle getArguments()>
<java.lang.reflect.Method: int getModifiers()>
<android.view.MotionEvent: int getAction()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.lang.Object: java.lang.Object clone()>
<org.apache.http.auth.AuthScope: java.lang.String getRealm()>
<android.widget.TextView: android.text.Editable getEditableText()>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.widget.EditText: android.text.Editable getText()>
<java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>
<android.location.LocationProvider: int getAccuracy()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<java.lang.Double: double doubleValue()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<java.lang.reflect.Proxy: java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object)>
<java.lang.Thread: java.lang.String getName()>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<java.lang.StackTraceElement: int getLineNumber()>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<java.lang.Enum: java.lang.String toString()>
<java.net.URI: java.lang.String getScheme()>
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
<java.util.Date: long getTime()>
<android.view.MotionEvent: int getSource()>
<android.view.View: android.os.Handler getHandler()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<java.lang.reflect.Field: byte getByte(java.lang.Object)>
<java.net.URLConnection: java.lang.String getContentEncoding()>
<java.net.URI: java.lang.String getPath()>
<android.content.res.Resources: float getDimension(int)>
<android.view.View: int getVisibility()>
<android.view.View: int getSystemUiVisibility()>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<android.graphics.Bitmap: int getRowBytes()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<java.lang.Thread: java.lang.Thread$State getState()>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<android.os.Looper: java.lang.Thread getThread()>
<java.lang.Float: float floatValue()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.lang.reflect.Field: java.lang.Class getType()>
<android.view.View$MeasureSpec: int getMode(int)>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<android.hardware.Sensor: int getType()>
<android.content.res.Resources: int getInteger(int)>
<java.lang.reflect.Field: float getFloat(java.lang.Object)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<org.json.JSONObject: double getDouble(java.lang.String)>
<java.util.HashSet: java.util.Iterator iterator()>
<android.location.Location: float getAccuracy()>
<java.lang.reflect.Field: short getShort(java.lang.Object)>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
<android.app.Fragment: android.app.Activity getActivity()>
<android.view.View: int getHeight()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>
<android.app.Activity: android.app.FragmentManager getFragmentManager()>
<android.app.ActivityManager: int getMemoryClass()>
<java.lang.Thread: long getId()>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<java.util.Locale: java.util.Locale getDefault()>
<java.lang.String: char[] toCharArray()>
<android.os.Looper: android.os.Looper getMainLooper()>
<org.json.JSONObject: long getLong(java.lang.String)>
<org.json.JSONArray: java.lang.Object get(int)>
<android.widget.TextView: float getTextSize()>
<android.app.Dialog: android.view.Window getWindow()>
<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<android.content.res.Resources: boolean getBoolean(int)>
<android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.location.Location: java.lang.String getProvider()>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<android.widget.CursorAdapter: long getItemId(int)>
<android.view.View: java.lang.Object getTag()>
<java.io.StringWriter: java.lang.String toString()>
<android.location.Location: long getTime()>
<android.app.Notification: android.app.Notification clone()>
<java.lang.reflect.Method: java.lang.String getName()>
<android.widget.ViewAnimator: android.view.View getCurrentView()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<org.apache.http.auth.AuthScope: java.lang.String getHost()>
<android.view.Display: int getDisplayId()>
<android.content.Intent: java.lang.String getAction()>
<android.view.View: android.view.ViewParent getParent()>
<android.view.ViewGroup: int getChildCount()>
<java.net.URLConnection: java.util.Map getHeaderFields()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<java.net.URL: java.lang.String getFile()>
<java.lang.Short: short shortValue()>
<android.location.Location: double getLongitude()>
<java.lang.Class: java.lang.String getSimpleName()>
<android.widget.Scroller: int getFinalY()>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<android.app.Activity: android.content.Intent getIntent()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<java.lang.Throwable: java.lang.String getMessage()>
<java.lang.Long: long longValue()>
<android.content.ContextWrapper: java.lang.String getPackageCodePath()>
<android.view.MotionEvent: float getY()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<android.preference.ListPreference: java.lang.String getValue()>
<java.lang.String: byte[] getBytes(java.lang.String)>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<android.widget.ViewAnimator: int getDisplayedChild()>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.net.HttpURLConnection: int getResponseCode()>
<java.lang.reflect.Field: double getDouble(java.lang.Object)>
<android.location.Location: double getLatitude()>
<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<android.view.Display: int getHeight()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.view.View: int getPaddingRight()>
<android.content.ContentValues: java.lang.Object get(java.lang.String)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<android.app.Activity: android.content.ComponentName getComponentName()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.view.Display: int getWidth()>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<android.view.View: android.content.Context getContext()>
<android.view.View: int getMeasuredWidth()>
<java.lang.Class: java.lang.String getName()>
<android.content.res.Resources: int[] getIntArray(int)>
<java.util.ArrayList: java.lang.Object get(int)>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.content.ComponentName: android.content.ComponentName clone()>
<java.lang.reflect.Field: int getModifiers()>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<java.io.FileInputStream: long skip(long)>
<android.widget.TextView: java.lang.CharSequence getText()>
<android.util.LruCache: java.lang.Object get(java.lang.Object)>
<org.json.JSONArray: java.lang.String getString(int)>
<android.net.Uri$Builder: android.net.Uri build()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.view.View: android.os.IBinder getWindowToken()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<java.lang.Class: java.lang.Object newInstance()>
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable mutate()>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<android.view.View$MeasureSpec: int getSize(int)>
<java.lang.String: java.lang.String trim()>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>
<android.net.NetworkInfo: int getType()>
<android.view.View: int getLeft()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.widget.CursorAdapter: android.database.Cursor getCursor()>
<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.view.MotionEvent: float getX()>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<android.widget.TextView: int getInputType()>
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.util.SparseArray: android.util.SparseArray clone()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.widget.AdapterView: int getSelectedItemPosition()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.net.URLConnection: int getContentLength()>
<java.lang.reflect.Field: char getChar(java.lang.Object)>
<java.io.File: java.lang.String getName()>
<android.view.KeyEvent: int getRepeatCount()>
<android.view.KeyEvent: java.lang.String getCharacters()>
<android.view.View: int getSuggestedMinimumHeight()>
<android.hardware.Camera$Parameters: java.util.List getSupportedColorEffects()>
<java.io.File: java.io.File[] listFiles()>
<java.net.URI: int getPort()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<org.json.JSONObject: int getInt(java.lang.String)>
<android.view.View: int getSuggestedMinimumWidth()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<java.io.File: java.lang.String toString()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<java.util.ArrayList: java.lang.Object[] toArray()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>
<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>
<android.app.Activity: android.view.Window getWindow()>
<java.util.HashMap: java.util.Set keySet()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.view.KeyEvent: int getKeyCode()>
<java.lang.Character: char charValue()>
<java.util.zip.ZipEntry: long getCrc()>
<java.io.FileInputStream: java.io.FileDescriptor getFD()>
<android.content.res.AssetFileDescriptor: long getLength()>
