<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.util.SparseArray: java.lang.Object get(int)>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<java.net.URLConnection: java.lang.String getContentType()>
<android.content.Context: java.lang.String getString(int)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<android.view.View: int getPaddingLeft()>
<java.lang.Class: java.lang.String getCanonicalName()>
<android.widget.Scroller: int getCurrY()>
<android.view.View: int getMeasuredHeight()>
<java.util.Date: java.lang.String toGMTString()>
<java.lang.ref.Reference: java.lang.Object get()>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<java.lang.ThreadLocal: java.lang.Object get()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<android.graphics.Bitmap: int getHeight()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<java.net.HttpURLConnection: java.lang.String getContentEncoding()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<android.content.res.Resources: java.lang.String getString(int)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.view.View: int getWidth()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<android.view.LayoutInflater: android.content.Context getContext()>
<android.widget.TextView: android.text.TextPaint getPaint()>
<android.graphics.Bitmap: int getWidth()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<android.widget.ArrayAdapter: int getCount()>
<android.view.View: java.lang.Object getTag(int)>
<java.security.Provider: java.util.Set entrySet()>
<android.os.StatFs: int getBlockCount()>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.content.ContentProvider: android.content.Context getContext()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.util.LinkedList: java.lang.Object removeLast()>
<java.util.UUID: java.lang.String toString()>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>
<java.security.MessageDigest: byte[] digest()>
<java.io.Reader: int read(char[])>
<java.lang.String: byte[] getBytes(java.lang.String)>
<org.json.JSONStringer: org.json.JSONStringer endArray()>
<android.animation.Animator: android.animation.Animator clone()>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<java.util.AbstractList: java.util.Iterator iterator()>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.app.Activity: android.view.WindowManager getWindowManager()>

<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.os.StatFs: int getBlockSize()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<java.lang.StringBuilder: java.lang.String toString()>
<android.content.pm.Signature: byte[] toByteArray()>
<java.util.Hashtable: java.util.Enumeration keys()>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<android.telephony.TelephonyManager: int getNetworkType()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.view.MotionEvent: int getAction()>
<android.view.Window: android.view.WindowManager getWindowManager()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.lang.Object: java.lang.Object clone()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<android.widget.EditText: android.text.Editable getText()>
<java.io.File: java.io.File getParentFile()>
<java.lang.Thread: java.lang.String getName()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<java.util.Vector: java.lang.Object lastElement()>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<java.lang.Enum: java.lang.String toString()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>
<java.util.Date: long getTime()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<android.view.VelocityTracker: float getXVelocity()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<android.view.View: int getVisibility()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<java.io.File: java.lang.String getPath()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.view.View$MeasureSpec: int getMode(int)>
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentType()>
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<android.app.Dialog: android.content.Context getContext()>
<android.view.View: int getHeight()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.os.StatFs: int getAvailableBlocks()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.webkit.WebView: java.lang.String getTitle()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<android.content.Intent: android.os.Bundle getExtras()>
<android.content.ComponentName: java.lang.String getClassName()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.content.Intent: android.net.Uri getData()>
<java.lang.System: java.util.Properties getProperties()>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<android.widget.ListView: int getFooterViewsCount()>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>
<java.lang.String: char[] toCharArray()>
<java.text.Collator: java.text.Collator getInstance()>
<java.util.Locale: java.util.Locale getDefault()>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<org.json.JSONObject: long getLong(java.lang.String)>
<java.lang.String: byte[] getBytes()>
<java.util.Locale: java.lang.String getCountry()>
<android.app.Dialog: android.view.Window getWindow()>
<java.util.LinkedList: java.lang.Object removeFirst()>
<org.json.JSONStringer: org.json.JSONStringer object()>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<android.view.View: java.lang.Object getTag()>
<java.io.StringWriter: java.lang.String toString()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<android.app.Notification: android.app.Notification clone()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>
<android.widget.AdapterView: int getCount()>
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<java.lang.Class: java.lang.String getSimpleName()>
<android.content.Intent: java.lang.String getAction()>
<android.view.View: android.view.ViewParent getParent()>
<android.view.ViewGroup: int getChildCount()>
<java.net.URLConnection: java.util.Map getHeaderFields()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.location.Location: double getLongitude()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<android.app.Activity: android.content.Intent getIntent()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.text.SpannableStringBuilder: java.lang.String toString()>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<android.os.Bundle: java.util.Set keySet()>
<org.xml.sax.SAXException: java.lang.String getMessage()>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.view.Window: android.content.Context getContext()>
<java.lang.Long: long longValue()>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.view.MotionEvent: float getY()>
<javax.xml.parsers.FactoryConfigurationError: java.lang.String getMessage()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<android.media.AudioManager: int getStreamVolume(int)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.util.HashMap: java.util.Set entrySet()>
<android.os.Bundle: int getInt(java.lang.String,int)>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>
<java.util.LinkedList: java.lang.Object remove()>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<java.util.LinkedList: java.lang.Object get(int)>
<java.util.Stack: java.lang.Object pop()>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<java.net.HttpURLConnection: int getResponseCode()>
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>
<java.io.InputStream: long skip(long)>
<android.location.Location: double getLatitude()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>
<android.content.res.Resources: int getColor(int)>
<android.view.Display: int getHeight()>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<org.json.JSONStringer: org.json.JSONStringer array()>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.view.View: int getPaddingRight()>
<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<java.net.URLConnection: boolean getDoInput()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.view.Display: int getWidth()>
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<java.util.AbstractSequentialList: java.lang.Object get(int)>
<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>
<android.view.View: android.content.Context getContext()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.lang.Class: java.lang.String getName()>
<android.view.View: int getMeasuredWidth()>
<android.view.View: int getPaddingBottom()>
<android.view.View: int getRight()>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.os.Bundle: int getInt(java.lang.String)>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.content.ComponentName: android.content.ComponentName clone()>
<java.util.Locale: java.lang.String getLanguage()>
<java.net.URL: java.lang.String getQuery()>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>
<android.widget.TextView: java.lang.CharSequence getText()>
<android.view.View: android.os.IBinder getWindowToken()>
<android.widget.Scroller: int getCurrX()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<java.lang.Class: java.lang.Object newInstance()>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<android.content.res.Resources: android.content.res.Resources getSystem()>
<java.net.URL: java.lang.String getRef()>
<java.lang.String: java.lang.String trim()>
<android.view.View$MeasureSpec: int getSize(int)>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
<org.json.JSONStringer: org.json.JSONStringer endObject()>
<android.content.Context: java.lang.CharSequence getText(int)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<android.telephony.TelephonyManager: int getPhoneType()>
<java.lang.Enum: java.lang.String name()>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.util.Vector: java.lang.Object get(int)>
<android.view.View: int getScrollX()>
<android.os.Bundle: java.lang.Object get(java.lang.String)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.view.MotionEvent: float getX()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()>
<android.webkit.WebView: java.lang.String getUrl()>
<android.util.SparseArray: android.util.SparseArray clone()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.view.View: int getId()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<java.util.Calendar: java.util.Date getTime()>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<java.net.URLConnection: int getContentLength()>
<java.util.Calendar: java.util.TimeZone getTimeZone()>
<java.io.File: java.lang.String getName()>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<java.lang.Throwable: java.lang.Throwable getCause()>
<android.view.View: int getPaddingTop()>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<java.text.Collator: int compare(java.lang.Object,java.lang.Object)>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<java.io.File: java.io.File[] listFiles()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<android.os.Bundle: long getLong(java.lang.String)>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
<org.json.JSONObject: int getInt(java.lang.String)>
<android.content.Intent: android.content.ComponentName getComponent()>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<java.io.File: java.lang.String toString()>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
<java.util.zip.CRC32: long getValue()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()>
<org.apache.http.entity.AbstractHttpEntity: org.apache.http.Header getContentEncoding()>
<android.text.style.URLSpan: java.lang.String getURL()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.app.Activity: android.view.Window getWindow()>
<java.net.URLConnection: boolean getDoOutput()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>
<java.util.Calendar: int get(int)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
