<java.util.Date: long getTime()>
<java.util.HashMap: java.util.Set keySet()>
<java.lang.reflect.Field: int getModifiers()>
<android.view.MotionEvent: int getAction()>
<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()>
<java.io.RandomAccessFile: long getFilePointer()>
<java.net.URI: java.lang.String toASCIIString()>
<java.lang.Class: int getModifiers()>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<org.json.JSONArray: java.lang.String getString(int)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.widget.EditText: android.text.Editable getText()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<android.view.View: android.content.Context getContext()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<android.os.Bundle: int getInt(java.lang.String)>
<java.net.URL: java.lang.String getProtocol()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<java.lang.Enum: java.lang.String toString()>
<java.lang.Number: short shortValue()>
<java.io.File: java.io.File[] listFiles()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.util.Locale: java.util.Locale getDefault()>
<android.os.StatFs: int getAvailableBlocks()>
<android.content.ComponentName: android.content.ComponentName clone()>
<java.util.TimeZone: java.lang.String getID()>
<java.lang.reflect.Method: java.lang.String toGenericString()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<java.lang.reflect.Method: java.lang.Class[] getExceptionTypes()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<java.lang.Class: java.lang.String getSimpleName()>
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.util.Calendar: java.util.Calendar getInstance()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<java.beans.PropertyChangeEvent: java.lang.String getPropertyName()>
<android.widget.Scroller: int getCurrX()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.net.URLConnection: java.lang.String getHeaderFieldKey(int)>
<java.lang.Boolean: java.lang.String toString()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.lang.Double: java.lang.String toString()>
<java.lang.StringBuilder: java.lang.String toString()>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<java.nio.charset.Charset: java.lang.String name()>
<java.util.ArrayList: java.lang.Object[] toArray()>
<java.lang.ClassLoader: java.lang.ClassLoader getParent()>
<java.io.File: java.lang.String getName()>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<java.lang.Integer: java.lang.String toString()>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<java.lang.Character: java.lang.String toString()>
<java.net.URL: java.lang.String toString()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<java.net.URI: java.lang.String toString()>
<java.lang.Float: java.lang.String toString()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.view.View: java.lang.Object getTag(int)>
<java.text.NumberFormat: java.lang.String format(double)>
<android.widget.Scroller: int getCurrY()>
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>
<java.io.RandomAccessFile: long length()>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<java.net.URLConnection: int getContentLength()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>
<android.content.ComponentName: java.lang.String getClassName()>
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
<java.io.File: java.io.File getParentFile()>
<java.io.StringWriter: java.lang.String toString()>
<android.os.Bundle: java.lang.Object get(java.lang.String)>
<java.util.Calendar: java.util.Date getTime()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<java.lang.String: java.lang.String toString()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
<java.lang.reflect.Method: java.lang.String getName()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.view.MotionEvent: float getY()>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
<java.lang.Class: java.lang.Object newInstance()>
<java.lang.Byte: java.lang.String toString()>
<java.util.LinkedList: java.lang.Object getLast()>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<java.net.URLConnection: java.lang.String getHeaderField(int)>
<java.util.ArrayList: java.lang.Object get(int)>
<android.os.Environment: java.io.File getDataDirectory()>
<java.util.Calendar: int get(int)>
<android.app.Activity: android.content.Intent getIntent()>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<java.net.URISyntaxException: java.lang.String getMessage()>
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<java.lang.System: java.lang.String getenv(java.lang.String)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.net.URLConnection: boolean getDoOutput()>
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
<android.os.Message: android.os.Bundle getData()>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<java.net.URI: java.net.URL toURL()>
<java.lang.Throwable: java.lang.String getMessage()>
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.lang.String: char[] toCharArray()>
<java.lang.Number: byte byteValue()>
<android.content.res.Resources: java.lang.String getString(int)>
<java.lang.Long: long longValue()>
<java.lang.String: java.lang.String trim()>
<java.util.LinkedList: java.lang.Object peek()>
<android.widget.TextView: java.lang.CharSequence getText()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<java.lang.reflect.Proxy: java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[])>
<java.util.Currency: java.lang.String toString()>
<android.app.ActivityManager: java.util.List getRunningServices(int)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<java.util.Locale: java.lang.String getCountry()>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<java.util.Calendar: long getTimeInMillis()>
<java.io.Reader: int read(char[])>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<java.net.URL: java.lang.String getFile()>
<java.net.URI: java.lang.String getScheme()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<android.app.Activity: android.app.Application getApplication()>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<java.util.Locale: java.lang.String getLanguage()>
<java.lang.Object: java.lang.Object clone()>
<java.nio.charset.Charset: java.util.SortedMap availableCharsets()>
<java.security.SecureRandom: byte[] generateSeed(int)>
<android.app.Dialog: android.content.Context getContext()>
<java.lang.ref.Reference: java.lang.Object get()>
<android.animation.Animator: android.animation.Animator clone()>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<android.os.StatFs: int getBlockSize()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<java.io.File: java.lang.String getPath()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.lang.StringBuffer: java.lang.String toString()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>

<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<android.view.Display: int getHeight()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.IdentityHashMap: java.lang.Object get(java.lang.Object)>
<java.lang.reflect.Method: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<java.util.Properties: java.util.Enumeration propertyNames()>
<java.net.HttpURLConnection: int getResponseCode()>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.view.Display: int getWidth()>
<java.lang.Class: java.lang.String getName()>
<android.content.Intent: java.lang.String getDataString()>
<java.text.NumberFormat: java.lang.Number parse(java.lang.String)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<java.lang.Throwable: java.lang.Throwable getCause()>
<java.beans.PropertyChangeEvent: java.lang.Object getNewValue()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.view.MotionEvent: float getX()>
<java.lang.ThreadLocal: java.lang.Object get()>
<java.net.URL: java.net.URI toURI()>
<java.util.TreeSet: java.util.Iterator iterator()>
<java.net.URL: java.lang.String getPath()>
<java.lang.Class: java.net.URL getResource(java.lang.String)>
<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>
<android.content.Intent: android.os.Bundle getExtras()>
<java.net.URLConnection: java.net.URL getURL()>
<java.io.File: java.lang.String toString()>
<java.lang.Enum: java.lang.String name()>
<java.net.HttpURLConnection: java.lang.String getRequestMethod()>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<java.lang.reflect.Constructor: int getModifiers()>
<java.lang.reflect.Constructor: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<java.util.HashMap: java.util.Collection values()>
<android.app.Activity: android.view.Window getWindow()>
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<java.util.Vector: java.lang.Object get(int)>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<java.util.AbstractList: java.util.Iterator iterator()>
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>
<java.lang.Short: java.lang.String toString()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>
<java.util.LinkedList: java.lang.Object get(int)>
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<android.content.Intent: java.lang.String getAction()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<java.lang.reflect.Method: int getModifiers()>
<android.view.View: int getId()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<java.util.LinkedList: java.lang.Object getFirst()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<java.net.URI: java.lang.String getSchemeSpecificPart()>
<java.io.File: java.lang.String getParent()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<java.util.AbstractSequentialList: java.lang.Object get(int)>
<android.app.Notification: android.app.Notification clone()>
<java.net.URLConnection: long getLastModified()>
<java.lang.reflect.Field: java.lang.String getName()>
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>
<java.lang.reflect.Method: java.lang.Object getDefaultValue()>
<java.util.Currency: java.util.Currency getInstance(java.lang.String)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<java.util.StringTokenizer: java.lang.String nextToken()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<java.lang.Long: java.lang.String toString()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<java.lang.reflect.Field: java.lang.Class getType()>
<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>
