<java.lang.Class: java.lang.Object[] getEnumConstants()>
<java.lang.ref.Reference: java.lang.Object get()>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int)>
<java.math.BigInteger: long longValue()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.lang.Class: java.lang.String getName()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.view.View: int getId()>
<android.view.View: int getRight()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<android.webkit.WebSettings: android.webkit.WebSettings$TextSize getTextSize()>
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>
<android.view.View: int getTop()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<java.lang.Class: java.lang.String getSimpleName()>
<java.lang.Number: byte byteValue()>
<java.net.URL: java.lang.String toExternalForm()>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<android.view.Display: int getWidth()>
<java.lang.Double: double doubleValue()>
<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<android.widget.AdapterView: android.view.View getEmptyView()>
<java.net.URI: java.lang.String toASCIIString()>
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.util.SparseArray: android.util.SparseArray clone()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<android.content.res.TypedArray: java.lang.String getString(int)>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.view.View: int getMeasuredHeight()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.StringBuilder: java.lang.String toString()>
<java.util.Calendar: int getActualMaximum(int)>
<java.lang.Character: int getType(char)>
<java.util.Locale: java.util.Locale[] getAvailableLocales()>
<java.lang.Object: java.lang.Object clone()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<java.lang.Short: short shortValue()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.lang.String: java.lang.String trim()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.view.View: android.view.ViewParent getParent()>
<java.util.Random: double nextDouble()>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<java.text.MessageFormat: java.text.Format[] getFormats()>
<android.content.ComponentName: android.content.ComponentName clone()>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<android.widget.Scroller: int getCurrX()>
<java.util.Date: long getTime()>
<android.app.Activity: android.content.Intent getIntent()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<java.lang.System: java.util.Properties getProperties()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<java.lang.Character: char charValue()>
<java.lang.ThreadLocal: java.lang.Object get()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.text.Format: java.lang.Object parseObject(java.lang.String)>
<java.util.AbstractMap: int hashCode()>
<android.view.View: android.content.Context getContext()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<android.view.View: int getMeasuredWidth()>
<java.util.UUID: java.lang.String toString()>
<java.net.InetAddress: java.lang.String getHostAddress()>
<android.app.Activity: android.view.WindowManager getWindowManager()>

<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
<java.lang.reflect.Field: java.lang.String getName()>
<java.util.Locale: java.lang.String getVariant()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<java.util.Locale: java.util.Locale getDefault()>
<java.io.InputStream: long skip(long)>
<java.lang.StringBuffer: java.lang.StringBuffer reverse()>
<java.util.Locale: java.lang.String getLanguage()>
<java.util.Calendar: int getActualMinimum(int)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<android.view.View: int getWidth()>
<java.lang.Throwable: java.lang.Throwable getCause()>
<java.io.StringWriter: java.lang.StringBuffer getBuffer()>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<java.util.AbstractSequentialList: java.lang.Object get(int)>
<java.io.StringWriter: java.lang.String toString()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
<java.lang.Float: float floatValue()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.view.View: int getHeight()>
<java.lang.String: char[] toCharArray()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.lang.reflect.Field: int getModifiers()>
<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
<android.view.ViewGroup: int getChildCount()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<android.view.Display: int getHeight()>
<java.util.Calendar: int get(int)>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.view.MotionEvent: float getY()>
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>
<java.util.Calendar: java.lang.Object clone()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()>
<java.util.Calendar: java.util.Date getTime()>
<java.lang.Class: int getModifiers()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<android.view.MotionEvent: float getX()>
<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>
<java.lang.reflect.Field: java.lang.Class getType()>
<java.lang.Long: long longValue()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<java.lang.Byte: byte byteValue()>
<java.text.Format: java.lang.String format(java.lang.Object)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.text.DateFormatSymbols: java.lang.String[] getMonths()>
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<java.lang.Number: short shortValue()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<java.text.MessageFormat: java.lang.String toPattern()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<java.lang.Enum: java.lang.String name()>
<java.lang.Boolean: java.lang.String toString()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>
<java.lang.Throwable: java.lang.String getMessage()>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>
<java.util.StringTokenizer: java.lang.String nextToken()>
<java.text.DateFormatSymbols: java.lang.String[] getEras()>
<java.util.Calendar: java.util.TimeZone getTimeZone()>
<android.view.View: int getBottom()>
<android.view.View: int getLeft()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.content.Context: java.lang.String getString(int)>
<java.lang.Double: float floatValue()>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<java.util.ArrayList: java.lang.Object get(int)>
<java.text.MessageFormat: java.util.Locale getLocale()>
<java.util.Random: float nextFloat()>
<android.os.CountDownTimer: android.os.CountDownTimer start()>
<java.util.Random: long nextLong()>
<java.text.ParsePosition: int getIndex()>
<java.lang.StringBuffer: java.lang.String toString()>
<java.text.SimpleDateFormat: java.lang.String toPattern()>
<java.util.Locale: java.lang.String getCountry()>
<android.animation.Animator: android.animation.Animator clone()>
<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>
<android.app.Activity: android.app.Application getApplication()>
