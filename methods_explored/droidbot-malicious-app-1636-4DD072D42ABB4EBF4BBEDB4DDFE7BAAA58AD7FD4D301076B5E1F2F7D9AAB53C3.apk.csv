<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int)>
<java.lang.Class: java.lang.String getName()>
<android.view.View: int getId()>
<android.provider.Settings$Secure: long getLong(android.content.ContentResolver,java.lang.String)>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<android.app.Activity: android.app.ActionBar getActionBar()>
<android.view.View: int getTop()>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.support.v4.view.PagerAdapter: float getPageWidth(int)>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<android.widget.TextView: java.lang.CharSequence getText()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<java.lang.Class: java.lang.String getCanonicalName()>
<android.net.Uri$Builder: android.net.Uri build()>
<java.lang.Object: java.lang.Object clone()>
<android.text.style.URLSpan: java.lang.String getURL()>
<java.net.URL: java.lang.String getProtocol()>
<android.graphics.Bitmap: int getWidth()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>
<java.lang.reflect.Method: java.lang.String getName()>
<android.app.ActionBar: android.content.Context getThemedContext()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<android.app.Activity: android.content.Intent getIntent()>
<java.lang.Class: java.lang.Object newInstance()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<java.security.MessageDigest: byte[] digest()>
<android.widget.AdapterView: int getSelectedItemPosition()>
<android.content.res.Resources: boolean getBoolean(int)>
<android.content.res.TypedArray: int getInt(int,int)>
<android.view.View: int getMeasuredWidth()>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<java.net.URL: java.lang.String getHost()>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.view.MotionEvent: float getX(int)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.util.ArrayList: java.lang.Object clone()>
<android.view.View: android.content.res.Resources getResources()>
<android.view.View: int getPaddingTop()>
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>
<java.lang.Throwable: java.lang.Throwable getCause()>
<android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<android.net.Proxy: java.lang.String getDefaultHost()>
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.widget.Scroller: int getCurrY()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<java.lang.Float: float floatValue()>
<android.widget.TextView: java.lang.CharSequence getError()>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<android.app.Activity: java.lang.String getCallingPackage()>
<org.apache.http.conn.scheme.SchemeRegistry: java.util.List getSchemeNames()>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.content.res.TypedArray: int getInteger(int,int)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.io.File: java.lang.String getAbsolutePath()>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<java.text.NumberFormat: java.lang.String format(long)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<java.io.ByteArrayOutputStream: java.lang.String toString()>
<android.widget.ArrayAdapter: int getCount()>
<android.os.Handler: android.os.Looper getLooper()>
<android.view.View: int getScrollX()>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<android.app.Activity: android.view.Window getWindow()>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<org.json.JSONArray: java.lang.String getString(int)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.view.MotionEvent: int getEdgeFlags()>
<android.content.res.Resources: int getInteger(int)>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.lang.Enum: java.lang.String name()>
<android.widget.TextView: int getBaseline()>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>
<android.support.v4.view.ViewPager: int getCurrentItem()>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>
<android.content.Context: java.lang.String getString(int)>
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>
<java.util.ArrayList: java.lang.Object get(int)>
<android.content.Intent: java.lang.String getAction()>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.util.Locale: java.lang.String getCountry()>
<android.content.Intent: java.util.Set getCategories()>
<android.view.KeyEvent: int getAction()>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>
<java.text.Collator: java.text.Collator getInstance(java.util.Locale)>
<android.content.ContextWrapper: android.os.Looper getMainLooper()>
<android.view.View: int getOverScrollMode()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<java.text.NumberFormat: java.lang.String format(double)>
<android.view.View: int getPaddingLeft()>
<android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.app.Dialog: android.content.Context getContext()>
<java.util.HashMap: java.util.Collection values()>
<android.view.View: int getMeasuredHeight()>
<android.view.View: int getScrollY()>
<android.widget.RadioGroup: int getCheckedRadioButtonId()>
<android.view.View: android.view.ViewParent getParent()>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<android.content.ComponentName: java.lang.String getPackageName()>
<android.widget.TextView: java.lang.CharSequence getHint()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.view.View$MeasureSpec: int getSize(int)>
<android.view.ViewConfiguration: float getScrollFriction()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
<java.text.NumberFormat: java.text.NumberFormat getIntegerInstance()>
<java.lang.ThreadLocal: java.lang.Object get()>
<android.content.Intent: android.os.Bundle getExtras()>
<android.view.View: android.content.Context getContext()>
<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()>
<android.content.res.Resources: java.lang.String getResourceName(int)>
<android.content.res.Resources: float getDimension(int)>
<android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<java.io.InputStream: long skip(long)>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<android.animation.Keyframe: float getFraction()>
<android.animation.PropertyValuesHolder: java.lang.Object getAnimatedValue()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<java.io.File: java.io.File[] listFiles()>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
<java.text.Collator: java.text.Collator getInstance()>
<android.view.Display: int getHeight()>
<java.lang.Thread: long getId()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<java.util.LinkedList: java.lang.Object removeFirst()>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<android.view.View: int getHorizontalFadingEdgeLength()>
<java.io.ObjectInputStream: byte readByte()>
<android.view.KeyEvent: int getRepeatCount()>
<android.animation.Keyframe: java.lang.Class getType()>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<android.content.res.TypedArray: int getResourceId(int,int)>
<android.content.res.TypedArray: int getColor(int,int)>
<android.view.ViewGroup: int getDescendantFocusability()>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>
<android.app.Notification: android.app.Notification clone()>
<org.json.JSONObject: java.util.Iterator keys()>
<java.net.InetAddress: byte[] getAddress()>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.net.Uri: int hashCode()>
<android.content.res.Resources: java.lang.String getString(int)>
<android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.widget.AdapterView: int getFirstVisiblePosition()>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>
<android.util.SparseArray: java.lang.Object get(int)>
<android.view.ViewGroup: android.view.View getFocusedChild()>
<java.net.URL: java.lang.String toString()>
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.content.Intent: java.lang.String toString()>
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>
<java.util.ArrayList: java.lang.Object[] toArray()>
<java.util.Stack: java.lang.Object pop()>
<android.view.View: int getBottom()>
<java.nio.Buffer: java.nio.Buffer clear()>
<android.view.View: int getLeft()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>
<android.os.Environment: java.io.File getDataDirectory()>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<java.util.Random: long nextLong()>
<java.util.Random: float nextFloat()>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>
<android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
<java.lang.ref.Reference: java.lang.Object get()>
<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.view.MotionEvent: float getY(int)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.os.Looper: android.os.Looper getMainLooper()>
<android.view.View: int getRight()>
<android.app.Dialog: android.view.Window getWindow()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<java.lang.Class: java.lang.String getSimpleName()>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
<java.lang.String: byte[] getBytes()>
<android.view.View: android.os.IBinder getWindowToken()>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
<java.util.LinkedList: java.lang.Object get(int)>
<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.content.res.TypedArray: java.lang.String getString(int)>
<java.util.concurrent.TimeUnit: long toMillis(long)>
<android.view.VelocityTracker: float getXVelocity(int)>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()>
<android.view.ViewGroup: int[] onCreateDrawableState(int)>
<android.app.AlertDialog: android.widget.Button getButton(int)>
<java.util.Date: long getTime()>
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>
<android.view.ViewStub: android.view.View inflate()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>
<android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()>
<android.view.View: int getVisibility()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<java.io.ObjectInputStream: long readLong()>
<android.view.View: java.lang.Object getTag()>
<android.graphics.Bitmap: int getRowBytes()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<android.view.Window: android.view.View findViewById(int)>
<android.view.View: int getHeight()>
<android.net.Uri$Builder: java.lang.String toString()>
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<java.util.Calendar: int get(int)>
<android.view.ViewGroup: int getChildCount()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<android.content.res.TypedArray: float getFloat(int,float)>
<android.view.MotionEvent: float getY()>
<android.app.backup.BackupDataInput: int getDataSize()>
<android.widget.TextView: int getInputType()>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>
<java.lang.Class: int getModifiers()>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.os.StatFs: int getAvailableBlocks()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>
<java.lang.Long: long longValue()>
<java.io.ObjectInputStream: java.lang.String readUTF()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<android.view.MotionEvent: int getPointerCount()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.view.VelocityTracker: float getXVelocity()>
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)>
<java.io.File: java.lang.String getPath()>
<com.google.common.collect.Lists: java.util.ArrayList newArrayList()>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<java.util.HashMap: java.util.Set keySet()>
<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>
<android.content.Intent: java.lang.String getDataString()>
<java.util.Stack: java.lang.Object peek()>
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>
<android.app.Activity: int getRequestedOrientation()>
<android.view.KeyEvent: int getMetaState()>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<android.content.res.ColorStateList: int getDefaultColor()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.appwidget.AppWidgetProviderInfo: android.appwidget.AppWidgetProviderInfo clone()>
<android.animation.Animator: android.animation.Animator clone()>
<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>
<android.content.pm.Signature: byte[] toByteArray()>
<java.lang.Enum: java.lang.String toString()>
<android.view.MotionEvent: int getAction()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<java.lang.Integer: java.lang.String toString()>
<java.lang.Long: java.lang.String toString()>
<java.lang.reflect.Method: int getModifiers()>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>
<android.view.View: int getPaddingRight()>
<android.view.View: int[] getDrawableState()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.view.Display: int getWidth()>
<java.lang.Double: double doubleValue()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<android.os.Looper: java.lang.Thread getThread()>
<android.app.backup.BackupDataInput: java.lang.String getKey()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<java.lang.StringBuilder: java.lang.String toString()>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.io.File: java.io.File getParentFile()>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.lang.String: java.lang.String trim()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<java.util.HashSet: java.util.Iterator iterator()>
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<android.widget.Scroller: int getCurrX()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.View$MeasureSpec: int getMode(int)>
<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<java.util.Vector: java.lang.Object get(int)>
<android.graphics.Bitmap: int getHeight()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.view.ViewGroup: android.view.View findFocus()>
<java.nio.Buffer: java.nio.Buffer flip()>
<android.widget.EditText: android.text.Editable getText()>
<android.content.res.Resources: int getColor(int)>

<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
<java.util.Locale: java.util.Locale getDefault()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<java.util.Locale: java.lang.String getLanguage()>
<android.view.View: int getWidth()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>
<android.view.KeyEvent: int getKeyCode()>
<android.widget.Scroller: int getDuration()>
<android.content.Intent: android.content.ComponentName getComponent()>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<org.apache.http.entity.HttpEntityWrapper: java.io.InputStream getContent()>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>
<android.view.View: int getPaddingBottom()>
<java.lang.String: char[] toCharArray()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.preference.Preference: java.lang.String getKey()>
<android.content.res.Resources: int getDimensionPixelOffset(int)>
<android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>
<android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
<java.net.URI: java.lang.String toString()>
<android.app.Activity: android.content.ComponentName getComponentName()>
<java.lang.String: java.lang.String toString()>
<android.content.Intent: int getFlags()>
<java.text.NumberFormat: java.text.NumberFormat getNumberInstance()>
<android.view.MotionEvent: int getPointerId(int)>
<android.view.MotionEvent: float getX()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.animation.ValueAnimator: long getCurrentPlayTime()>
<android.widget.AdapterView: int getPositionForView(android.view.View)>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<java.lang.Boolean: java.lang.String toString()>
<android.os.StatFs: int getBlockSize()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.content.Intent: android.net.Uri getData()>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>
<java.io.File: java.lang.String getName()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
