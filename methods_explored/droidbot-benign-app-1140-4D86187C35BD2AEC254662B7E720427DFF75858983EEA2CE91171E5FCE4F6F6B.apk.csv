<android.net.wifi.ScanResult: java.lang.String toString()>
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyLog()>
<android.os.CountDownTimer: android.os.CountDownTimer start()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<java.lang.Class: int getModifiers()>
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedClosableObjects()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<java.util.StringTokenizer: java.lang.String nextToken()>
<android.view.MotionEvent: float getX(int)>
<android.content.Context: java.lang.String getString(int)>
<android.view.View: int getPaddingLeft()>
<java.lang.Byte: byte byteValue()>
<java.lang.Class: java.lang.String getCanonicalName()>
<java.net.ServerSocket: java.net.Socket accept()>
<android.view.View: int getMeasuredHeight()>
<android.widget.Scroller: int getCurrY()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.util.Date: java.lang.String toGMTString()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<android.graphics.Bitmap: int getHeight()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.content.res.Resources: java.lang.String getString(int)>
<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>
<android.view.View: int getWidth()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<java.text.DateFormat: java.text.DateFormat getTimeInstance()>
<android.graphics.Bitmap: int getWidth()>
<android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<android.net.wifi.WifiManager: java.util.List getScanResults()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectDiskWrites()>
<java.io.Reader: int read(char[])>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.ArrayList: java.util.Iterator iterator()>
<java.util.AbstractList: java.util.Iterator iterator()>
<android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)>
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)>
<java.lang.String: java.lang.String toString()>
<android.app.Activity: android.view.WindowManager getWindowManager()>

<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>
<android.view.Display: int getOrientation()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<android.view.View: android.view.View getRootView()>
<java.util.logging.LogRecord: java.lang.String getSourceClassName()>
<java.util.HashMap: java.util.Collection values()>
<java.util.logging.LogRecord: long getMillis()>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.lang.StackTraceElement: java.lang.String toString()>
<java.util.logging.LogRecord: java.lang.Throwable getThrown()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<android.view.MotionEvent: int getAction()>
<android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.lang.Object: java.lang.Object clone()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<android.widget.EditText: android.text.Editable getText()>
<java.io.File: java.io.File getParentFile()>
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder detectLeakedSqlLiteObjects()>
<android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>
<java.lang.Integer: long longValue()>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
<java.lang.Enum: java.lang.String toString()>
<android.view.VelocityTracker: float getXVelocity(int)>
<java.util.Date: long getTime()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.view.View: android.os.Handler getHandler()>
<android.view.VelocityTracker: float getXVelocity()>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<android.view.View: int getVisibility()>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<java.util.Stack: java.lang.Object peek()>
<java.util.Vector: java.util.Enumeration elements()>
<java.io.File: java.lang.String getPath()>
<java.lang.Integer: double doubleValue()>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<java.math.BigInteger: byte[] toByteArray()>
<java.nio.charset.Charset: java.lang.String name()>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<android.net.wifi.WifiConfiguration: java.lang.String toString()>
<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>
<java.lang.Float: float floatValue()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.widget.ProgressBar: int getProgress()>
<java.text.NumberFormat: java.lang.String format(long)>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<android.app.Dialog: android.content.Context getContext()>
<java.util.HashSet: java.util.Iterator iterator()>
<java.math.BigInteger: double doubleValue()>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<android.view.View: int getHeight()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.app.Fragment: android.view.View getView()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.util.Date: java.lang.String toString()>
<android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectNetwork()>
<java.lang.String: char[] toCharArray()>
<android.view.MotionEvent: int getPointerCount()>
<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<java.lang.String: byte[] getBytes()>
<android.view.MotionEvent: int getPointerId(int)>
<android.app.Dialog: android.view.Window getWindow()>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>
<java.text.SimpleDateFormat: java.lang.String toPattern()>
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy build()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<android.view.View: java.lang.Object getTag()>
<android.app.Notification: android.app.Notification clone()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<android.view.View: int getScrollY()>
<android.widget.AdapterView: int getCount()>
<java.nio.Buffer: java.nio.Buffer reset()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<java.lang.Class: java.lang.String getSimpleName()>
<android.content.Intent: java.lang.String getAction()>
<android.view.View: android.view.ViewParent getParent()>
<android.view.ViewGroup: int getChildCount()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<java.lang.Short: short shortValue()>
<java.nio.Buffer: java.nio.Buffer flip()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<android.os.Bundle: java.util.Set keySet()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectDiskReads()>
<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<java.util.AbstractList: java.util.ListIterator listIterator()>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<java.lang.Throwable: java.lang.String getMessage()>
<java.lang.Long: long longValue()>
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getYVelocity(android.view.VelocityTracker,int)>
<java.util.logging.Level: java.lang.String getLocalizedName()>
<android.view.MotionEvent: float getY()>
<java.lang.Boolean: java.lang.String toString()>
<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.media.AudioManager: int getStreamVolume(int)>
<java.util.LinkedList: java.lang.Object get(int)>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<java.util.HashMap: java.util.Set entrySet()>
<android.os.Bundle: int getInt(java.lang.String,int)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.util.Stack: java.lang.Object pop()>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>
<android.app.Activity: java.lang.CharSequence getTitle()>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.io.InputStream: long skip(long)>
<android.view.Display: int getHeight()>
<java.nio.CharBuffer: java.lang.String toString()>
<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>
<android.view.VelocityTracker: float getYVelocity(int)>
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>
<android.view.View: int getPaddingRight()>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.view.Display: int getWidth()>
<java.util.AbstractSequentialList: java.lang.Object get(int)>
<android.view.View: android.content.Context getContext()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.lang.Class: java.lang.String getName()>
<android.view.View: int getMeasuredWidth()>
<android.view.View: int getPaddingBottom()>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<java.util.ArrayList: java.lang.Object get(int)>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.widget.TextView: java.lang.CharSequence getText()>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<android.view.View: android.os.IBinder getWindowToken()>
<android.widget.Scroller: int getCurrX()>
<android.os.StrictMode$VmPolicy$Builder: android.os.StrictMode$VmPolicy$Builder penaltyDeath()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()>
<java.lang.Class: java.lang.Object newInstance()>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<java.net.InetAddress: java.net.InetAddress getLocalHost()>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<android.view.MotionEvent: int getEdgeFlags()>
<java.lang.String: java.lang.String trim()>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
<java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<java.io.RandomAccessFile: long length()>
<android.content.Context: java.lang.CharSequence getText(int)>
<java.lang.Enum: java.lang.String name()>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.view.View: int getScrollX()>
<android.view.MotionEvent: float getX()>
<java.net.Socket: java.io.InputStream getInputStream()>
<java.nio.Buffer: java.nio.Buffer mark()>
<java.text.NumberFormat: java.lang.String format(double)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<java.io.RandomAccessFile: long getFilePointer()>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<java.nio.Buffer: java.nio.Buffer clear()>
<android.os.Handler: android.os.Looper getLooper()>
<java.math.BigInteger: long longValue()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<android.content.res.TypedArray: int getResourceId(int,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.util.SparseArray: android.util.SparseArray clone()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.widget.AdapterView: int getSelectedItemPosition()>
<android.view.View: int getId()>
<android.view.VelocityTracker: float getYVelocity()>
<android.widget.AdapterView: long getSelectedItemId()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.content.res.TypedArray: java.lang.String getString(int)>
<java.util.Calendar: java.util.Date getTime()>
<java.util.logging.Formatter: java.lang.String formatMessage(java.util.logging.LogRecord)>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<java.util.logging.LogRecord: java.lang.String getLoggerName()>
<java.io.File: java.lang.String getName()>
<android.view.KeyEvent: int getRepeatCount()>
<java.lang.Long: byte byteValue()>
<java.util.logging.LogRecord: java.util.logging.Level getLevel()>
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>
<android.view.View: int getPaddingTop()>
<java.lang.Short: byte byteValue()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder penaltyLog()>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<java.io.File: java.io.File[] listFiles()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<java.io.File: java.lang.String toString()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<java.io.File: java.io.File getAbsoluteFile()>
<java.nio.Buffer: java.nio.Buffer rewind()>
<java.lang.Integer: byte byteValue()>
<java.util.ArrayList: java.lang.Object[] toArray()>
<android.view.MotionEvent: float getY(int)>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<java.io.File: java.lang.String getParent()>
<java.util.TreeSet: java.util.Iterator iterator()>
<android.app.Activity: android.view.Window getWindow()>
<java.util.HashMap: java.util.Set keySet()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.nio.charset.CharsetDecoder: java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.io.StringWriter: java.lang.String toString()>
