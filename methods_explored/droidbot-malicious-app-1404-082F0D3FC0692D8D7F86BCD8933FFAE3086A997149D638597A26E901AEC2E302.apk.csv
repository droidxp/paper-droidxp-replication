<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<android.os.CountDownTimer: android.os.CountDownTimer start()>
<java.util.TreeMap: java.lang.Object get(java.lang.Object)>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<java.lang.Integer: java.lang.String toString()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.net.URI: java.lang.String getHost()>
<java.security.Provider: java.util.Set entrySet()>
<android.graphics.Bitmap: int getWidth()>
<android.widget.ArrayAdapter: int getCount()>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
<java.util.LinkedList: java.lang.Object removeLast()>
<java.security.MessageDigest: byte[] digest()>
<java.util.AbstractList: java.util.Iterator iterator()>
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>
<java.lang.StringBuilder: java.lang.String toString()>
<java.util.Hashtable: java.util.Set keySet()>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<java.util.logging.LogRecord: long getMillis()>
<java.lang.reflect.Method: int getModifiers()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<javax.net.ssl.SSLContext: java.security.Provider getProvider()>
<java.net.URI: java.lang.String getScheme()>
<org.json.JSONArray: org.json.JSONArray put(int,java.lang.Object)>
<android.view.View: int getVisibility()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<android.widget.VideoView: int getDuration()>
<java.lang.Class: java.lang.Package getPackage()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>
<java.lang.Float: float floatValue()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.webkit.ConsoleMessage: java.lang.String message()>
<android.os.StatFs: int getAvailableBlocks()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<java.util.Locale: java.lang.String getCountry()>
<java.lang.String: char[] toCharArray()>
<android.app.ActivityManager: java.util.List getRunningServices(int)>
<java.util.LinkedList: java.lang.Object removeFirst()>
<android.content.res.Resources: boolean getBoolean(int)>
<android.view.View: java.lang.Object getTag()>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<java.lang.reflect.Method: java.lang.String getName()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<java.lang.Class: java.lang.String getSimpleName()>
<android.content.Intent: java.lang.String getAction()>
<android.view.ViewGroup: int getChildCount()>
<java.net.URLConnection: java.util.Map getHeaderFields()>
<android.location.Location: double getLongitude()>
<android.app.Activity: android.content.Intent getIntent()>
<android.hardware.SensorManager: float[] getOrientation(float[],float[])>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<java.lang.String: java.lang.String toString()>
<java.util.Scanner: java.lang.Object next()>
<java.util.Random: float nextFloat()>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<javax.crypto.Mac: byte[] doFinal(byte[])>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.view.View: android.content.Context getContext()>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<java.util.ArrayList: java.lang.Object get(int)>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<android.net.Uri$Builder: android.net.Uri build()>
<android.webkit.WebView: int getContentHeight()>
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<android.view.View$MeasureSpec: int getSize(int)>
<java.security.Provider: java.lang.String getName()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.content.Intent: java.lang.String getDataString()>
<java.util.Calendar: java.util.Date getTime()>
<java.util.logging.Formatter: java.lang.String formatMessage(java.util.logging.LogRecord)>
<java.io.File: java.lang.String getName()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<java.net.URI: int getPort()>
<android.view.MotionEvent: long getDownTime()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<java.util.HashMap: java.util.Set keySet()>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.view.KeyEvent: int getKeyCode()>
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<java.lang.System: java.lang.String getenv(java.lang.String)>
<java.util.Calendar: int get(int)>
<android.media.AudioManager: int getMode()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.content.res.Resources: int getInteger(int)>
<java.util.Scanner: java.lang.String nextLine()>
<java.net.Socket: int getSoTimeout()>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.graphics.Bitmap: int getHeight()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<java.lang.Class: java.lang.reflect.Field[] getFields()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>
<java.util.logging.LogRecord: java.lang.String getSourceClassName()>
<java.security.KeyStore: java.lang.String getDefaultType()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<java.lang.Double: double doubleValue()>
<android.view.View: int getWindowVisibility()>
<java.lang.Enum: java.lang.String toString()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<java.util.HashSet: java.util.Iterator iterator()>
<android.view.View: int getHeight()>
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<java.lang.Package: java.lang.String getName()>
<android.app.Dialog: android.view.Window getWindow()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<java.nio.Buffer: java.nio.Buffer flip()>
<java.util.Scanner: java.util.regex.MatchResult match()>
<android.os.Bundle: java.lang.String toString()>
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>
<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>
<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>
<java.net.Socket: java.io.InputStream getInputStream()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<android.net.NetworkInfo: int getSubtype()>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<android.util.SparseArray: android.util.SparseArray clone()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>
<java.util.UUID: long getMostSignificantBits()>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<java.util.logging.Logger: java.util.logging.Handler[] getHandlers()>
<org.json.JSONObject: int getInt(java.lang.String)>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
<org.apache.http.HttpHost: int getPort()>
<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>
<java.util.TreeSet: java.util.Iterator iterator()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<java.io.FileInputStream: java.io.FileDescriptor getFD()>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>
<android.util.SparseArray: java.lang.Object get(int)>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader)>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<android.content.Context: java.lang.String getString(int)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.content.res.Resources: java.lang.String getString(int)>
<android.view.KeyEvent: int getAction()>
<java.util.logging.LogRecord: java.lang.String getSourceMethodName()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.widget.VideoView: int getCurrentPosition()>
<java.io.Reader: int read(char[])>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<java.util.ArrayList: java.util.Iterator iterator()>
<java.lang.StackTraceElement: java.lang.String getFileName()>
<android.app.Activity: android.view.WindowManager getWindowManager()>

<android.view.Display: int getOrientation()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.os.StatFs: int getBlockSize()>
<android.content.pm.Signature: byte[] toByteArray()>
<java.util.Hashtable: java.util.Enumeration keys()>
<java.util.logging.LogRecord: java.lang.Throwable getThrown()>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<android.widget.EditText: android.text.Editable getText()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<java.net.URL: java.lang.String toString()>
<java.lang.StackTraceElement: int getLineNumber()>
<java.util.Date: long getTime()>
<org.json.JSONObject: java.util.Iterator keys()>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<java.io.File: java.lang.String getPath()>
<java.math.BigInteger: byte[] toByteArray()>
<android.hardware.Sensor: int getType()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<java.lang.StringBuffer: java.lang.String toString()>
<java.lang.System: java.util.Properties getProperties()>
<android.media.AudioManager: boolean isMusicActive()>
<org.json.JSONObject: long getLong(java.lang.String)>
<android.os.Looper: android.os.Looper getMainLooper()>
<javax.crypto.Cipher: byte[] getIV()>
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>
<android.widget.ArrayAdapter: android.widget.Filter getFilter()>
<android.media.AudioManager: int getRingerMode()>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<java.text.Format: java.lang.String format(java.lang.Object)>
<android.location.Location: long getTime()>
<java.util.UUID: long getLeastSignificantBits()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>
<android.view.View: android.view.ViewParent getParent()>
<android.content.Intent: java.lang.String getScheme()>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<java.util.logging.Logger: java.util.logging.Logger getParent()>
<org.apache.http.protocol.BasicHttpContext: java.lang.Object getAttribute(java.lang.String)>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.view.MotionEvent: float getY()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<java.security.Provider: java.util.Set keySet()>
<java.util.HashMap: java.util.Set entrySet()>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.util.Stack: java.lang.Object pop()>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.net.HttpURLConnection: int getResponseCode()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>
<android.location.Location: double getLatitude()>
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>
<android.view.Display: int getHeight()>
<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>
<java.lang.Class: java.lang.String getName()>
<android.os.Bundle: int getInt(java.lang.String)>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<org.json.JSONArray: java.lang.String getString(int)>
<java.io.File: java.lang.String[] list()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<java.net.URI: java.lang.String getQuery()>
<java.lang.Class: java.lang.Object newInstance()>
<java.lang.String: java.lang.String trim()>
<android.net.NetworkInfo: int getType()>
<android.content.Context: java.lang.CharSequence getText(int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<java.nio.Buffer: java.nio.Buffer clear()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<javax.net.SocketFactory: javax.net.SocketFactory getDefault()>
<android.view.View: int getId()>
<java.net.URLConnection: int getContentLength()>
<android.view.KeyEvent: int getRepeatCount()>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<javax.net.ssl.KeyManagerFactory: java.security.Provider getProvider()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>
<java.nio.Buffer: java.nio.Buffer rewind()>
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.content.res.AssetFileDescriptor: long getLength()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.view.View: android.content.res.Resources getResources()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<javax.net.ssl.TrustManagerFactory: java.security.Provider getProvider()>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<java.lang.ref.Reference: java.lang.Object get()>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<java.util.UUID: java.lang.String toString()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<android.animation.Animator: android.animation.Animator clone()>
<java.lang.reflect.Field: java.lang.String getName()>
<android.view.View: android.view.View getRootView()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.util.Properties: java.util.Enumeration propertyNames()>
<android.view.MotionEvent: int getAction()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<java.lang.Object: java.lang.Object clone()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<java.net.URI: java.lang.String getPath()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<java.util.Vector: java.util.Enumeration elements()>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<org.apache.http.HttpHost: java.lang.String getHostName()>
<android.view.View$MeasureSpec: int getMode(int)>
<android.location.Location: float getAccuracy()>
<java.util.Hashtable: java.util.Enumeration elements()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.content.Intent: android.os.Bundle getExtras()>
<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>
<java.util.logging.Level: java.lang.String getName()>
<java.util.TreeMap: java.util.Set keySet()>
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<java.util.Locale: java.util.Locale getDefault()>
<org.json.JSONArray: java.lang.Object get(int)>
<java.lang.String: byte[] getBytes()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<org.json.JSONTokener: java.lang.Object nextValue()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<java.lang.Throwable: java.lang.String getMessage()>
<java.lang.Long: long longValue()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>
<java.util.LinkedList: java.lang.Object get(int)>
<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage$MessageLevel messageLevel()>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.webkit.ConsoleMessage: java.lang.String sourceId()>
<android.view.Display: int getWidth()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<android.content.ComponentName: android.content.ComponentName clone()>
<java.util.Locale: java.lang.String getLanguage()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>
<android.view.MotionEvent: long getEventTime()>
<android.os.Bundle: java.lang.Object get(java.lang.String)>
<android.view.MotionEvent: float getX()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<java.util.logging.LogRecord: java.util.logging.Level getLevel()>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>
<java.io.File: java.io.File[] listFiles()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.app.Activity: android.view.Window getWindow()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.util.logging.LogRecord: int getThreadID()>
<android.content.ContextWrapper: android.os.Looper getMainLooper()>
<java.io.StringWriter: java.lang.String toString()>
