<java.lang.Class: java.lang.Object[] getEnumConstants()>
<java.lang.ref.Reference: java.lang.Object get()>
<android.view.MotionEvent: int getAction()>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.lang.Class: java.lang.String getName()>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.view.View: int getId()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.view.View: int getRight()>
<java.io.Reader: int read(char[])>
<android.view.View: int getTop()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<android.widget.DatePicker: int getYear()>
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<java.lang.String: byte[] getBytes()>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<java.io.File: java.lang.String getCanonicalPath()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.util.SparseArray: android.util.SparseArray clone()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<android.widget.DatePicker: int getMonth()>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.app.Dialog: android.content.Context getContext()>
<java.util.concurrent.TimeUnit: long toMillis(long)>
<android.view.View: int getMeasuredHeight()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.view.animation.Animation: long getDuration()>
<java.io.File: java.io.File getParentFile()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitAll()>
<android.location.Location: double getLongitude()>
<android.preference.EditTextPreference: java.lang.String getText()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<java.lang.Object: java.lang.Object clone()>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<android.graphics.Bitmap: int getWidth()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<java.net.HttpURLConnection: int getResponseCode()>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<java.util.Locale: java.lang.String getDisplayLanguage()>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>
<android.widget.DatePicker: int getDayOfMonth()>
<android.content.ComponentName: android.content.ComponentName clone()>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>
<org.json.JSONArray: java.lang.Object get(int)>
<java.util.Date: long getTime()>
<android.view.View$MeasureSpec: int getSize(int)>
<android.app.Activity: android.content.Intent getIntent()>
<java.lang.Class: java.lang.Object newInstance()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<android.view.View$MeasureSpec: int getMode(int)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.view.Display: int getOrientation()>
<java.io.File: java.lang.String[] list()>
<android.content.Intent: android.os.Bundle getExtras()>
<android.location.Location: float getAccuracy()>
<java.security.MessageDigest: byte[] digest()>
<java.lang.Enum: java.lang.Class getDeclaringClass()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.location.Location: java.lang.String getProvider()>
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>
<android.view.View: int getMeasuredWidth()>
<android.content.res.Resources: float getDimension(int)>
<android.graphics.Bitmap: int getHeight()>
<android.preference.ListPreference: java.lang.String getValue()>
<java.util.UUID: java.lang.String toString()>
<android.view.View: int getVisibility()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.content.res.Resources: int getColor(int)>
<android.widget.EditText: android.text.Editable getText()>

<android.view.View: java.lang.Object getTag()>
<android.location.Location: long getTime()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.view.View: android.content.res.Resources getResources()>
<java.util.Locale: java.util.Locale getDefault()>
<java.io.InputStream: long skip(long)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<android.location.LocationManager: java.util.List getAllProviders()>
<android.os.AsyncTask: java.lang.Object get()>
<android.view.View: int getWidth()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<java.lang.Thread: java.lang.Thread$State getState()>
<android.view.View: long getDrawingTime()>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<android.net.wifi.WifiInfo: int getIpAddress()>
<android.content.res.Resources: int[] getIntArray(int)>
<java.io.File: java.io.File[] listFiles()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>
<android.view.View: int getHeight()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.util.Calendar: int get(int)>
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<java.io.File: java.lang.String toString()>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<android.view.MotionEvent: float getY()>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<android.content.res.TypedArray: int getResourceId(int,int)>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<java.util.Calendar: java.util.Date getTime()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<java.io.File: java.lang.String getAbsolutePath()>
<android.app.Notification: android.app.Notification clone()>
<android.view.MotionEvent: float getX()>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>
<android.content.res.Resources: java.lang.String getString(int)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.location.Location: double getLatitude()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.view.VelocityTracker: float getXVelocity()>
<android.content.res.Resources: int getInteger(int)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<android.net.wifi.WifiInfo: int getNetworkId()>
<android.view.VelocityTracker: float getYVelocity()>
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>
<android.telephony.TelephonyManager: int getNetworkType()>
<android.view.View: int getBottom()>
<android.view.View: int getLeft()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.content.Context: java.lang.String getString(int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<android.view.Display: int getRotation()>
<android.content.Intent: java.lang.String getAction()>
<java.util.Random: long nextLong()>
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.animation.Animator: android.animation.Animator clone()>
<java.lang.Enum: java.lang.String toString()>
