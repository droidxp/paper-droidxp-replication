<android.view.KeyEvent: int getKeyCode()>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<android.view.MotionEvent: int getAction()>
<android.view.KeyEvent: int getAction()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.lang.Class: java.lang.String getName()>
<android.view.MotionEvent: float getY(int)>
<android.app.Activity: android.view.Window getWindow()>
<android.content.res.AssetFileDescriptor: long getLength()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.util.HashSet: java.util.Iterator iterator()>
<java.util.AbstractMap: java.util.Set keySet()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<java.io.Reader: int read(char[])>
<android.view.MotionEvent: int getPointerCount()>
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<android.view.View$MeasureSpec: int getSize(int)>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.io.File: java.lang.String getPath()>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<android.view.Display: int getOrientation()>
<java.nio.Buffer: java.nio.Buffer rewind()>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.nio.ByteBuffer: java.nio.ByteOrder order()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<android.view.Display: int getWidth()>
<android.view.Display: int getHeight()>
<java.lang.Thread: long getId()>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<android.view.KeyEvent: int getUnicodeChar()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.view.MotionEvent: float getY()>
<java.lang.Class: java.lang.reflect.Field[] getFields()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<java.nio.Buffer: java.lang.String toString()>
<java.util.AbstractList: java.util.Iterator iterator()>
<java.nio.Buffer: java.nio.Buffer clear()>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<java.lang.StringBuilder: java.lang.String toString()>
<java.io.File: java.io.File getParentFile()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.content.Context: java.lang.String getString(int)>
<java.io.File: java.lang.String getAbsolutePath()>
<java.nio.Buffer: java.nio.Buffer flip()>

<android.view.MotionEvent: int getPointerId(int)>
<java.util.ArrayList: java.lang.Object get(int)>
<android.view.MotionEvent: float getX(int)>
<java.lang.Object: java.lang.Object clone()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<java.lang.reflect.Field: java.lang.String getName()>
<android.view.MotionEvent: float getX()>
<java.util.Random: float nextFloat()>
<android.hardware.Sensor: int getType()>
<java.lang.reflect.Field: java.lang.Class getType()>
<java.nio.CharBuffer: java.nio.CharBuffer get(char[])>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.lang.String: java.lang.String trim()>
<java.lang.Long: long longValue()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.animation.Animator: android.animation.Animator clone()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<java.util.zip.CRC32: long getValue()>
