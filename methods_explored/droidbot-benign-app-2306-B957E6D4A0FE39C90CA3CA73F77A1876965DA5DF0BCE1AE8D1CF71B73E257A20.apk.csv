<org.apache.http.conn.routing.RouteTracker: int getHopCount()>
<java.lang.Class: java.lang.String getName()>
<org.apache.james.mime4j.field.UnstructuredField: java.lang.String getValue()>
<android.view.View: int getId()>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
<org.apache.james.mime4j.field.DateTimeField: org.apache.james.mime4j.field.datetime.parser.ParseException getParseException()>
<org.apache.http.conn.routing.HttpRoute: int getHopCount()>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<java.io.Reader: int read(char[])>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<android.view.MotionEvent: long getEventTime()>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<java.net.URI: java.lang.String toASCIIString()>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>
<org.apache.james.mime4j.field.address.DomainList: java.lang.String toRouteString()>
<android.widget.TextView: java.lang.CharSequence getText()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<java.util.ArrayList: java.util.Iterator iterator()>
<org.apache.james.mime4j.field.datetime.DateTime: int getDay()>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>
<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>
<java.lang.Object: java.lang.Object clone()>
<java.lang.Short: short shortValue()>
<android.graphics.Bitmap: int getWidth()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<java.net.URL: java.lang.String getRef()>
<java.net.URI: java.lang.String getRawFragment()>
<java.net.HttpURLConnection: int getResponseCode()>
<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: char BeginToken()>
<java.util.Random: double nextDouble()>
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token getNextToken()>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<org.apache.http.protocol.BasicHttpProcessor: int getResponseInterceptorCount()>
<java.lang.reflect.Method: java.lang.String getName()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
<android.app.Activity: android.content.Intent getIntent()>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()>
<java.lang.ClassLoader: java.io.InputStream getSystemResourceAsStream(java.lang.String)>
<java.lang.System: java.util.Properties getProperties()>
<java.lang.Class: java.lang.Object newInstance()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
<java.net.InetSocketAddress: int getPort()>
<java.net.Socket: int getReceiveBufferSize()>
<java.security.MessageDigest: byte[] digest()>
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.Token getToken(int)>
<java.text.Format: java.lang.Object parseObject(java.lang.String)>
<android.view.View: int getMeasuredWidth()>
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndColumn()>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date: int getMonth()>
<java.util.AbstractList: java.util.Iterator iterator()>
<org.apache.http.conn.scheme.Scheme: java.lang.String getName()>
<java.nio.charset.Charset: java.lang.String name()>
<org.json.JSONArray: int getInt(int)>
<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])>
<java.net.URISyntaxException: java.lang.String getMessage()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getSubType()>
<java.lang.reflect.Field: java.lang.String getName()>
<java.util.Locale: java.lang.String getVariant()>
<org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<java.net.URI: java.lang.String getPath()>
<android.view.View: android.content.res.Resources getResources()>
<java.util.Calendar: int getActualMinimum(int)>
<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>
<org.apache.http.entity.BasicHttpEntity: java.io.InputStream getContent()>
<java.util.Properties: java.util.Enumeration propertyNames()>
<org.apache.james.mime4j.field.MailboxField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()>
<org.apache.http.message.ParserCursor: int getUpperBound()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: java.lang.String GetImage()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)>
<org.apache.james.mime4j.field.address.MailboxList: org.apache.james.mime4j.field.address.Mailbox get(int)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<org.apache.http.HttpHost: java.lang.String getHostName()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<java.lang.Float: float floatValue()>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket()>
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: char BeginToken()>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: java.lang.String GetImage()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getZone()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.view.Window: android.view.WindowManager getWindowManager()>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getHour()>
<java.net.Socket: int getSendBufferSize()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<java.util.TimeZone: java.lang.String getDisplayName(boolean,int,java.util.Locale)>
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<org.apache.http.protocol.BasicHttpContext: java.lang.Object getAttribute(java.lang.String)>
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader directGetContextClassLoader()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<java.util.Calendar: java.util.Date getTime()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<java.io.File: java.lang.String getAbsolutePath()>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getTargetHost()>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>
<android.view.View: int getScrollX()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor getRequestExecutor()>
<android.app.Activity: android.view.Window getWindow()>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<org.json.JSONArray: java.lang.String getString(int)>
<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.MailboxList flatten()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler getUserTokenHandler()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<java.util.Hashtable: java.util.Enumeration elements()>
<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<org.apache.james.mime4j.field.datetime.DateTime: int getYear()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>
<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()>
<java.text.DateFormatSymbols: java.lang.String[] getEras()>
<android.telephony.TelephonyManager: int getNetworkType()>
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getSecond()>
<org.apache.http.ProtocolVersion: int getMajor()>
<android.content.Context: java.lang.String getString(int)>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>
<java.util.ArrayList: java.lang.Object get(int)>
<org.apache.james.mime4j.util.CharsetUtil: java.nio.charset.Charset getCharset(java.lang.String)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>
<java.text.ParsePosition: int getIndex()>
<java.util.Locale: java.lang.String getCountry()>
<java.util.Date: java.lang.Object clone()>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)>
<android.widget.TextView: android.graphics.Typeface getTypeface()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<android.view.KeyEvent: int getAction()>
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: char readChar()>
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndLine()>
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)>
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>
<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()>
<java.net.URI: java.lang.String getScheme()>
<java.text.NumberFormat: java.lang.String format(double)>
<java.net.URL: java.lang.String toExternalForm()>
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: char readChar()>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<org.apache.http.message.HeaderGroup: org.apache.http.Header getLastHeader(java.lang.String)>
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getParameter(java.lang.String)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor getHttpProcessor()>
<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>
<java.io.File: java.lang.String getCanonicalPath()>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.widget.TextView: android.text.TextPaint getPaint()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>
<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>
<android.app.Dialog: android.content.Context getContext()>
<org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)>
<android.view.View: int getMeasuredHeight()>
<android.view.KeyEvent: long getEventTime()>
<java.util.Calendar: int getActualMaximum(int)>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.WaitingThread nextThread()>
<java.util.LinkedList: java.lang.Object removeLast()>
<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>
<org.apache.james.mime4j.field.datetime.DateTime: int getMonth()>
<android.view.View: int getScrollY()>
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset(org.apache.james.mime4j.field.ContentTypeField)>
<org.apache.http.cookie.CookieOrigin: int getPort()>
<android.graphics.Canvas: android.graphics.Rect getClipBounds()>
<org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)>
<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>
<android.view.View: android.view.ViewParent getParent()>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<java.net.URI: java.lang.String getQuery()>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<android.content.ComponentName: java.lang.String getPackageName()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.view.View$MeasureSpec: int getSize(int)>
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: org.apache.james.mime4j.field.contenttype.parser.Token jjFillToken()>
<org.apache.james.mime4j.field.DateTimeField: java.util.Date getDate()>
<java.lang.ThreadLocal: java.lang.Object get()>
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()>
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.util.Hashtable: java.util.Set keySet()>
<org.apache.james.mime4j.field.address.parser.ParseException: java.lang.String getMessage()>
<java.net.Proxy: java.net.SocketAddress address()>
<java.util.AbstractMap: java.lang.String toString()>
<java.net.Socket: java.io.InputStream getInputStream()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()>
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: java.lang.String GetImage()>
<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>
<android.view.View: android.content.Context getContext()>
<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<org.apache.james.mime4j.field.datetime.DateTime: int getTimeZone()>
<org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginLine()>
<android.webkit.WebView: java.lang.String getTitle()>
<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
<org.apache.http.auth.AuthScope: java.lang.String getRealm()>
<java.io.InputStream: long skip(long)>
<org.apache.http.protocol.BasicHttpProcessor: int getRequestInterceptorCount()>
<java.io.StringWriter: java.lang.StringBuffer getBuffer()>
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>
<org.apache.http.HttpHost: java.lang.String toHostString()>
<java.io.StringWriter: java.lang.String toString()>
<org.apache.james.mime4j.field.ContentTypeField: org.apache.james.mime4j.field.contenttype.parser.ParseException getParseException()>
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: org.apache.james.mime4j.field.contenttype.parser.ParseException generateParseException()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<java.io.File: java.io.File[] listFiles()>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType(org.apache.james.mime4j.field.ContentTypeField,org.apache.james.mime4j.field.ContentTypeField)>
<android.view.Display: int getHeight()>
<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>
<java.lang.Thread: long getId()>
<org.apache.james.mime4j.field.MailboxListField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<java.util.LinkedList: java.lang.Object removeFirst()>
<org.apache.james.mime4j.field.MailboxField: org.apache.james.mime4j.field.address.Mailbox getMailbox()>
<org.apache.commons.codec.binary.Base64: byte[] decode(byte[])>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<android.view.KeyEvent: int getRepeatCount()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<org.apache.http.message.HeaderGroup: org.apache.http.Header getFirstHeader(java.lang.String)>
<org.apache.james.mime4j.field.MailboxListField: org.apache.james.mime4j.field.address.MailboxList getMailboxList()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<org.apache.james.mime4j.field.datetime.DateTime: int getHour()>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<java.util.HashMap: java.util.Set entrySet()>
<org.json.JSONObject: java.util.Iterator keys()>
<java.util.LinkedList: java.lang.Object remove()>
<android.view.MotionEvent: float getRawX()>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>
<java.net.InetAddress: java.lang.String getHostName()>
<org.apache.http.HttpHost: java.lang.String toURI()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<java.net.ProxySelector: java.net.ProxySelector getDefault()>
<java.text.Format: java.lang.String format(java.lang.Object)>
<android.content.res.Resources: java.lang.String getString(int)>
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndColumn()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.text.DateFormatSymbols: java.lang.String[] getMonths()>
<org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<java.lang.Number: short shortValue()>
<java.net.URI: java.net.URL toURL()>
<java.net.URLConnection: java.net.URL getURL()>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.net.Socket: int getSoTimeout()>
<java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginLine()>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<java.net.URL: java.lang.String toString()>
<java.util.StringTokenizer: java.lang.String nextToken()>
<org.apache.james.mime4j.field.datetime.DateTime: int getSecond()>
<java.util.Stack: java.lang.Object pop()>
<java.util.Hashtable: java.util.Collection values()>
<org.apache.james.mime4j.field.address.parser.SimpleNode: java.lang.String toString()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: char readChar()>
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: char BeginToken()>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: org.apache.james.mime4j.field.datetime.parser.Token getNextToken()>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)>
<java.util.Random: long nextLong()>
<java.util.Random: float nextFloat()>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
<org.apache.james.mime4j.field.address.Mailbox: org.apache.james.mime4j.field.address.DomainList getRoute()>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>
<java.net.Socket: java.net.InetAddress getInetAddress()>
<java.net.InetSocketAddress: java.lang.String getHostName()>
<java.lang.ref.Reference: java.lang.Object get()>
<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<org.apache.http.auth.AuthScope: int getPort()>
<java.io.RandomAccessFile: long getFilePointer()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<java.util.Hashtable: java.util.Enumeration keys()>
<android.app.Dialog: android.view.Window getWindow()>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer()>
<java.net.Socket: java.net.InetAddress getLocalAddress()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<java.lang.Class: java.lang.String getSimpleName()>
<java.net.URI: java.lang.String getRawQuery()>
<org.apache.james.mime4j.field.ContentTransferEncodingField: java.lang.String getEncoding()>
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getMimeType()>
<java.lang.String: byte[] getBytes()>
<org.apache.http.message.ParserCursor: int getPos()>
<java.util.LinkedList: java.lang.Object getLast()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory newFactory(java.lang.String,java.lang.ClassLoader,java.lang.ClassLoader)>
<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getApplicationParams()>
<java.text.NumberFormat: java.text.NumberFormat getInstance(java.util.Locale)>
<java.nio.CharBuffer: java.lang.String toString()>
<android.util.SparseArray: android.util.SparseArray clone()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<java.util.AbstractCollection: java.lang.String toString()>
<org.apache.http.impl.SocketHttpClientConnection: int getRemotePort()>
<java.util.concurrent.TimeUnit: long toMillis(long)>
<org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket createSocket()>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>
<org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>
<org.apache.http.ProtocolVersion: int getMinor()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<org.apache.james.mime4j.field.address.parser.AddressListParserTokenManager: org.apache.james.mime4j.field.address.parser.Token jjFillToken()>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()>
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()>
<org.apache.commons.codec.binary.Base64: byte[] discardWhitespace(byte[])>
<java.util.Vector: java.lang.Object firstElement()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>
<org.apache.http.impl.cookie.CookieSpecBase: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>
<java.net.Socket: int getLocalPort()>
<java.util.Date: long getTime()>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date: java.lang.String getYear()>
<org.apache.http.client.params.HttpClientParams: java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)>
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getEndLine()>
<org.apache.http.HttpHost: java.lang.String getSchemeName()>
<java.lang.ExceptionInInitializerError: java.lang.Throwable getException()>
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>
<java.net.URI: java.lang.String getFragment()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time: int getMinute()>
<org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)>
<java.net.InetAddress: java.lang.String getHostAddress()>
<android.view.View: int getVisibility()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getDomain()>
<org.apache.http.message.HeaderGroup: org.apache.http.HeaderIterator iterator()>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>
<org.apache.http.impl.client.RequestWrapper: int getExecCount()>
<android.view.View: java.lang.Object getTag()>
<java.util.Date: java.lang.String toString()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)>
<org.apache.commons.logging.LogFactory: java.lang.ClassLoader getContextClassLoader()>
<org.apache.james.mime4j.field.address.parser.TokenMgrError: java.lang.String getMessage()>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager: org.apache.james.mime4j.field.datetime.parser.Token jjFillToken()>
<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)>
<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement nextElement()>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>
<java.text.NumberFormat: java.text.NumberFormat getCurrencyInstance(java.util.Locale)>
<android.view.View: int getHeight()>
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<java.lang.reflect.Field: int getModifiers()>
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)>
<android.view.ViewGroup: int getChildCount()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<org.apache.james.mime4j.field.datetime.DateTime: int getMinute()>
<java.util.Calendar: int get(int)>
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginLine()>
<android.view.MotionEvent: float getY()>
<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>
<org.apache.james.mime4j.field.address.Builder: org.apache.james.mime4j.field.address.Builder getInstance()>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
<java.lang.Class: int getModifiers()>
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getEndColumn()>
<android.webkit.WebView: java.lang.String getUrl()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntitySerializer createEntitySerializer()>
<java.lang.Long: long longValue()>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>
<org.json.JSONArray: double getDouble(int)>
<org.apache.http.auth.AuthScope: java.lang.String getScheme()>
<java.lang.Byte: byte byteValue()>
<org.apache.james.mime4j.field.address.AddressList: org.apache.james.mime4j.field.address.Address get(int)>
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getEndLine()>
<org.apache.http.HttpHost: int getPort()>
<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()>
<org.json.JSONObject: long getLong(java.lang.String)>
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()>
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
<org.apache.james.mime4j.field.contenttype.parser.TokenMgrError: java.lang.String getMessage()>
<java.util.HashMap: java.util.Set keySet()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectHandler getRedirectHandler()>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.protocol.BasicHttpProcessor copy()>
<java.util.Stack: java.lang.Object peek()>
<org.apache.james.mime4j.field.address.Mailbox: java.lang.String getLocalPart()>
<java.net.URI: java.lang.String getAuthority()>
<java.util.Calendar: java.util.TimeZone getTimeZone()>
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getCharset()>
<org.apache.http.util.CharArrayBuffer: char[] buffer()>
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<java.net.Proxy: java.net.Proxy$Type type()>
<java.text.MessageFormat: java.util.Locale getLocale()>
<java.lang.StringBuffer: java.lang.String toString()>
<java.text.SimpleDateFormat: java.lang.String toPattern()>
<android.animation.Animator: android.animation.Animator clone()>
<java.lang.Enum: java.lang.String toString()>
<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getOverrideParams()>
<org.apache.james.mime4j.field.DelegatingFieldParser: org.apache.james.mime4j.field.FieldParser getParser(java.lang.String)>
<android.view.MotionEvent: int getAction()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<org.apache.james.mime4j.field.datetime.parser.SimpleCharStream: int getBeginColumn()>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponseFactory createHttpResponseFactory()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)>
<java.lang.Integer: java.lang.String toString()>
<java.lang.Package: java.lang.String getName()>
<org.apache.james.mime4j.field.ContentTransferEncodingField: java.lang.String getEncoding(org.apache.james.mime4j.field.ContentTransferEncodingField)>
<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>
<java.lang.Long: java.lang.String toString()>
<java.lang.Number: byte byteValue()>
<android.view.View: int[] getDrawableState()>
<java.lang.Class: java.lang.Package getPackage()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.view.Display: int getWidth()>
<java.lang.Double: double doubleValue()>
<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()>
<org.apache.http.message.BasicTokenIterator: java.lang.String nextToken()>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)>
<java.io.File: java.io.File getAbsoluteFile()>
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<java.util.Calendar: java.util.Calendar getInstance()>
<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<java.lang.StringBuilder: java.lang.String toString()>
<android.view.animation.Animation: long getDuration()>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.io.File: java.io.File getParentFile()>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<android.location.Location: double getLongitude()>
<java.lang.Character: int getType(char)>
<org.apache.james.mime4j.field.contenttype.parser.SimpleCharStream: int getBeginColumn()>
<android.os.Message: android.os.Bundle getData()>
<java.util.Locale: java.util.Locale[] getAvailableLocales()>
<org.apache.james.mime4j.field.address.parser.SimpleCharStream: int getBeginColumn()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.lang.String: java.lang.String trim()>
<java.util.Hashtable: java.util.Set entrySet()>
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getAllHeaders()>
<org.apache.james.mime4j.field.ContentTypeField: java.lang.String getBoundary()>
<android.view.MotionEvent: float getRawY()>
<java.net.URL: java.lang.String getPath()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getRequestParams()>
<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>
<android.widget.TextView: float getTextSize()>
<java.net.URI: int getPort()>
<java.util.HashSet: java.util.Iterator iterator()>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParserTokenManager: org.apache.james.mime4j.field.contenttype.parser.Token getNextToken()>
<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>
<java.text.MessageFormat: java.text.Format[] getFormats()>
<org.apache.james.mime4j.field.datetime.parser.TokenMgrError: java.lang.String getMessage()>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<org.json.JSONArray: java.lang.Object get(int)>
<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>
<org.apache.http.ProtocolVersion: java.lang.String getProtocol()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>
<android.view.View$MeasureSpec: int getMode(int)>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)>
<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>
<android.view.Display: int getOrientation()>
<java.lang.Character: char charValue()>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>
<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser: org.apache.james.mime4j.field.datetime.parser.ParseException generateParseException()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.util.Vector: java.lang.Object get(int)>
<android.graphics.Bitmap: int getHeight()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>
<java.util.Hashtable: java.lang.String toString()>
<java.lang.ClassLoader: java.net.URL getSystemResource(java.lang.String)>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
<org.apache.commons.logging.LogFactory: java.lang.Object createFactory(java.lang.String,java.lang.ClassLoader)>
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)>
<org.apache.james.mime4j.field.AddressListField: org.apache.james.mime4j.field.address.AddressList getAddressList()>
<android.widget.EditText: android.text.Editable getText()>

<org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory getFactory()>
<android.location.Location: long getTime()>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
<java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>
<java.util.Locale: java.util.Locale getDefault()>
<java.lang.StringBuffer: java.lang.StringBuffer reverse()>
<java.util.Locale: java.lang.String getLanguage()>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.net.URI)>
<android.view.View: int getWidth()>
<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>
<android.view.MotionEvent: long getDownTime()>
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>
<java.io.RandomAccessFile: long length()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()>
<org.apache.http.auth.AuthScope: java.lang.String getHost()>
<org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.lang.String: char[] toCharArray()>
<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>
<org.apache.james.mime4j.field.datetime.DateTime: java.util.Date getDate()>
<org.apache.commons.codec.binary.Base64: byte[] discardNonBase64(byte[])>
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date: int getDay()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<java.net.URL: java.lang.String getQuery()>
<java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()>
<java.net.Socket: int getPort()>
<java.net.URI: java.lang.String toString()>
<java.util.Calendar: java.lang.Object clone()>
<org.apache.james.mime4j.field.AddressListField: org.apache.james.mime4j.field.address.parser.ParseException getParseException()>
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>
<org.json.JSONObject: int getInt(java.lang.String)>
<org.apache.james.mime4j.field.address.parser.AddressListParser: org.apache.james.mime4j.field.address.parser.ParseException generateParseException()>
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>
<android.view.MotionEvent: float getX()>
<java.lang.reflect.Field: java.lang.Class getType()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.location.Location: double getLatitude()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])>
<java.net.URI: java.lang.String getHost()>
<java.text.MessageFormat: java.lang.String toPattern()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)>
<org.apache.james.mime4j.field.contenttype.parser.ParseException: java.lang.String getMessage()>
<org.apache.james.mime4j.field.datetime.parser.ParseException: java.lang.String getMessage()>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
<java.lang.Boolean: java.lang.String toString()>
<java.lang.ClassLoader: java.lang.ClassLoader getParent()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.content.Intent: android.net.Uri getData()>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.Object clone()>
<org.apache.james.mime4j.field.address.DomainList: java.lang.String get(int)>
<java.util.Vector: java.util.Enumeration elements()>
<java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()>
<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.Header getVersionHeader()>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<org.apache.http.util.VersionInfo: java.lang.String getRelease()>
<java.lang.Double: float floatValue()>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<org.json.JSONObject: double getDouble(java.lang.String)>
<org.apache.james.mime4j.field.contenttype.parser.ContentTypeParser: java.lang.String getType()>
<java.net.URI: java.lang.String getRawPath()>
<java.io.File: java.lang.String getName()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getClientParams()>
