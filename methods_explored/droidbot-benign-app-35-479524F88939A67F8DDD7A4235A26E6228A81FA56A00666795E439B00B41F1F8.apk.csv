<android.view.MotionEvent: int getAction()>
<android.view.View: int getId()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.view.MotionEvent: float getY()>
<java.util.Vector: java.lang.Object get(int)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.graphics.Bitmap: int getHeight()>
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>
<android.media.AudioManager: int getStreamVolume(int)>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>

<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<java.lang.Object: java.lang.Object clone()>
<android.view.MotionEvent: float getX()>
<java.util.HashMap: java.util.Set entrySet()>
<android.graphics.Bitmap: int getWidth()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap$Config)>
<java.lang.StringBuffer: java.lang.String toString()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.animation.Animator: android.animation.Animator clone()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.os.Environment: java.lang.String getExternalStorageState()>
