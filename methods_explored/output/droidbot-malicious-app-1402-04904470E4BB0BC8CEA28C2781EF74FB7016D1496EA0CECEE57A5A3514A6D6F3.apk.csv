<android.view.View: int getRight()>
<android.support.v4.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()>
<android.view.accessibility.AccessibilityRecord: int getScrollX()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>
<android.view.MotionEvent: float getX(int)>
<java.lang.String: java.lang.String trim()>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.Calendar: java.util.Date getTime()>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>
<android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>
<java.lang.String: java.lang.String toString()>
<android.net.Uri$Builder: android.net.Uri build()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor getRequestExecutor()>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.protocol.BasicHttpProcessor copy()>

<android.view.View: android.os.IBinder getWindowToken()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>
<java.net.HttpURLConnection: int getResponseCode()>
<android.view.View$MeasureSpec: int getSize(int)>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<android.widget.Scroller: int getCurrY()>
<android.support.v4.view.ViewCompatHC: long getFrameTime()>
<android.view.View: int getMeasuredHeight()>
<android.support.v4.view.MotionEventCompat: int getPointerCount(android.view.MotionEvent)>
<android.support.v4.view.MotionEventCompatEclair: float getX(android.view.MotionEvent,int)>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<java.util.ArrayList: java.lang.Object[] toArray()>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>
<android.media.AudioManager: boolean isMusicActive()>
<java.security.MessageDigest: byte[] digest()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<java.net.InetSocketAddress: int getPort()>
<java.util.AbstractCollection: java.lang.String toString()>
<java.lang.ThreadLocal: java.lang.Object get()>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<org.apache.http.protocol.BasicHttpProcessor: int getResponseInterceptorCount()>
<android.view.View: android.content.res.Resources getResources()>
<android.view.accessibility.AccessibilityNodeInfo: int getActions()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>
<java.net.URI: java.lang.String getAuthority()>
<org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)>
<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>
<java.lang.Class: java.lang.Object newInstance()>
<android.content.res.TypedArray: java.lang.String getString(int)>
<java.security.Provider: java.util.Set keySet()>
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>
<android.view.MotionEvent: int getPointerCount()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.support.v4.view.ViewCompatJB: java.lang.Object getAccessibilityNodeProvider(android.view.View)>
<android.view.View: int getTop()>
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<android.view.View: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<android.view.ViewGroup: android.view.View findFocus()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.Header getVersionHeader()>
<android.support.v4.view.accessibility.AccessibilityRecordCompat: java.lang.Object getImpl()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<java.lang.Character: byte getDirectionality(int)>
<android.content.res.Resources: java.lang.String getString(int)>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.view.accessibility.AccessibilityRecord: int getItemCount()>
<android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>
<java.lang.String: byte[] getBytes()>
<android.widget.Scroller: int getFinalY()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<android.support.v4.view.ViewCompat: int getLayerType(android.view.View)>
<java.net.Proxy: java.net.SocketAddress address()>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.view.MotionEvent: long getEventTime()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()>
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.content.res.TypedArray: int getColor(int,int)>
<android.content.IntentFilter: java.lang.String getAction(int)>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.Object getSource(java.lang.Object)>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>
<android.view.View: int getWindowVisibility()>
<android.content.Context: java.lang.CharSequence getText(int)>
<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
<org.apache.http.auth.AuthScope: java.lang.String getRealm()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<java.net.URI: java.lang.String getFragment()>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getBeforeText(java.lang.Object)>
<java.lang.Class: java.lang.String getSimpleName()>
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.view.View: int getPaddingTop()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<android.content.ComponentName: java.lang.String getPackageName()>
<android.view.View: int getScrollY()>
<java.io.File: java.lang.String getName()>
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<java.util.HashMap: java.util.Collection values()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.view.View: android.content.Context getContext()>
<android.view.View: int getLayoutDirection()>
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>
<org.apache.http.util.CharArrayBuffer: char[] buffer()>
<java.lang.Float: float floatValue()>
<android.media.AudioManager: int getMode()>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.WaitingThread nextThread()>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<org.apache.http.impl.cookie.CookieSpecBase: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.view.View: int getMeasuredWidth()>
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<org.apache.http.conn.scheme.Scheme: java.lang.String getName()>
<java.net.URI: java.lang.String toASCIIString()>
<android.widget.OverScroller: int getFinalY()>
<android.graphics.drawable.Drawable: int getChangingConfigurations()>
<android.widget.OverScroller: int getFinalX()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<android.content.res.TypedArray: int getResourceId(int,int)>
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<org.apache.http.auth.AuthScope: int getPort()>
<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket createSocket()>
<android.view.KeyEvent: int getRepeatCount()>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<org.apache.http.protocol.BasicHttpProcessor: int getRequestInterceptorCount()>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)>
<android.view.View: int getLayerType()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()>
<android.net.TrafficStats: int getThreadStatsTag()>
<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>
<org.apache.http.client.params.HttpClientParams: java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getContentDescription(java.lang.Object)>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<android.view.KeyEvent: int getKeyCode()>
<android.content.Intent: java.util.Set getCategories()>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>
<android.view.View: int[] getDrawableState()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<android.view.accessibility.AccessibilityEvent: int getRecordCount()>
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getYVelocity(android.view.VelocityTracker,int)>
<org.apache.http.conn.routing.RouteTracker: int getHopCount()>
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()>
<java.util.concurrent.FutureTask: java.lang.Object get()>
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>
<java.net.URI: java.lang.String toString()>
<android.support.v4.view.AccessibilityDelegateCompat: android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)>
<org.apache.http.auth.AuthScope: java.lang.String getHost()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()>
<android.widget.TextView: int getBaseline()>
<android.location.Location: float getAccuracy()>
<android.content.res.TypedArray: float getFloat(int,float)>
<java.util.HashSet: java.util.Iterator iterator()>
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>
<java.io.File: java.lang.String getPath()>
<android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>
<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.View,int)>
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)>
<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>
<java.net.InetAddress: java.lang.String getHostAddress()>
<android.app.Notification$Builder: android.app.Notification build()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getText(java.lang.Object)>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>
<android.graphics.drawable.Drawable: int getMinimumWidth()>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>
<android.app.ActivityOptions: android.os.Bundle toBundle()>
<android.widget.Scroller: int getCurrX()>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>
<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()>
<java.lang.ref.Reference: java.lang.Object get()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.location.Location: double getLongitude()>
<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>
<android.view.accessibility.AccessibilityRecord: int getWindowId()>
<org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>
<android.view.View: int getImportantForAccessibility()>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: android.os.Parcelable getParcelableData(java.lang.Object)>
<android.view.MotionEvent: long getDownTime()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()>
<android.view.ViewGroup$MarginLayoutParams: int getMarginStart()>
<java.util.ArrayList: java.lang.Object get(int)>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>
<android.widget.Scroller: int getDuration()>
<java.lang.Enum: java.lang.String toString()>
<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>
<java.lang.Throwable: java.lang.String getMessage()>
<android.view.View: int getVisibility()>
<android.view.MotionEvent: int getAction()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>
<android.view.VelocityTracker: float getXVelocity()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.content.Intent: android.net.Uri getData()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()>
<android.widget.OverScroller: int getCurrY()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>
<android.support.v4.view.AccessibilityDelegateCompat: java.lang.Object getBridge()>
<java.util.Locale: java.util.Locale getDefault()>
<org.apache.http.cookie.CookieOrigin: int getPort()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getOverrideParams()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>
<android.graphics.drawable.Drawable: int[] getState()>
<java.util.StringTokenizer: java.lang.String nextToken()>
<android.view.View$AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>
<java.util.LinkedList: java.lang.Object get(int)>
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>
<android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>
<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>
<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>
<java.util.AbstractMap: java.lang.String toString()>
<java.util.Scanner: java.lang.Object next()>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.view.ViewConfiguration: int getLongPressTimeout()>
<java.net.URI: java.lang.String getHost()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket createSocket()>
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
<org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)>
<android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<android.view.View: int getBottom()>
<android.os.Handler: android.os.Looper getLooper()>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()>
<org.apache.http.HttpHost: java.lang.String getSchemeName()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.net.NetworkInfo: int getType()>
<android.view.View: int getOverScrollMode()>
<android.os.Bundle: int getInt(java.lang.String,int)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.graphics.drawable.Drawable: int getMinimumHeight()>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<java.lang.Object: java.lang.Object clone()>
<android.widget.AdapterView: int getSelectedItemPosition()>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)>
<android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>
<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler getUserTokenHandler()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<android.app.Activity: android.content.ComponentName getCallingActivity()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()>
<java.lang.Class: java.lang.String getCanonicalName()>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)>
<android.location.Location: long getTime()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>
<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()>
<android.view.MotionEvent: float getY(int)>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>
<android.content.Intent: java.lang.String getScheme()>
<java.io.File: java.lang.String getCanonicalPath()>
<android.app.Activity: java.lang.String getCallingPackage()>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
<android.view.View: int getPaddingRight()>
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>
<java.util.Stack: java.lang.Object pop()>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()>
<android.view.KeyEvent: int getMetaState()>
<java.io.File: java.io.File getCanonicalFile()>
<android.content.res.TypedArray: int getInteger(int,int)>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getParent(java.lang.Object)>
<java.net.Socket: java.io.InputStream getInputStream()>
<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>
<android.view.View: int getLabelFor()>
<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()>
<java.net.URI: java.lang.String getScheme()>
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>
<java.lang.Class: java.lang.String getName()>
<android.content.Intent: android.content.ComponentName getComponent()>
<android.view.MotionEvent: float getY()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getPackageName(java.lang.Object)>
<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.net.URI)>
<java.util.Date: long getTime()>
<android.app.Dialog: android.content.Context getContext()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getRequestParams()>
<java.net.URI: java.lang.String getPath()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>
<android.view.VelocityTracker: float getYVelocity(int)>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)>
<android.support.v4.view.ViewCompat$BaseViewCompatImpl: long getFrameTime()>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<java.util.Calendar: java.util.Calendar getInstance()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor getHttpProcessor()>
<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>
<android.widget.SearchView: java.lang.CharSequence getQuery()>
<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)>
<android.app.Activity: android.view.Window getWindow()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.Object getChild(java.lang.Object,int)>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<java.net.InetSocketAddress: java.lang.String getHostName()>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>
<android.view.accessibility.AccessibilityRecord: int getScrollY()>
<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>
<android.app.Notification$Builder: android.app.Notification getNotification()>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.util.List getText(java.lang.Object)>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.support.v4.view.ViewCompatJB: int getImportantForAccessibility(android.view.View)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()>
<android.view.accessibility.AccessibilityRecord: int getFromIndex()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<android.view.accessibility.AccessibilityRecord: int getAddedCount()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<android.view.ViewConfiguration: int getTapTimeout()>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.lang.Class: int getModifiers()>
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>
<android.support.v4.view.PagerAdapter: java.lang.CharSequence getPageTitle(int)>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])>
<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>
<android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>
<android.widget.TabHost: java.lang.String getCurrentTabTag()>
<android.view.View: int getScrollX()>
<android.view.KeyEvent: int getAction()>
<android.app.Activity: android.content.Intent getIntent()>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.Object clone()>
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)>
<java.util.HashMap: java.util.Set keySet()>
<android.widget.AdapterView: long getSelectedItemId()>
<android.view.View: float getAlpha()>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>
<java.net.URI: java.lang.String getQuery()>
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getTargetHost()>
<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>
<java.net.URI: java.lang.String getRawFragment()>
<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>
<java.util.concurrent.TimeUnit: long toMillis(long)>
<android.util.SparseArray: java.lang.Object get(int)>
<org.apache.http.impl.client.RequestWrapper: int getExecCount()>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<java.net.URISyntaxException: java.lang.String getMessage()>
<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>
<android.content.res.Resources: java.lang.String getResourceTypeName(int)>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>
<android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()>
<android.os.Bundle: int getInt(java.lang.String)>
<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<android.widget.TabHost$TabSpec: java.lang.String getTag()>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()>
<android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<android.widget.Scroller: int getFinalX()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.Object getInfo()>
<org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>
<android.animation.ValueAnimator: long getFrameDelay()>
<java.lang.Throwable: java.lang.Throwable getCause()>
<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<android.app.Activity: android.content.ComponentName getComponentName()>
<android.content.res.Resources: java.lang.String getResourceName(int)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<java.util.Locale: java.lang.String getCountry()>
<android.view.View: int getHeight()>
<android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
<java.util.AbstractList: java.util.Iterator iterator()>
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>
<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>
<java.util.HashMap: java.util.Set entrySet()>
<android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>
<android.content.res.TypedArray: int getInt(int,int)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>
<java.net.URI: int getPort()>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()>
<android.location.Location: double getLatitude()>
<org.apache.http.HttpHost: java.lang.String toURI()>
<android.support.v4.view.VelocityTrackerCompatHoneycomb: float getXVelocity(android.view.VelocityTracker,int)>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
<java.lang.String: char[] toCharArray()>
<android.view.ViewGroup: int getChildCount()>
<java.net.ProxySelector: java.net.ProxySelector getDefault()>
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>
<org.apache.http.HttpHost: java.lang.String getHostName()>
<android.content.res.Resources: int getColor(int)>
<android.view.ViewGroup: int getDescendantFocusability()>
<android.view.View: android.view.ViewParent getParentForAccessibility()>
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
<java.net.URI: java.lang.String getRawPath()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()>
<android.content.Intent: java.lang.String getType()>
<android.view.View: android.view.ViewParent getParent()>
<android.view.View$MeasureSpec: int getMode(int)>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>
<android.view.Display: int getDisplayId()>
<android.view.Display: int getOrientation()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.support.v4.view.ViewPager: int getCurrentItem()>
<java.util.LinkedList: java.lang.Object remove()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.support.v4.view.ViewCompat$HCViewCompatImpl: int getLayerType(android.view.View)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()>
<android.os.Bundle: java.util.Set keySet()>
<java.net.Proxy: java.net.Proxy$Type type()>
<java.net.URI: java.lang.String getRawQuery()>
<java.lang.Long: long longValue()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)>
<android.content.Intent: int getFlags()>
<android.view.View: java.lang.Object getTag()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)>
<android.content.Intent: java.lang.String getAction()>
<android.view.ViewGroup$MarginLayoutParams: int getMarginEnd()>
<org.apache.http.util.VersionInfo: java.lang.String getRelease()>
<android.view.ViewConfiguration: int getDoubleTapTimeout()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()>
<android.support.v4.view.ViewCompatJellybeanMr1: int getLabelFor(android.view.View)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>
<android.view.View: int getId()>
<android.widget.OverScroller: float getCurrVelocity()>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>
<android.view.View: int getPaddingBottom()>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getClientParams()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.view.VelocityTracker: float getXVelocity(int)>
<android.view.View: int getWidth()>
<android.app.Activity: android.app.ActionBar getActionBar()>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>
<android.content.res.ColorStateList: int getDefaultColor()>
<android.app.Dialog: android.view.Window getWindow()>
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>
<android.app.Notification: android.app.Notification clone()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()>
<android.view.accessibility.AccessibilityEvent: int getEventType()>
<android.view.VelocityTracker: float getYVelocity()>
<android.view.MotionEvent: float getX()>
<android.view.Gravity: int getAbsoluteGravity(int,int)>
<android.support.v4.view.AccessibilityDelegateCompatJellyBean: java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View)>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()>
<android.view.View: int getLeft()>
<java.lang.Character: byte getDirectionality(char)>
<org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>
<java.io.File: java.io.File getParentFile()>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<android.media.AudioManager: int getRingerMode()>
<android.view.View: int getPaddingLeft()>
<android.support.v4.view.MotionEventCompatEclair: float getY(android.view.MotionEvent,int)>
<android.support.v4.view.VelocityTrackerCompat: float getYVelocity(android.view.VelocityTracker,int)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getApplicationParams()>
<org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.http.auth.AuthScope: java.lang.String getScheme()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()>
<org.apache.http.conn.routing.HttpRoute: int getHopCount()>
<android.widget.OverScroller: int getCurrX()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()>
<android.view.MotionEvent: int getPointerId(int)>
<android.view.ViewGroup$MarginLayoutParams: int getLayoutDirection()>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.support.v4.view.PagerAdapter: float getPageWidth(int)>
<android.support.v4.view.accessibility.AccessibilityRecordCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)>
<android.app.Activity: android.content.Intent getParentActivityIntent()>
<org.apache.http.HttpHost: int getPort()>
<java.util.Locale: java.lang.String getLanguage()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>
<javax.crypto.Cipher: byte[] getIV()>
<android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.RedirectHandler getRedirectHandler()>
<android.view.accessibility.AccessibilityRecord: int getToIndex()>
<android.content.res.Resources: java.lang.String getResourcePackageName(int)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter getAdapter()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs: java.lang.CharSequence getClassName(java.lang.Object)>
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<android.view.MotionEvent: int getEdgeFlags()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
