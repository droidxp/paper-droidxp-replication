<android.content.res.AssetFileDescriptor: long getLength()>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<android.view.MotionEvent: float getX(int)>
<java.lang.String: java.lang.String trim()>
<android.animation.Animator: android.animation.Animator clone()>
<java.lang.Double: double doubleValue()>
<java.text.Collator: int compare(java.lang.Object,java.lang.Object)>
<android.view.MotionEvent: float getY(int)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>

<android.app.Activity: android.view.WindowManager getWindowManager()>
<java.text.Collator: java.text.Collator getInstance()>
<java.util.AbstractList: java.util.Iterator iterator()>
<java.io.ObjectStreamClass: java.lang.String getName()>
<java.util.HashMap: java.util.Set entrySet()>
<java.util.AbstractList: java.util.ListIterator listIterator(int)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<android.view.KeyEvent: int getKeyCode()>
<android.media.AudioManager: int getStreamMaxVolume(int)>
<java.lang.String: char[] toCharArray()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.util.Random: long nextLong()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<java.lang.ThreadLocal: java.lang.Object get()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.lang.Class: java.lang.String getName()>
<java.nio.FloatBuffer: java.nio.FloatBuffer put(java.nio.FloatBuffer)>
<android.view.MotionEvent: float getY()>
<android.view.View: android.content.res.Resources getResources()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<android.view.View: android.view.ViewParent getParent()>
<java.util.HashSet: java.util.Iterator iterator()>
<java.util.Random: float nextFloat()>
<java.lang.StringBuilder: java.lang.String toString()>
<java.lang.Class: java.lang.Object newInstance()>
<android.view.MotionEvent: float getHistoricalY(int)>
<java.net.URL: java.lang.String getFile()>
<java.lang.Long: long longValue()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.lang.ref.Reference: java.lang.Object get()>
<java.nio.ShortBuffer: java.nio.ShortBuffer put(java.nio.ShortBuffer)>
<android.hardware.Sensor: int getType()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.view.Display: int getWidth()>
<android.app.Activity: android.view.Window getWindow()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<java.util.ArrayList: java.lang.Object get(int)>
<android.view.View: int getId()>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<java.lang.String: byte[] getBytes()>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<android.view.Display: int getHeight()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<java.util.AbstractMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.view.MotionEvent: int getAction()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<java.lang.Thread: long getId()>
<java.util.Random: double nextDouble()>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.view.MotionEvent: float getX()>
<java.nio.FloatBuffer: java.nio.FloatBuffer get(float[],int,int)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<android.view.MotionEvent: float getHistoricalX(int)>
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<java.net.URL: java.lang.String getPath()>
<android.view.MotionEvent: int getHistorySize()>
<java.nio.Buffer: java.nio.Buffer clear()>
<java.lang.Class: java.lang.String getSimpleName()>
<java.util.AbstractMap: java.lang.String toString()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.media.AudioManager: int getStreamVolume(int)>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.view.KeyEvent: int getAction()>
<java.util.HashMap: java.util.Set keySet()>
<android.view.MotionEvent: int getPointerId(int)>
<java.nio.Buffer: java.nio.Buffer rewind()>
<java.util.HashMap: java.util.Collection values()>
<android.graphics.Bitmap: int getWidth()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.view.View: android.content.Context getContext()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<java.lang.Float: float floatValue()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<android.app.ListActivity: android.widget.ListView getListView()>
<java.lang.Object: java.lang.Object clone()>
<android.graphics.Bitmap: int getHeight()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
