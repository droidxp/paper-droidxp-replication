<java.util.TimeZone: int getOffset(long)>
<android.view.View: int getRight()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<java.lang.String: java.lang.String trim()>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.Calendar: java.util.Date getTime()>
<java.util.UUID: java.lang.String toString()>
<java.lang.Character: char charValue()>
<android.widget.TextView: java.lang.CharSequence getText()>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>
<java.util.UUID: long getLeastSignificantBits()>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.lang.Double: double doubleValue()>
<android.widget.TextView: int getCompoundPaddingTop()>
<java.lang.String: java.lang.String toString()>
<java.io.InputStream: long skip(long)>
<android.net.Uri$Builder: android.net.Uri build()>
<java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<android.widget.TextView: int getCompoundPaddingBottom()>

<java.io.File: java.io.File[] listFiles()>
<java.lang.reflect.Constructor: int getModifiers()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<android.view.View: android.os.IBinder getWindowToken()>
<java.util.Locale: java.lang.String getDisplayCountry()>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>
<java.net.HttpURLConnection: int getResponseCode()>
<android.view.View$MeasureSpec: int getSize(int)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>
<java.io.ObjectStreamClass: java.lang.String getName()>
<android.view.View: int getMeasuredHeight()>
<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<java.util.Locale: java.lang.String getISO3Language()>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<java.util.ArrayList: java.lang.Object[] toArray()>
<java.util.Hashtable: java.util.Collection values()>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<android.widget.TextView: float getTextSize()>
<android.media.AudioManager: boolean isMusicActive()>
<java.util.TreeSet: java.util.Iterator iterator()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<java.security.MessageDigest: byte[] digest()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<java.lang.ThreadLocal: java.lang.Object get()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<java.lang.reflect.Constructor: java.lang.String getName()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$ConstantState getConstantState()>
<java.net.HttpURLConnection: java.lang.String getResponseMessage()>
<android.view.View: android.content.res.Resources getResources()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
<java.net.URI: java.lang.String getAuthority()>
<java.lang.Class: java.lang.Object newInstance()>
<android.content.res.TypedArray: java.lang.String getString(int)>
<java.util.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.telephony.TelephonyManager: int getNetworkType()>
<android.location.Location: float getSpeed()>
<android.view.View: int getTop()>
<android.telephony.TelephonyManager: int getPhoneType()>
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>
<android.view.MotionEvent: float getRawX()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>
<android.content.Context: java.lang.String getString(int)>
<java.util.Currency: java.util.Currency getInstance(java.lang.String)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<java.math.BigDecimal: double doubleValue()>
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>
<java.lang.Class: java.lang.reflect.Field[] getFields()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<java.net.URL: java.lang.String toString()>
<android.widget.TextView: int getExtendedPaddingTop()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.content.res.Resources: java.lang.String getString(int)>
<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage$MessageLevel messageLevel()>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
<android.content.res.Resources: float getDimension(int)>
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<java.lang.String: byte[] getBytes()>
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<java.io.ObjectInputStream: byte readByte()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.widget.EditText: android.text.Editable getText()>
<android.view.Display: int getRotation()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<org.json.JSONObject: double getDouble(java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.content.res.TypedArray: int getColor(int,int)>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<java.util.AbstractMap: int hashCode()>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.view.View: int getWindowVisibility()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.net.URLConnection: java.lang.String getContentEncoding()>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<java.util.jar.JarFile: java.util.jar.JarEntry getJarEntry(java.lang.String)>
<java.text.DateFormat: java.lang.Object clone()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<java.net.URI: java.lang.String getFragment()>
<java.lang.ClassLoader: java.lang.ClassLoader getParent()>
<android.net.NetworkInfo: int getSubtype()>
<android.os.Message: android.os.Bundle getData()>
<java.lang.Class: java.lang.String getSimpleName()>
<android.view.ViewGroup: android.view.View getFocusedChild()>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<android.view.View: int getPaddingTop()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<android.content.ComponentName: java.lang.String getPackageName()>
<java.io.File: java.lang.String getName()>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<java.lang.Thread: java.lang.String getName()>
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>
<org.json.JSONObject: java.util.Iterator keys()>
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<java.util.HashMap: java.util.Collection values()>
<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object peek()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.content.ComponentName: java.lang.String getClassName()>
<org.json.JSONArray: java.lang.Object get(int)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.view.View: android.content.Context getContext()>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
<java.net.URLConnection: java.net.URL getURL()>
<java.util.Hashtable: java.util.Set entrySet()>
<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>
<java.lang.Float: float floatValue()>
<android.media.AudioManager: int getMode()>
<android.content.pm.Signature: byte[] toByteArray()>
<java.util.zip.CRC32: long getValue()>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<java.net.URLConnection: java.util.Map getHeaderFields()>
<java.net.URL: int getPort()>
<java.lang.reflect.Method: java.lang.annotation.Annotation[][] getParameterAnnotations()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>
<android.view.View: int getMeasuredWidth()>
<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>
<java.net.URL: java.lang.String getProtocol()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<java.net.URI: java.lang.String toASCIIString()>
<android.os.Looper: android.os.Looper getMainLooper()>
<java.security.KeyStore: java.lang.String getDefaultType()>
<android.content.res.TypedArray: int getResourceId(int,int)>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<android.os.StatFs: int getBlockSize()>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.webkit.WebView: int getProgress()>
<java.util.EnumMap: java.util.Set entrySet()>
<java.net.URL: java.lang.String toExternalForm()>
<android.view.KeyEvent: int getRepeatCount()>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<java.lang.Enum: java.lang.Class getDeclaringClass()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<java.util.Date: int getYear()>
<java.io.StringWriter: java.lang.String toString()>
<java.lang.System: java.lang.SecurityManager getSecurityManager()>
<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.nio.charset.Charset: java.lang.String name()>
<android.view.KeyEvent: int getKeyCode()>
<android.view.View: int[] getDrawableState()>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<org.json.JSONObject: int getInt(java.lang.String)>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<java.util.concurrent.SynchronousQueue: java.lang.Object take()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>
<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>
<java.net.URI: java.lang.String toString()>
<java.math.BigInteger: byte[] toByteArray()>
<java.lang.Class: java.lang.Object[] getEnumConstants()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<android.location.Location: float getAccuracy()>
<java.util.HashSet: java.util.Iterator iterator()>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header[] getAllHeaders()>
<java.io.File: java.lang.String getPath()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.lang.reflect.Method: int getModifiers()>
<android.util.SparseIntArray: android.util.SparseIntArray clone()>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
<java.net.InetAddress: java.lang.String getHostAddress()>
<java.net.URL: java.lang.String getFile()>
<android.widget.TextView: int getGravity()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<android.graphics.drawable.Drawable: int getMinimumWidth()>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<java.lang.ref.Reference: java.lang.Object get()>
<java.lang.StringBuffer: java.lang.String toString()>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.util.SparseIntArray: int get(int,int)>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<android.widget.TextView: android.text.Layout getLayout()>
<java.util.LinkedList: java.lang.Object getFirst()>
<android.location.Location: double getLongitude()>
<android.app.Activity: int getRequestedOrientation()>
<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>
<java.util.LinkedList: java.lang.Object removeFirst()>
<java.util.concurrent.TimeUnit: long toSeconds(long)>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<java.util.ArrayList: java.lang.Object get(int)>
<java.io.ObjectInputStream: java.lang.String readUTF()>
<android.location.Address: java.lang.String getThoroughfare()>
<java.lang.Enum: java.lang.String toString()>
<android.view.Display: int getHeight()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.view.View: int getVisibility()>
<android.view.MotionEvent: int getAction()>
<android.content.ComponentName: android.content.ComponentName clone()>
<java.lang.reflect.Constructor: java.lang.reflect.Type[] getGenericParameterTypes()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectNetwork()>
<java.util.UUID: long getMostSignificantBits()>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<java.lang.Thread: long getId()>
<java.util.AbstractCollection: java.lang.Object[] toArray()>
<java.lang.reflect.Constructor: java.lang.reflect.TypeVariable[] getTypeParameters()>
<java.net.URL: java.lang.Object getContent()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.content.Intent: android.net.Uri getData()>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.util.Locale: java.util.Locale getDefault()>
<java.util.Vector: java.lang.Object get(int)>
<android.graphics.drawable.Drawable: int[] getState()>
<java.util.StringTokenizer: java.lang.String nextToken()>
<java.math.BigInteger: long longValue()>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>
<java.text.NumberFormat: java.lang.String format(double)>
<java.util.LinkedList: java.lang.Object get(int)>
<java.util.Scanner: java.lang.Object next()>
<java.util.AbstractMap: java.lang.String toString()>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.lang.reflect.Field: java.lang.String getName()>
<android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<android.view.View: int getBottom()>
<android.os.Handler: android.os.Looper getLooper()>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>
<java.nio.Buffer: java.nio.Buffer rewind()>
<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.lang.String)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.net.NetworkInfo: int getType()>
<android.os.Bundle: int getInt(java.lang.String,int)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.graphics.drawable.Drawable: int getMinimumHeight()>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<android.net.wifi.WifiManager: java.util.List getScanResults()>
<java.lang.Object: java.lang.Object clone()>
<java.io.File: java.lang.String[] list()>
<android.widget.VideoView: int getCurrentPosition()>
<android.os.Message: java.lang.String toString()>
<java.lang.reflect.Field: java.lang.Class getType()>
<android.database.AbstractWindowedCursor: java.lang.String getString(int)>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<java.io.ByteArrayOutputStream: java.lang.String toString()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.content.Intent: byte getByteExtra(java.lang.String,byte)>
<java.lang.Class: java.lang.String getCanonicalName()>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[][] getParameterAnnotations()>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
<android.location.Location: long getTime()>
<java.util.Hashtable: java.util.Enumeration keys()>
<java.lang.reflect.Field: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<java.lang.Enum: java.lang.String name()>
<java.lang.StackTraceElement: java.lang.String toString()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<java.lang.reflect.Field: int getModifiers()>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.content.Intent: java.lang.String getScheme()>
<android.database.AbstractWindowedCursor: long getLong(int)>
<android.graphics.Bitmap: int getRowBytes()>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<android.net.wifi.WifiInfo: int getLinkSpeed()>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<java.util.Calendar: java.util.TimeZone getTimeZone()>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>
<java.lang.StringBuffer: java.lang.StringBuffer reverse()>
<java.util.Stack: java.lang.Object pop()>
<android.webkit.ConsoleMessage: java.lang.String message()>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<java.util.EnumMap: java.util.Set keySet()>
<java.lang.String: byte[] getBytes(java.lang.String)>
<android.os.Bundle: java.lang.Object get(java.lang.String)>
<java.io.File: java.io.File getCanonicalFile()>
<java.lang.StackTraceElement: java.lang.String getFileName()>
<java.io.ObjectInputStream: long readLong()>
<org.xml.sax.SAXException: java.lang.String getMessage()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
<android.os.Message: long getWhen()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<java.net.URI: java.lang.String getScheme()>
<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>
<java.lang.Class: java.lang.String getName()>
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>
<android.widget.TextView: int getCompoundPaddingRight()>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.view.MotionEvent: float getY()>
<java.util.Date: long getTime()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<android.widget.TextView: int getCompoundPaddingLeft()>
<java.net.URI: java.lang.String getPath()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.lang.reflect.Field: long getLong(java.lang.Object)>
<android.view.LayoutInflater: android.view.LayoutInflater$Factory getFactory()>
<java.io.Reader: int read(char[])>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
<android.graphics.drawable.Drawable$ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
<java.net.URL: java.lang.String getHost()>
<java.net.URI: java.net.URI normalize()>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.widget.TextView: int getCurrentTextColor()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>
<java.lang.reflect.AccessibleObject: java.lang.annotation.Annotation[] getAnnotations()>
<java.util.Stack: java.lang.Object peek()>
<android.app.Activity: android.view.Window getWindow()>
<java.lang.reflect.Constructor: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<java.sql.Date: java.lang.String toString()>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<java.lang.Thread: java.lang.Thread$State getState()>
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.net.URLConnection: int getContentLength()>
<java.net.HttpURLConnection: java.lang.String getContentEncoding()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<android.widget.ProgressBar: int getMax()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<android.net.Uri$Builder: android.net.Uri$Builder encodedQuery(java.lang.String)>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<java.lang.Class: int getModifiers()>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<java.util.concurrent.atomic.AtomicLong: long get()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>
<java.nio.Buffer: java.nio.Buffer clear()>
<android.location.Address: java.lang.String getPostalCode()>
<android.widget.TextView: android.graphics.Typeface getTypeface()>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<java.lang.Class: java.lang.Package getPackage()>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>
<java.net.URLConnection: java.lang.String getContentType()>
<android.database.CursorWindow: int getNumRows()>
<android.widget.VideoView: int getDuration()>
<android.view.KeyEvent: int getAction()>
<android.app.Activity: android.content.Intent getIntent()>
<android.content.res.Resources: int getInteger(int)>
<java.util.HashMap: java.util.Set keySet()>
<android.text.Layout: int getHeight()>
<android.graphics.Bitmap: int getWidth()>
<java.net.URI: java.lang.String getQuery()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<java.text.ParsePosition: int getErrorIndex()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.util.Vector: java.util.Enumeration elements()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.util.SparseArray: java.lang.Object get(int)>
<java.util.concurrent.TimeUnit: long toMillis(long)>
<android.webkit.WebView: java.lang.String getUrl()>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<android.text.StaticLayout: int getLineCount()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>
<android.view.MotionEvent: float getRawY()>
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
<android.content.res.Resources: java.lang.String getResourceTypeName(int)>
<android.os.Bundle: int getInt(java.lang.String)>
<java.util.concurrent.FutureTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<java.lang.reflect.Method: java.lang.annotation.Annotation[] getDeclaredAnnotations()>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>
<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>
<android.location.Address: java.lang.String getAdminArea()>
<android.app.Activity: java.lang.String getLocalClassName()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.lang.Throwable: java.lang.Throwable getCause()>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<android.os.Environment: java.io.File getDataDirectory()>
<java.lang.StackTraceElement: int getLineNumber()>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<android.app.Activity: android.content.ComponentName getComponentName()>
<android.content.res.Resources: java.lang.String getResourceName(int)>
<java.util.Calendar: long getTimeInMillis()>
<java.util.Locale: java.lang.String getCountry()>
<android.view.View: int getHeight()>
<java.nio.Buffer: java.nio.Buffer flip()>
<android.location.Address: java.lang.String getCountryName()>
<java.util.AbstractList: java.util.Iterator iterator()>
<java.util.HashMap: java.util.Set entrySet()>
<java.util.Calendar: int get(int)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<android.webkit.ConsoleMessage: java.lang.String sourceId()>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()>
<android.location.Location: double getLatitude()>
<java.lang.Number: short shortValue()>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.lang.String: char[] toCharArray()>
<android.view.ViewGroup: int getChildCount()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<android.content.res.Resources: int getColor(int)>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<android.os.StatFs: int getAvailableBlocks()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>
<android.view.View: android.view.ViewParent getParent()>
<android.view.View$MeasureSpec: int getMode(int)>
<android.view.Display: int getOrientation()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: org.apache.http.HttpEntity getEntity()>
<android.os.Bundle: java.util.Set keySet()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<java.lang.reflect.Method: java.lang.String getName()>
<java.util.Locale: java.lang.String getDisplayLanguage()>
<java.lang.Long: long longValue()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<android.view.View: android.view.View getRootView()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<android.view.View: java.lang.Object getTag()>
<android.os.StatFs: int getBlockCount()>
<android.content.Intent: java.lang.String getAction()>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<android.view.Display: int getWidth()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<java.lang.Number: byte byteValue()>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<android.view.View: int getId()>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.content.Intent: java.lang.String getDataString()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<java.lang.Thread: java.util.Map getAllStackTraces()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.view.View: int getWidth()>
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()>
<java.lang.Package: java.lang.String getName()>
<java.util.jar.JarFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitNetwork()>
<android.app.Dialog: android.view.Window getWindow()>
<android.app.Notification: android.app.Notification clone()>
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<org.json.JSONArray: java.lang.String getString(int)>
<android.view.MotionEvent: float getX()>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<java.util.concurrent.atomic.AtomicInteger: int get()>
<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>
<java.lang.Long: java.lang.String toString()>
<android.view.View: int getLeft()>
<java.io.File: java.io.File getParentFile()>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<java.net.URL: java.lang.String getPath()>
<java.util.StringTokenizer: java.lang.Object nextElement()>
<android.media.AudioManager: int getRingerMode()>
<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<java.math.BigInteger: double doubleValue()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>
<android.os.Messenger: android.os.IBinder getBinder()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.media.AudioManager: int getStreamVolume(int)>
<java.lang.Boolean: java.lang.String toString()>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<android.util.SparseArray: android.util.SparseArray clone()>
<org.json.JSONObject: long getLong(java.lang.String)>
<java.util.Locale: java.lang.String getLanguage()>
<java.util.TimeZone: java.lang.String getID()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.content.res.Resources: java.lang.String getResourcePackageName(int)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.graphics.Bitmap: int getHeight()>
<android.widget.TextView: android.text.TextPaint getPaint()>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
<java.util.WeakHashMap: java.lang.Object get(java.lang.Object)>
<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<org.apache.http.HttpHost: java.lang.String toHostString()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
