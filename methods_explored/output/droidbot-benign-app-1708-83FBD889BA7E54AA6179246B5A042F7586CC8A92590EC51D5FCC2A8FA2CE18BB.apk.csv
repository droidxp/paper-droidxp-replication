<android.widget.ProgressBar: int getProgress()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.view.View: int getRight()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<java.util.TreeMap: java.util.Set entrySet()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<java.lang.String: java.lang.String trim()>
<java.lang.Character: char charValue()>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.UUID: java.lang.String toString()>
<android.widget.TextView: java.lang.CharSequence getText()>
<android.telephony.gsm.GsmCellLocation: int getCid()>
<android.widget.TextView: int getCompoundPaddingTop()>
<java.lang.String: java.lang.String toString()>
<java.util.regex.Pattern: java.lang.String toString()>
<android.net.Uri$Builder: android.net.Uri build()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<android.widget.TextView: int getCompoundPaddingBottom()>

<java.io.File: java.io.File[] listFiles()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<android.view.View: android.os.IBinder getWindowToken()>
<java.net.HttpURLConnection: int getResponseCode()>
<android.view.View$MeasureSpec: int getSize(int)>
<java.io.ObjectStreamClass: java.lang.String getName()>
<android.view.View: int getMeasuredHeight()>
<java.util.Hashtable: java.util.Collection values()>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<android.widget.TextView: float getTextSize()>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<java.util.LinkedList: java.lang.Object getLast()>
<java.security.MessageDigest: byte[] digest()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>
<java.util.AbstractCollection: java.lang.String toString()>
<java.lang.ThreadLocal: java.lang.Object get()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<android.view.View: android.content.res.Resources getResources()>
<java.lang.Class: java.lang.reflect.Type getGenericSuperclass()>
<java.lang.Class: java.lang.Object newInstance()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.view.View: int getTop()>
<android.location.Location: float getSpeed()>
<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<android.content.Context: java.lang.String getString(int)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<java.math.BigDecimal: double doubleValue()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<java.net.URL: java.lang.String toString()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.content.res.Resources: java.lang.String getString(int)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>
<java.lang.String: byte[] getBytes()>
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.widget.EditText: android.text.Editable getText()>
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>
<android.view.Display: int getRotation()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<java.util.AbstractMap: int hashCode()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.net.URL: java.net.URI toURI()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<android.os.Message: android.os.Bundle getData()>
<java.lang.Class: java.lang.String getSimpleName()>
<android.net.NetworkInfo: int getSubtype()>
<android.view.ViewGroup: android.view.View getFocusedChild()>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.telephony.cdma.CdmaCellLocation: int getSystemId()>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<android.view.View: int getPaddingTop()>
<java.util.AbstractList: java.util.List subList(int,int)>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<android.view.Window: android.view.View findViewById(int)>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitAll()>
<java.io.File: java.lang.String getName()>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<android.telephony.gsm.GsmCellLocation: int getLac()>
<org.json.JSONObject: java.util.Iterator keys()>
<java.util.HashMap: java.util.Collection values()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.view.View: android.content.Context getContext()>
<java.net.URLConnection: java.net.URL getURL()>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
<java.util.Hashtable: java.util.Set entrySet()>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<java.lang.reflect.Array: int getLength(java.lang.Object)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<java.lang.Integer: java.lang.String toString()>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.net.wifi.WifiInfo: int getRssi()>
<java.net.URL: java.lang.String getProtocol()>
<android.net.wifi.WifiInfo: int getIpAddress()>
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.net.URI: java.lang.String toASCIIString()>
<android.os.Looper: android.os.Looper getMainLooper()>
<java.nio.CharBuffer: java.lang.String toString()>
<android.os.StatFs: int getBlockSize()>
<java.util.Hashtable: java.lang.Object get(java.lang.Object)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<java.net.URL: java.lang.String toExternalForm()>
<android.view.KeyEvent: int getRepeatCount()>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<java.io.StringWriter: java.lang.String toString()>
<android.view.KeyEvent: int getKeyCode()>
<java.nio.charset.Charset: java.lang.String name()>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<org.json.JSONObject: int getInt(java.lang.String)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<java.io.File: java.lang.String getParent()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>
<java.util.concurrent.FutureTask: java.lang.Object get()>
<java.net.URI: java.lang.String toString()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<java.lang.Class: java.lang.Object[] getEnumConstants()>
<android.location.Location: float getAccuracy()>
<android.text.StaticLayout: int getLineStart(int)>
<java.io.File: java.lang.String getPath()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.net.URL: java.lang.String getAuthority()>
<java.net.InetAddress: java.lang.String getHostAddress()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<java.lang.ref.Reference: java.lang.Object get()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<java.util.LinkedList: java.lang.Object getFirst()>
<android.location.Location: double getLongitude()>
<android.hardware.Sensor: int getType()>
<java.util.LinkedList: java.lang.Object removeFirst()>
<android.app.Activity: int getRequestedOrientation()>
<android.location.Location: double getAltitude()>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<java.util.ArrayList: java.lang.Object get(int)>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<java.lang.Enum: java.lang.String toString()>
<android.view.Display: int getHeight()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.view.View: int getVisibility()>
<android.view.MotionEvent: int getAction()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder detectNetwork()>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<java.net.URL: java.lang.Object getContent()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.content.Intent: android.net.Uri getData()>
<java.lang.reflect.Field: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>
<java.util.Locale: java.util.Locale getDefault()>
<java.util.Vector: java.lang.Object get(int)>
<java.net.URL: java.lang.String getQuery()>
<java.util.StringTokenizer: java.lang.String nextToken()>
<java.math.BigInteger: long longValue()>
<java.util.LinkedList: java.lang.Object get(int)>
<java.net.URI: java.lang.String getHost()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.lang.reflect.Field: java.lang.String getName()>
<android.view.View: int getBottom()>
<android.os.Handler: android.os.Looper getLooper()>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.net.NetworkInfo: int getType()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.location.Location: java.lang.String getProvider()>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<android.net.wifi.WifiManager: java.util.List getScanResults()>
<java.lang.Object: java.lang.Object clone()>
<java.io.File: java.lang.String[] list()>
<android.widget.VideoView: int getCurrentPosition()>
<android.os.Parcel: java.io.Serializable readSerializable()>
<java.lang.reflect.Field: java.lang.Class getType()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<java.lang.Class: java.lang.String getCanonicalName()>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>
<android.location.Location: long getTime()>
<java.lang.Enum: java.lang.String name()>
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)>
<java.lang.reflect.Field: int getModifiers()>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.content.Intent: java.lang.String getScheme()>
<android.net.wifi.WifiInfo: int getLinkSpeed()>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<android.view.View: int getPaddingRight()>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.lang.StackTraceElement: java.lang.String getFileName()>
<android.media.AudioManager: int getStreamMaxVolume(int)>
<java.io.ObjectInputStream: long readLong()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<java.lang.Class: java.lang.reflect.Type[] getGenericInterfaces()>
<android.view.animation.Animation: float resolveSize(int,float,int,int)>
<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<java.lang.Class: java.lang.String getName()>
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>
<android.widget.TextView: int getCompoundPaddingRight()>
<android.view.MotionEvent: float getY()>
<java.util.Date: long getTime()>
<android.app.Activity: android.app.Activity getParent()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<android.text.Layout: int getLineEnd(int)>
<android.widget.TextView: int getCompoundPaddingLeft()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.lang.reflect.Field: long getLong(java.lang.Object)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<java.util.Calendar: java.util.Calendar getInstance()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.app.Activity: android.view.Window getWindow()>
<android.widget.ViewAnimator: android.view.View getCurrentView()>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<android.text.StaticLayout: int getLineForVertical(int)>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<android.widget.ProgressBar: int getMax()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<android.webkit.WebView: java.lang.String getTitle()>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.lang.Class: int getModifiers()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>
<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.widget.VideoView: int getDuration()>
<android.view.KeyEvent: int getAction()>
<android.app.Activity: android.content.Intent getIntent()>
<java.util.HashMap: java.util.Set keySet()>
<java.net.URL: java.lang.String getRef()>
<android.text.Layout: int getHeight()>
<android.graphics.Bitmap: int getWidth()>
<android.app.Activity: android.app.Application getApplication()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.webkit.WebView: java.lang.String getUrl()>
<android.text.StaticLayout: int getLineCount()>
<android.widget.ProgressBar: int getSecondaryProgress()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.lang.Throwable: java.lang.Throwable getCause()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>
<java.util.Calendar: long getTimeInMillis()>
<java.util.Locale: java.lang.String getCountry()>
<android.view.View: int getHeight()>
<android.location.Location: float getBearing()>
<java.util.HashMap: java.util.Set entrySet()>
<java.util.Calendar: int get(int)>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<android.location.Location: double getLatitude()>
<java.lang.String: char[] toCharArray()>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
<android.view.ViewGroup: int getChildCount()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<java.io.CharArrayWriter: java.lang.String toString()>
<android.os.StatFs: int getAvailableBlocks()>
<android.view.View: android.view.ViewParent getParent()>
<android.view.Display: int getOrientation()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.app.ActivityManager: int getMemoryClass()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>
<java.lang.reflect.Method: java.lang.String getName()>
<java.lang.Long: long longValue()>
<android.view.View: android.view.View getRootView()>
<java.net.URLConnection: long getLastModified()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.view.View: java.lang.Object getTag()>
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>
<android.content.Intent: java.lang.String getAction()>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>
<android.view.Display: int getWidth()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<android.view.View: int getId()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.text.Layout: float getLineWidth(int)>
<android.view.View: int getPaddingBottom()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.view.View: int getWidth()>
<android.os.HandlerThread: android.os.Looper getLooper()>
<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitNetwork()>
<android.app.Notification: android.app.Notification clone()>
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<android.view.MotionEvent: float getX()>
<org.json.JSONArray: java.lang.String getString(int)>
<android.view.View: int getLeft()>
<java.util.StringTokenizer: java.lang.Object nextElement()>
<java.net.URL: java.lang.String getPath()>
<android.view.View: int getPaddingLeft()>
<java.util.regex.Matcher: java.lang.String group()>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.media.AudioManager: int getStreamVolume(int)>
<java.lang.Boolean: java.lang.String toString()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<android.util.SparseArray: android.util.SparseArray clone()>
<org.json.JSONObject: long getLong(java.lang.String)>
<java.util.Locale: java.lang.String getLanguage()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<java.util.Formatter: java.lang.String toString()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.util.LinkedList: java.lang.Object removeLast()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.graphics.Bitmap: int getHeight()>
<android.widget.TextView: android.text.TextPaint getPaint()>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<java.lang.System: java.util.Properties getProperties()>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<java.io.File: java.lang.String getAbsolutePath()>
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager$Query)>
