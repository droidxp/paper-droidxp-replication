<android.view.ViewConfiguration: int getScaledTouchSlop()>
<android.content.res.AssetFileDescriptor: long getLength()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.os.Bundle: int getInt(java.lang.String)>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<java.io.File: java.io.File getAbsoluteFile()>
<android.view.MotionEvent: float getX(int)>
<java.lang.String: java.lang.String trim()>
<android.animation.Animator: android.animation.Animator clone()>
<android.location.Location: long getTime()>
<java.lang.Class: java.net.URL getResource(java.lang.String)>
<java.lang.reflect.Field: int getModifiers()>
<android.view.MotionEvent: float getY(int)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.os.Looper: android.os.Looper getMainLooper()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.security.KeyStore: java.lang.String getDefaultType()>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<java.lang.StackTraceElement: int getLineNumber()>

<android.app.Activity: android.view.WindowManager getWindowManager()>
<java.io.File: java.io.File[] listFiles()>
<java.util.Locale: java.lang.String getCountry()>
<android.view.View: int getHeight()>
<android.view.View$MeasureSpec: int getSize(int)>
<java.nio.CharBuffer: java.nio.CharBuffer get(char[])>
<java.nio.Buffer: java.nio.Buffer flip()>
<java.nio.Buffer: java.lang.String toString()>
<java.util.AbstractList: java.util.Iterator iterator()>
<java.util.HashMap: java.util.Set entrySet()>
<android.os.Bundle: java.lang.Object get(java.lang.String)>
<java.util.Stack: java.lang.Object pop()>
<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<android.view.KeyEvent: int getKeyCode()>
<java.net.URI: int getPort()>
<java.lang.Float: short shortValue()>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()>
<android.location.Location: double getLatitude()>
<java.lang.Float: double doubleValue()>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.lang.String: char[] toCharArray()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.view.ViewGroup: int getChildCount()>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<java.util.LinkedList: java.lang.Object getLast()>
<java.security.MessageDigest: byte[] digest()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.app.ActivityManager: java.util.List getRunningServices(int)>
<java.net.URI: java.lang.String getScheme()>
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.lang.Class: java.lang.String getName()>
<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>
<android.view.MotionEvent: float getY()>
<android.os.Bundle: long getLong(java.lang.String)>
<java.lang.Class: java.lang.Object[] getEnumConstants()>
<java.util.Date: long getTime()>
<android.location.Location: float getAccuracy()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<java.util.HashSet: java.util.Iterator iterator()>
<android.location.LocationManager: java.util.List getAllProviders()>
<java.io.File: java.lang.String getPath()>
<java.net.URI: java.lang.String getPath()>
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.view.Display: int getOrientation()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.lang.StringBuilder: java.lang.String toString()>
<java.security.Provider: java.util.Set keySet()>
<java.lang.Class: java.lang.Object newInstance()>
<java.io.Reader: int read(char[])>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.view.MotionEvent: int getPointerCount()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.telephony.TelephonyManager: int getNetworkType()>
<java.lang.reflect.Method: java.lang.String getName()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<org.apache.http.entity.ByteArrayEntity: java.io.InputStream getContent()>
<java.lang.Long: long longValue()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<java.nio.ByteBuffer: java.nio.ByteOrder order()>
<java.lang.ref.Reference: java.lang.Object get()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.content.Intent: java.lang.String getAction()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<java.util.LinkedList: java.lang.Object getFirst()>
<android.location.Location: double getLongitude()>
<java.lang.Float: byte byteValue()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.os.Bundle: java.lang.String toString()>
<android.hardware.Sensor: int getType()>
<java.util.LinkedList: java.lang.Object removeFirst()>
<java.util.Stack: java.lang.Object peek()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.app.Activity: android.view.Window getWindow()>
<android.view.Display: int getWidth()>
<android.widget.ViewAnimator: android.view.View getCurrentView()>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<java.util.ArrayList: java.lang.Object get(int)>
<android.view.View: int getId()>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.lang.String: byte[] getBytes()>
<java.net.URLConnection: int getContentLength()>
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.content.Intent: java.lang.String getDataString()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.view.MotionEvent: long getEventTime()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<android.view.Display: int getHeight()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.view.View: int getVisibility()>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<android.view.MotionEvent: int getAction()>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.view.View: int getWidth()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<java.lang.Thread: long getId()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<android.app.Dialog: android.view.Window getWindow()>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<android.app.Notification: android.app.Notification clone()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<java.util.AbstractList: java.util.ListIterator listIterator()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.view.MotionEvent: float getX()>
<android.view.View: int getWindowVisibility()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<java.util.Locale: java.util.Locale getDefault()>
<java.util.Vector: java.lang.Object get(int)>
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>
<android.view.Window: android.view.WindowManager getWindowManager()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<java.lang.Class: int getModifiers()>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<java.io.File: java.io.File getParentFile()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<java.util.StringTokenizer: java.lang.String nextToken()>
<java.nio.Buffer: java.nio.Buffer clear()>
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<java.util.LinkedList: java.lang.Object get(int)>
<java.lang.Class: java.lang.String getSimpleName()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<java.util.AbstractMap: java.lang.String toString()>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.net.URI: java.lang.String getHost()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.content.ComponentName: java.lang.String getPackageName()>
<java.lang.reflect.Field: java.lang.String getName()>
<java.io.File: java.lang.String getName()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.view.KeyEvent: int getAction()>
<android.app.Activity: android.content.Intent getIntent()>
<java.lang.Class: java.lang.reflect.Method[] getMethods()>
<java.util.Vector: java.lang.Object firstElement()>
<java.util.HashMap: java.util.Set keySet()>
<android.view.MotionEvent: int getPointerId(int)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<java.nio.Buffer: java.nio.Buffer rewind()>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<android.graphics.Bitmap: int getWidth()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.content.ComponentName: java.lang.String getClassName()>
<java.util.Locale: java.lang.String getLanguage()>
<org.json.JSONArray: java.lang.Object get(int)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.view.View: android.content.Context getContext()>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<java.util.AbstractSequentialList: java.lang.Object get(int)>
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<java.lang.Float: float floatValue()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.util.zip.CRC32: long getValue()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<java.util.TimeZone: java.lang.String getID()>
<android.view.KeyEvent: int getUnicodeChar()>
<android.webkit.WebView: java.lang.String getUrl()>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.lang.Object: java.lang.Object clone()>
<android.graphics.Bitmap: int getHeight()>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<java.lang.Short: short shortValue()>
<java.lang.Byte: byte byteValue()>
<java.lang.Float: long longValue()>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.lang.reflect.Field: java.lang.Class getType()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
