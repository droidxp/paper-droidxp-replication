<javax.net.ssl.HttpsURLConnection: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
<android.content.res.AssetFileDescriptor: long getLength()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<java.io.File: java.io.File getAbsoluteFile()>
<java.net.URL: java.lang.String getProtocol()>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.UUID: java.lang.String toString()>
<android.location.Location: long getTime()>
<org.json.JSONArray: org.json.JSONArray getJSONArray(int)>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
<java.lang.Double: double doubleValue()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<org.json.JSONArray: int getInt(int)>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<android.os.StatFs: int getBlockSize()>
<org.json.JSONArray: boolean getBoolean(int)>

<android.app.Activity: android.view.WindowManager getWindowManager()>
<java.io.File: java.io.File[] listFiles()>
<java.net.HttpURLConnection: int getResponseCode()>
<android.view.View$MeasureSpec: int getSize(int)>
<java.util.AbstractList: java.util.Iterator iterator()>
<android.location.Location: float getBearing()>
<java.util.Stack: java.lang.Object pop()>
<android.webkit.ConsoleMessage: java.lang.String message()>
<java.util.HashMap: java.util.Set entrySet()>
<android.os.Bundle: java.lang.Object get(java.lang.String)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<android.location.Location: double getLatitude()>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>
<org.json.JSONObject: int getInt(java.lang.String)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<java.io.File: java.lang.String getParent()>
<java.net.Socket: java.io.InputStream getInputStream()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.os.StatFs: int getAvailableBlocks()>
<android.location.Location: float getAccuracy()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<java.util.HashSet: java.util.Iterator iterator()>
<java.io.File: java.lang.String getPath()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>
<java.lang.Class: java.lang.Object newInstance()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<android.provider.MediaStore$Images$Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.location.Location: float getSpeed()>
<java.lang.Long: long longValue()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>
<java.io.RandomAccessFile: long length()>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<java.lang.StringBuffer: java.lang.String toString()>
<android.content.Intent: java.lang.String getAction()>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<android.location.Location: double getLongitude()>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.hardware.Sensor: int getType()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.view.Display: int getWidth()>
<android.app.Activity: android.view.Window getWindow()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<android.location.Location: double getAltitude()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<org.json.JSONObject: java.lang.Object get(java.lang.String)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<java.util.ArrayList: java.lang.Object get(int)>
<java.lang.String: byte[] getBytes()>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<android.view.Display: int getHeight()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.view.View: int getVisibility()>
<android.widget.EditText: android.text.Editable getText()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<java.lang.Package: java.lang.String getName()>
<java.io.File: java.lang.String toString()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.content.Intent: android.net.Uri getData()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<org.json.JSONArray: java.lang.String getString(int)>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface$OnCancelListener)>
<java.net.ServerSocket: int getLocalPort()>
<android.net.Proxy: java.lang.String getDefaultHost()>
<java.io.File: java.io.File getParentFile()>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<org.json.JSONArray: long getLong(int)>
<java.lang.Class: java.lang.Package getPackage()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>
<javax.net.ssl.HttpsURLConnection: javax.net.ssl.HostnameVerifier getHostnameVerifier()>
<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<java.io.File: java.lang.String getName()>
<android.app.Activity: android.content.Intent getIntent()>
<org.json.JSONObject: java.util.Iterator keys()>
<org.json.JSONObject: boolean getBoolean(java.lang.String)>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<java.util.HashMap: java.util.Collection values()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<android.graphics.Bitmap: int getWidth()>
<org.json.JSONArray: java.lang.Object get(int)>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<java.util.TimeZone: java.lang.String getID()>
<java.net.ServerSocket: java.net.Socket accept()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<java.lang.Object: java.lang.Object clone()>
<java.io.File: java.lang.String[] list()>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>
<android.media.AudioManager: int getRouting(int)>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.graphics.Bitmap: int getHeight()>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.lang.Integer: byte byteValue()>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
