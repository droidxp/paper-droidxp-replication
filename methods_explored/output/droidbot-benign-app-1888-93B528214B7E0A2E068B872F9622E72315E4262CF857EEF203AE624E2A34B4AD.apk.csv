<android.content.res.AssetFileDescriptor: long getLength()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<java.io.ByteArrayOutputStream: java.lang.String toString()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.os.Bundle: int getInt(java.lang.String)>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<java.net.URL: java.lang.String getProtocol()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()>
<java.lang.String: java.lang.String trim()>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.Calendar: java.util.Date getTime()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<android.location.Location: long getTime()>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<java.lang.String: java.lang.String toString()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.lang.reflect.Field: int getModifiers()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.content.Intent: java.lang.String getScheme()>
<android.os.Looper: android.os.Looper getMainLooper()>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<android.os.StatFs: int getBlockSize()>
<java.io.FileInputStream: long skip(long)>

<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
<android.app.Activity: android.content.ComponentName getComponentName()>
<java.security.Provider: java.util.Set entrySet()>
<java.io.File: java.io.File[] listFiles()>
<java.util.Calendar: long getTimeInMillis()>
<java.net.HttpURLConnection: int getResponseCode()>
<android.view.View: int getHeight()>
<android.view.KeyEvent: int getRepeatCount()>
<android.hardware.Camera$Parameters: java.util.List getSupportedColorEffects()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<java.util.AbstractList: java.util.Iterator iterator()>
<java.lang.StringBuffer: java.lang.StringBuffer reverse()>
<java.util.HashMap: java.util.Set entrySet()>
<java.security.Provider: java.lang.Object put(java.lang.Object,java.lang.Object)>
<java.lang.System: java.lang.SecurityManager getSecurityManager()>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<java.util.Calendar: int get(int)>
<android.view.KeyEvent: int getKeyCode()>
<android.location.Location: double getLatitude()>
<java.lang.String: char[] toCharArray()>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.view.ViewGroup: int getChildCount()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<java.security.MessageDigest: byte[] digest()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.lang.Class: java.lang.annotation.Annotation getAnnotation(java.lang.Class)>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<java.lang.Class: java.lang.String getName()>
<java.lang.Runtime: java.lang.Runtime getRuntime()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>
<java.util.concurrent.locks.ReentrantLock: java.util.concurrent.locks.Condition newCondition()>
<java.net.URI: java.lang.String toString()>
<android.os.StatFs: int getAvailableBlocks()>
<android.view.View: android.content.res.Resources getResources()>
<android.view.MotionEvent: int getSource()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.widget.TextView: int getInputType()>
<android.location.Location: float getAccuracy()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<java.util.HashSet: java.util.Iterator iterator()>
<java.io.File: java.lang.String getPath()>
<android.view.Display: int getDisplayId()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.view.Display: int getOrientation()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.lang.reflect.Method: int getModifiers()>
<java.lang.StringBuilder: java.lang.String toString()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<java.net.URL: java.lang.String getHost()>
<android.telephony.TelephonyManager: int getNetworkType()>
<java.net.URL: java.lang.String getFile()>
<java.lang.reflect.Method: java.lang.String getName()>
<android.view.View: int getSystemUiVisibility()>
<java.lang.Long: long longValue()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<java.util.Calendar: java.util.Calendar getInstance()>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>
<android.os.Looper: java.lang.Thread getThread()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<java.lang.ref.Reference: java.lang.Object get()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.content.Context: java.lang.String getString(int)>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>
<android.view.View: android.os.Handler getHandler()>
<android.content.Intent: java.lang.String getAction()>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<android.location.Location: double getLongitude()>
<java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.hardware.Sensor: int getType()>
<java.net.URL: java.lang.String toString()>
<android.view.Display: int getWidth()>
<android.app.Activity: android.view.Window getWindow()>
<java.util.zip.ZipEntry: java.lang.String getName()>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<android.location.Location: double getAltitude()>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<java.util.ArrayList: java.lang.Object get(int)>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<android.net.Proxy: java.lang.String getHost(android.content.Context)>
<android.app.Notification$Builder: android.app.Notification getNotification()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.lang.String: byte[] getBytes()>
<java.net.URLConnection: int getContentLength()>
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.content.Intent: java.lang.String getDataString()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.view.Display: int getHeight()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.view.View: int getVisibility()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.widget.EditText: android.text.Editable getText()>
<android.view.MotionEvent: int getAction()>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<android.view.View: int getWidth()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>
<java.lang.Package: java.lang.String getName()>
<android.os.HandlerThread: android.os.Looper getLooper()>
<android.app.Dialog: android.view.Window getWindow()>
<java.io.File: java.lang.String toString()>
<android.app.Notification: android.app.Notification clone()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.content.Intent: android.net.Uri getData()>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.content.ContextWrapper: java.lang.String getPackageCodePath()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<java.util.Locale: java.util.Locale getDefault()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<java.security.MessageDigest: byte[] digest(byte[])>
<android.view.KeyEvent: java.lang.String getCharacters()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<java.util.Date: int getSeconds()>
<java.lang.ClassLoader: java.lang.ClassLoader getParent()>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()>
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<android.os.Message: android.os.Bundle getData()>
<android.net.NetworkInfo: int getSubtype()>
<java.util.Scanner: java.lang.Object next()>
<java.util.LinkedList: java.lang.Object get(int)>
<android.location.LocationProvider: int getAccuracy()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<java.lang.Class: java.lang.String getSimpleName()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<java.lang.Class: java.lang.Package getPackage()>
<android.os.Messenger: android.os.IBinder getBinder()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.net.URI: java.lang.String getHost()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>
<java.net.URLConnection: java.lang.String getContentType()>
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
<java.lang.reflect.Field: java.lang.String getName()>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.view.KeyEvent: int getAction()>
<android.app.Activity: android.content.Intent getIntent()>
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>
<java.lang.Thread: java.lang.String getName()>
<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.graphics.Bitmap: int getWidth()>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<org.json.JSONObject: long getLong(java.lang.String)>
<java.util.Locale: java.lang.String getLanguage()>
<java.io.FileInputStream: java.io.FileDescriptor getFD()>
<android.os.Bundle: java.lang.String getString(java.lang.String)>
<android.view.View: android.content.Context getContext()>
<android.net.NetworkInfo: int getType()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<android.os.Bundle: int getInt(java.lang.String,int)>
<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.location.Location: java.lang.String getProvider()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.content.pm.Signature: byte[] toByteArray()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.util.SparseArray: java.lang.Object get(int)>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.net.wifi.WifiManager: java.util.List getScanResults()>
<java.lang.Object: java.lang.Object clone()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
<java.net.URLConnection: java.util.Map getHeaderFields()>
<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>
<java.lang.reflect.Field: java.lang.Class getType()>
<java.io.File: java.lang.String getAbsolutePath()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
