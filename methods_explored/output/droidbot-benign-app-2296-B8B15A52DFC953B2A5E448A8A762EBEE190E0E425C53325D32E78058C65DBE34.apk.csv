<java.util.TimeZone: int getOffset(long)>
<android.content.res.AssetFileDescriptor: long getLength()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String)>
<android.location.Criteria: int getAccuracy()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<java.lang.Class: java.lang.String getCanonicalName()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<android.view.MotionEvent: float getX(int)>
<java.lang.String: java.lang.String trim()>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.Calendar: java.util.Date getTime()>
<android.location.Location: long getTime()>
<java.util.UUID: java.lang.String toString()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<java.util.Properties: java.lang.String getProperty(java.lang.String)>
<android.os.CountDownTimer: android.os.CountDownTimer start()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<java.util.zip.ZipEntry: long getSize()>
<java.lang.Double: double doubleValue()>
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.lang.String: java.lang.String toString()>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<java.net.URI: java.lang.String toASCIIString()>
<java.io.InputStream: long skip(long)>
<android.net.Uri$Builder: android.net.Uri build()>
<java.util.EnumMap: java.lang.Object get(java.lang.Object)>
<android.view.MotionEvent: float getY(int)>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.util.LinkedList: java.lang.Object peek()>
<java.net.Socket: java.net.InetAddress getInetAddress()>
<android.os.Looper: android.os.Looper getMainLooper()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.io.File: java.lang.String getCanonicalPath()>
<java.security.KeyStore: java.lang.String getDefaultType()>
<javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<java.lang.StackTraceElement: int getLineNumber()>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>

<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.app.Activity: android.content.ComponentName getComponentName()>
<java.lang.reflect.Field: int getInt(java.lang.Object)>
<java.util.Calendar: java.util.TimeZone getTimeZone()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<javax.crypto.Cipher: byte[] doFinal()>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>
<java.net.HttpURLConnection: int getResponseCode()>
<java.util.Locale: java.lang.String getCountry()>
<android.hardware.SensorManager: float[] getOrientation(float[],float[])>
<android.view.KeyEvent: int getRepeatCount()>
<android.view.View$MeasureSpec: int getSize(int)>
<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>
<java.nio.Buffer: java.nio.Buffer flip()>
<java.util.Date: int getYear()>
<java.io.ObjectStreamClass: java.lang.String getName()>
<java.util.HashMap: java.util.Set entrySet()>
<java.util.Stack: java.lang.Object pop()>
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.util.Calendar: int get(int)>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<android.view.KeyEvent: int getKeyCode()>
<java.io.File: java.io.File getCanonicalFile()>
<android.location.Location: double getLatitude()>
<org.json.JSONObject: int getInt(java.lang.String)>
<java.lang.String: char[] toCharArray()>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<java.util.TreeSet: java.util.Iterator iterator()>
<android.view.ViewGroup: int getChildCount()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<android.media.AudioManager: boolean isMusicActive()>
<java.util.Random: long nextLong()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<java.net.Socket: java.io.InputStream getInputStream()>
<java.security.MessageDigest: byte[] digest()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<java.net.NetworkInterface: java.util.Enumeration getInetAddresses()>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<android.graphics.Paint: android.graphics.Paint$FontMetrics getFontMetrics()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>
<java.lang.Class: java.lang.String getName()>
<android.view.MotionEvent: float getY()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<android.view.View: android.content.res.Resources getResources()>
<android.location.LocationManager: java.util.List getAllProviders()>
<android.location.Location: float getAccuracy()>
<java.util.Date: long getTime()>
<android.view.View$MeasureSpec: int getMode(int)>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<android.view.View: android.view.ViewParent getParent()>
<android.app.Dialog: android.content.Context getContext()>
<java.util.HashSet: java.util.Iterator iterator()>
<java.util.Calendar: java.lang.Object clone()>
<java.util.Random: float nextFloat()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<android.view.Display: int getOrientation()>
<android.content.Intent: android.os.Bundle getExtras()>
<java.lang.StringBuilder: java.lang.String toString()>
<java.util.LinkedList: java.lang.Object remove()>
<java.lang.Class: java.lang.Object newInstance()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.view.MotionEvent: int getPointerCount()>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<java.net.URL: java.lang.String getHost()>
<java.net.InetAddress: java.lang.String getHostAddress()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<java.util.Scanner: java.lang.String nextLine()>
<java.lang.Long: long longValue()>
<org.json.JSONTokener: java.lang.Object nextValue()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<java.util.Calendar: java.util.Calendar getInstance()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<java.io.RandomAccessFile: long length()>
<java.lang.ref.Reference: java.lang.Object get()>
<android.content.Context: java.lang.String getString(int)>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<android.content.Intent: java.lang.String getAction()>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<android.location.Location: double getLongitude()>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.hardware.Sensor: int getType()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<android.app.Activity: android.view.Window getWindow()>
<android.view.Display: int getWidth()>
<java.util.zip.ZipEntry: java.lang.String getName()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager$WifiLock createWifiLock(int,java.lang.String)>
<android.view.MotionEvent: long getDownTime()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<java.util.ArrayList: java.lang.Object get(int)>
<android.view.View: int getId()>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<java.util.Scanner: java.util.regex.MatchResult match()>
<java.lang.String: byte[] getBytes()>
<android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<java.lang.Enum: java.lang.String toString()>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.view.MotionEvent: long getEventTime()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<android.view.Display: int getHeight()>
<java.lang.Throwable: java.lang.String getMessage()>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<java.lang.StackTraceElement: java.lang.String getMethodName()>
<android.widget.EditText: android.text.Editable getText()>
<android.view.MotionEvent: int getAction()>
<java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.content.Intent: java.lang.String toString()>
<org.json.JSONObject: double getDouble(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<android.app.Dialog: android.view.Window getWindow()>
<java.io.File: java.lang.String toString()>
<android.app.Notification: android.app.Notification clone()>
<android.location.Location: java.lang.String toString()>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.view.MotionEvent: float getX()>
<org.json.JSONArray: java.lang.String getString(int)>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<java.util.Locale: java.util.Locale getDefault()>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>
<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<java.security.MessageDigest: byte[] digest(byte[])>
<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>
<java.io.File: java.io.File getParentFile()>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>
<java.util.concurrent.atomic.AtomicLong: long get()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<java.util.StringTokenizer: java.lang.String nextToken()>
<android.media.AudioManager: int getRingerMode()>
<java.text.NumberFormat: java.lang.String format(double)>
<java.nio.Buffer: java.nio.Buffer clear()>
<java.security.Signature: java.security.Signature getInstance(java.lang.String)>
<java.util.LinkedList: java.lang.Object get(int)>
<java.lang.Class: java.lang.String getSimpleName()>
<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>
<java.lang.reflect.Field: java.lang.String getName()>
<android.app.Activity: android.content.Intent getIntent()>
<org.json.JSONObject: java.util.Iterator keys()>
<java.util.HashMap: java.util.Set keySet()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.view.MotionEvent: int getPointerId(int)>
<java.nio.Buffer: java.nio.Buffer rewind()>
<java.util.zip.ZipFile: java.lang.String getName()>
<java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>
<android.graphics.Bitmap: int getWidth()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.content.ComponentName: java.lang.String getClassName()>
<org.json.JSONObject: long getLong(java.lang.String)>
<java.util.Locale: java.lang.String getLanguage()>
<java.io.FileInputStream: java.io.FileDescriptor getFD()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.view.View: android.content.Context getContext()>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>
<android.net.NetworkInfo: int getType()>
<javax.crypto.Cipher: byte[] getIV()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<java.lang.Float: float floatValue()>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<android.media.AudioManager: int getMode()>
<android.location.Location: java.lang.String getProvider()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<java.util.zip.CRC32: long getValue()>
<java.util.TimeZone: java.lang.String getID()>
<java.net.URLConnection: java.lang.String getHeaderField(java.lang.String)>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<java.util.Formatter: java.lang.String toString()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.webkit.WebView: java.lang.String getUrl()>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<java.util.zip.ZipFile: java.util.Enumeration entries()>
<java.lang.Object: java.lang.Object clone()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.util.SparseArray: java.lang.Object get(int)>
<java.io.File: java.lang.String[] list()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.graphics.Bitmap: int getHeight()>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<java.lang.Short: short shortValue()>
<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>
<java.lang.Byte: byte byteValue()>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.lang.reflect.Field: java.lang.Class getType()>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
