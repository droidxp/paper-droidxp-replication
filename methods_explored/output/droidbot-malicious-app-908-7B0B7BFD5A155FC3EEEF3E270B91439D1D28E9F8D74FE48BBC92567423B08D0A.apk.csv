<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<java.lang.String: java.lang.String trim()>
<android.animation.Animator: android.animation.Animator clone()>
<java.util.Calendar: java.util.Date getTime()>
<org.apache.commons.codec.binary.Base64: byte[] decode(byte[])>
<java.util.concurrent.ConcurrentHashMap: java.util.Set keySet()>
<android.widget.TextView: java.lang.CharSequence getText()>
<java.lang.Double: double doubleValue()>
<java.io.InputStream: long skip(long)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.HttpRequestExecutor getRequestExecutor()>
<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[])>

<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>
<java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>
<org.apache.http.conn.ssl.SSLSocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>
<android.view.View: int getMeasuredHeight()>
<javax.net.SocketFactory: java.net.Socket createSocket()>
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>
<android.app.Activity: java.lang.CharSequence getTitle()>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.Header getFirstHeader(java.lang.String)>
<java.util.TreeSet: java.util.Iterator iterator()>
<org.apache.http.params.BasicHttpParams: java.lang.Object getParameter(java.lang.String)>
<java.util.LinkedList: java.lang.Object getLast()>
<java.security.MessageDigest: byte[] digest()>
<java.net.InetSocketAddress: int getPort()>
<java.util.AbstractCollection: java.lang.String toString()>
<java.lang.ThreadLocal: java.lang.Object get()>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>
<android.content.BroadcastReceiver: int getResultCode()>
<java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>
<org.apache.http.protocol.BasicHttpProcessor: int getResponseInterceptorCount()>
<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>
<java.net.URI: java.lang.String getAuthority()>
<org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)>
<org.apache.http.protocol.BasicHttpContext: java.lang.Object getAttribute(java.lang.String)>
<android.app.Activity: android.content.SharedPreferences getPreferences(int)>
<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>
<java.lang.Class: java.lang.Object newInstance()>
<java.net.Socket: java.io.OutputStream getOutputStream()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<org.apache.http.ProtocolVersion: java.lang.String getProtocol()>
<android.view.View: int getTop()>
<org.apache.http.client.methods.HttpRequestBase: java.net.URI getURI()>
<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)>
<android.content.Context: java.lang.String getString(int)>
<android.preference.EditTextPreference: java.lang.String getText()>
<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.Header getVersionHeader()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>
<org.apache.http.message.HeaderGroup: org.apache.http.HeaderIterator iterator()>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>
<java.lang.String: byte[] getBytes()>
<java.net.Proxy: java.net.SocketAddress address()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.widget.EditText: android.text.Editable getText()>
<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<android.location.Address: java.lang.String getSubAdminArea()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>
<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>
<org.apache.http.client.methods.HttpRequestBase: org.apache.http.ProtocolVersion getProtocolVersion()>
<android.content.Context: java.lang.CharSequence getText(int)>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map getParameters()>
<org.apache.http.ProtocolVersion: int getMinor()>
<java.net.Socket: int getSoTimeout()>
<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>
<android.location.Address: java.lang.String getFeatureName()>
<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler()>
<org.apache.http.auth.AuthScope: java.lang.String getRealm()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<java.net.URI: java.lang.String getFragment()>
<java.net.Socket: int getPort()>
<java.lang.Class: java.lang.String getSimpleName()>
<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.view.View: int getPaddingTop()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>
<java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>
<org.apache.http.params.BasicHttpParams: java.lang.Object clone()>
<java.io.File: java.lang.String getName()>
<android.view.View: android.content.Context getContext()>
<org.apache.http.util.CharArrayBuffer: char[] buffer()>
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getAllHeaders()>
<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>
<org.apache.http.impl.entity.EntityDeserializer: org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage)>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.WaitingThread nextThread()>
<java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<org.apache.http.message.BasicTokenIterator: java.lang.String nextToken()>
<org.apache.http.impl.cookie.CookieSpecBase: java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin)>
<org.apache.http.impl.SocketHttpClientConnection: int getRemotePort()>
<android.widget.TabHost: int getCurrentTab()>
<android.widget.AdapterView: int getCount()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>
<org.apache.http.conn.scheme.Scheme: java.lang.String getName()>
<android.preference.ListPreference: java.lang.String getValue()>
<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.net.URI: java.lang.String toASCIIString()>
<java.security.KeyStore: java.lang.String getDefaultType()>
<java.nio.CharBuffer: java.lang.String toString()>
<android.content.res.TypedArray: int getResourceId(int,int)>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponseFactory createHttpResponseFactory()>
<org.apache.http.impl.client.AbstractHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
<org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>
<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>
<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()>
<org.apache.http.auth.AuthScope: int getPort()>
<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket createSocket()>
<org.apache.http.protocol.BasicHttpProcessor: int getRequestInterceptorCount()>
<android.location.Address: java.lang.String getLocality()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CookieStore getCookieStore()>
<org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>
<org.apache.http.client.params.HttpClientParams: java.lang.String getCookiePolicy(org.apache.http.params.HttpParams)>
<java.nio.charset.Charset: java.lang.String name()>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>
<org.json.JSONObject: int getInt(java.lang.String)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<org.apache.http.conn.routing.RouteTracker: int getHopCount()>
<java.net.Socket: java.net.InetAddress getLocalAddress()>
<java.net.InetSocketAddress: java.net.InetAddress getAddress()>
<java.net.Socket: int getLocalPort()>
<java.net.URI: java.lang.String toString()>
<java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>
<org.apache.http.auth.AuthScope: java.lang.String getHost()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner()>
<android.location.Location: float getAccuracy()>
<javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>
<java.io.File: java.lang.String getPath()>
<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)>
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)>
<android.content.Intent: android.os.Bundle getExtras()>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)>
<org.apache.http.message.BasicHttpResponse: java.lang.String getReason(int)>
<java.net.InetAddress: java.lang.String getHostAddress()>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.ClientConnectionManager getManager()>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()>
<java.lang.StringBuffer: java.lang.String toString()>
<android.location.Location: double getLongitude()>
<org.apache.http.util.ByteArrayBuffer: byte[] buffer()>
<org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>
<org.apache.http.HttpHost: java.lang.String toString()>
<java.util.ArrayList: java.lang.Object get(int)>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.String)>
<android.location.Address: java.lang.String getThoroughfare()>
<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>
<android.view.Display: int getHeight()>
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<java.lang.Throwable: java.lang.String getMessage()>
<android.view.MotionEvent: int getAction()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.content.Intent: android.net.Uri getData()>
<org.apache.http.entity.BasicHttpEntity: java.io.InputStream getContent()>
<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>
<java.util.Locale: java.util.Locale getDefault()>
<java.util.Vector: java.lang.Object get(int)>
<org.apache.http.cookie.CookieOrigin: int getPort()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getOverrideParams()>
<org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
<java.util.StringTokenizer: java.lang.String nextToken()>
<org.apache.http.message.HeaderGroup: org.apache.http.Header getFirstHeader(java.lang.String)>
<android.view.MotionEvent: int getHistorySize()>
<org.apache.http.client.methods.HttpRequestBase: java.lang.Object clone()>
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>
<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>
<java.util.AbstractMap: java.lang.String toString()>
<java.net.URI: java.lang.String getHost()>
<android.telephony.SmsManager: android.telephony.SmsManager getDefault()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.view.View: int getBottom()>
<java.nio.charset.Charset: java.nio.ByteBuffer encode(java.lang.String)>
<org.apache.http.HttpHost: java.lang.String getSchemeName()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>
<java.lang.Object: java.lang.Object clone()>
<java.io.File: java.lang.String[] list()>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntitySerializer createEntitySerializer()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.UserTokenHandler getUserTokenHandler()>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()>
<java.lang.Class: java.lang.String getCanonicalName()>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>
<java.net.Socket: int getSendBufferSize()>
<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry()>
<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme get(java.lang.String)>
<android.location.Location: long getTime()>
<javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>
<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>
<org.apache.http.impl.conn.AbstractPoolEntry: java.lang.Object getState()>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<org.apache.http.conn.ssl.AbstractVerifier: java.lang.String[] getCNs(java.security.cert.X509Certificate)>
<android.view.View: int getPaddingRight()>
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>
<java.util.Stack: java.lang.Object pop()>
<java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<java.util.Random: long nextLong()>
<java.net.Socket: java.io.InputStream getInputStream()>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>
<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Collection getAttribHandlers()>
<java.net.URI: java.lang.String getScheme()>
<java.lang.Class: java.lang.String getName()>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer()>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.view.MotionEvent: float getY()>
<org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.net.URI)>
<java.util.Date: long getTime()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getRequestParams()>
<org.json.JSONObject: java.lang.String getString(java.lang.String)>
<java.net.URI: java.lang.String getPath()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)>
<java.io.Reader: int read(char[])>
<android.view.MotionEvent: float getHistoricalY(int)>
<android.os.Environment: java.lang.String getExternalStorageState()>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpRequestInterceptor getRequestInterceptor(int)>
<org.apache.http.entity.HttpEntityWrapper: java.io.InputStream getContent()>
<java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.protocol.BasicHttpProcessor getHttpProcessor()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>
<java.net.Socket: int getReceiveBufferSize()>
<android.app.Activity: android.view.Window getWindow()>
<java.net.InetSocketAddress: java.lang.String getHostName()>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>
<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<org.apache.http.message.BasicLineParser: org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)>
<org.apache.http.impl.conn.AbstractClientConnAdapter: org.apache.http.conn.OperatedClientConnection getWrappedConnection()>
<java.util.TimeZone: java.util.TimeZone getDefault()>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>
<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>
<android.view.MotionEvent: float getHistoricalX(int)>
<java.security.MessageDigest: byte[] digest(byte[])>
<org.apache.http.impl.conn.SingleClientConnManager: org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry)>
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>
<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>
<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement nextElement()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy()>
<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>
<android.location.LocationProvider: java.lang.String getName()>
<java.security.KeyStore: java.lang.String getCertificateAlias(java.security.cert.Certificate)>
<org.apache.http.impl.conn.ProxySelectorRoutePlanner: java.lang.String getHost(java.net.InetSocketAddress)>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[])>
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>
<android.app.Activity: android.content.Intent getIntent()>
<org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)>
<android.graphics.Bitmap: int getWidth()>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>
<java.net.URI: java.lang.String getQuery()>
<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost getTargetHost()>
<org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>
<java.net.InetAddress: java.lang.String getHostName()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>
<java.net.URI: java.lang.String getRawFragment()>
<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>
<java.util.concurrent.TimeUnit: long toMillis(long)>
<org.apache.http.impl.client.RequestWrapper: int getExecCount()>
<java.net.URISyntaxException: java.lang.String getMessage()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()>
<android.app.AlertDialog: android.widget.ListView getListView()>
<org.apache.http.impl.AbstractHttpClientConnection: org.apache.http.HttpResponse receiveResponseHeader()>
<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>
<org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.net.Socket: java.net.InetAddress getInetAddress()>
<java.lang.Throwable: java.lang.Throwable getCause()>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>
<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
<android.widget.TabHost: android.view.View getCurrentTabView()>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>
<android.preference.EditTextPreference: android.widget.EditText getEditText()>
<android.location.Address: java.lang.String getCountryName()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
<java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>
<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>
<java.util.HashMap: java.util.Set entrySet()>
<java.util.Calendar: int get(int)>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>
<java.net.URI: int getPort()>
<org.apache.http.message.AbstractHttpMessage: org.apache.http.params.HttpParams getParams()>
<android.location.Location: double getLatitude()>
<org.apache.http.HttpHost: java.lang.String toURI()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<java.lang.String: char[] toCharArray()>
<android.view.ViewGroup: int getChildCount()>
<org.apache.http.message.ParserCursor: int getUpperBound()>
<java.net.ProxySelector: java.net.ProxySelector getDefault()>
<org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>
<org.apache.http.HttpHost: java.lang.String getHostName()>
<android.content.res.Resources: int getColor(int)>
<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
<java.net.URI: java.lang.String getRawPath()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.view.View: android.view.ViewParent getParent()>
<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>
<java.lang.StringBuilder: java.lang.String toString()>
<java.util.LinkedList: java.lang.Object remove()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy()>
<java.net.Proxy: java.net.Proxy$Type type()>
<java.net.URI: java.lang.String getRawQuery()>
<org.apache.http.ProtocolVersion: int getMajor()>
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
<java.lang.Long: long longValue()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<org.apache.http.protocol.BasicHttpProcessor: org.apache.http.HttpResponseInterceptor getResponseInterceptor(int)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<android.view.View: java.lang.Object getTag()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter)>
<android.content.Intent: java.lang.String getAction()>
<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>
<org.apache.http.util.VersionInfo: java.lang.String getRelease()>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>
<android.view.Display: int getWidth()>
<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>
<javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>
<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)>
<org.apache.http.params.HttpProtocolParams: java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>
<android.view.View: int getId()>
<android.widget.AdapterView: int getFirstVisiblePosition()>
<android.preference.Preference: int getPersistedInt(int)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>
<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>
<android.view.View: int getPaddingBottom()>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getClientParams()>
<org.apache.http.message.HeaderGroup: org.apache.http.Header getLastHeader(java.lang.String)>
<android.view.View: int getWidth()>
<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>
<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>
<java.io.File: java.lang.String toString()>
<org.apache.http.message.ParserCursor: int getPos()>
<android.app.Notification: android.app.Notification clone()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()>
<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>
<org.json.JSONArray: java.lang.String getString(int)>
<android.view.MotionEvent: float getX()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler()>
<org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>
<android.view.View: int getPaddingLeft()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.params.HttpParams getParams()>
<org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>
<org.apache.http.impl.client.ClientParamsStack: org.apache.http.params.HttpParams getApplicationParams()>
<org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<org.apache.http.auth.AuthScope: java.lang.String getScheme()>
<org.apache.http.impl.client.AbstractHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<org.apache.http.conn.routing.HttpRoute: int getHopCount()>
<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.util.SparseArray: android.util.SparseArray clone()>
<org.apache.http.HttpHost: int getPort()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<java.util.LinkedList: java.lang.Object removeLast()>
<android.graphics.Bitmap: int getHeight()>
<org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>
<org.apache.http.HttpHost: java.lang.String toHostString()>
<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>
<java.io.File: java.lang.String getAbsolutePath()>
<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>
<org.apache.http.impl.cookie.BasicClientCookie: java.lang.Object clone()>
<java.util.AbstractSequentialList: java.util.Iterator iterator()>
