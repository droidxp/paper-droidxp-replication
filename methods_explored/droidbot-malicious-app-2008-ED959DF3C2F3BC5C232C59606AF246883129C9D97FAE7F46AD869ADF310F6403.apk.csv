<android.view.MotionEvent: int getAction()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>
<android.view.View: int getTop()>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<java.lang.Class: java.lang.String getSimpleName()>
<android.view.View: int getPaddingLeft()>
<java.lang.String: byte[] getBytes()>
<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.view.Display: int getWidth()>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<java.lang.StackTraceElement: java.lang.String getClassName()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.media.AudioManager: int getStreamVolume(int)>
<android.view.View: int getMeasuredHeight()>
<java.lang.StringBuilder: java.lang.String toString()>
<java.util.Calendar: long getTimeInMillis()>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<java.security.MessageDigest: java.lang.String getAlgorithm()>
<java.lang.Object: java.lang.Object clone()>
<java.util.zip.ZipFile: java.util.zip.ZipEntry getEntry(java.lang.String)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.lang.String: java.lang.String trim()>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.media.AudioManager: int getStreamMaxVolume(int)>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.content.ComponentName: android.content.ComponentName clone()>
<java.util.Date: long getTime()>
<android.view.View$MeasureSpec: int getSize(int)>
<android.app.Activity: android.content.Intent getIntent()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.view.View$MeasureSpec: int getMode(int)>
<android.media.AudioManager: int getVibrateSetting(int)>
<android.content.Intent: android.os.Bundle getExtras()>
<java.security.MessageDigest: byte[] digest()>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>
<android.view.View: int getMeasuredWidth()>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>
<java.util.AbstractList: java.util.Iterator iterator()>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.widget.EditText: android.text.Editable getText()>

<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.view.View: int getPaddingTop()>
<android.view.View: int getWidth()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.view.View: int getHeight()>
<java.lang.String: char[] toCharArray()>
<java.util.Calendar: int get(int)>
<android.view.Display: int getHeight()>
<android.widget.TextView: android.text.Editable getEditableText()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.view.MotionEvent: float getY()>
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.widget.Toast: android.view.View getView()>
<android.view.MotionEvent: float getX()>
<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>
<java.lang.Long: long longValue()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<java.io.ByteArrayOutputStream: java.lang.String toString()>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.content.res.Resources: java.lang.String getString(int)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<java.text.DateFormat: java.util.Date parse(java.lang.String)>
<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>
<android.media.AudioManager: int getRingerMode()>
<android.view.View: int getLeft()>
<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>
<java.util.ArrayList: java.lang.Object get(int)>
<android.content.Intent: java.lang.String getAction()>
<android.appwidget.AppWidgetProviderInfo: android.appwidget.AppWidgetProviderInfo clone()>
<android.animation.Animator: android.animation.Animator clone()>
<java.io.File: java.lang.String getName()>
