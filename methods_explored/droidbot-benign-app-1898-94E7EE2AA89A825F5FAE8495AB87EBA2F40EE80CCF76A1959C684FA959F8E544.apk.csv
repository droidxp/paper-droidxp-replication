<java.lang.Class: java.lang.Object[] getEnumConstants()>
<android.view.MotionEvent: int getAction()>
<android.view.KeyEvent: int getAction()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<java.lang.Class: java.lang.String getName()>
<android.view.MotionEvent: float getY(int)>
<android.os.Bundle: int getInt(java.lang.String,int)>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.os.Debug$MemoryInfo: int getTotalPrivateDirty()>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<android.os.Looper: android.os.Looper getMainLooper()>
<android.app.Dialog: android.view.Window getWindow()>
<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>
<java.net.URLConnection: int getContentLength()>
<java.lang.reflect.Method: int getModifiers()>
<java.lang.Class: java.lang.ClassLoader getClassLoader()>
<android.view.View: int getPaddingRight()>
<android.view.View: int getPaddingLeft()>
<java.lang.String: byte[] getBytes()>
<java.lang.reflect.Method: java.lang.Class getReturnType()>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.view.Display: int getWidth()>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<java.util.Locale: java.lang.String getDisplayName(java.util.Locale)>
<java.lang.Throwable: java.lang.String getLocalizedMessage()>
<android.location.Location: double getAltitude()>
<java.util.LinkedList: java.lang.Object get(int)>
<java.util.Locale: java.lang.String getDisplayCountry(java.util.Locale)>
<android.os.Looper: java.lang.Thread getThread()>
<java.util.HashMap: java.lang.Object get(java.lang.Object)>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.widget.TextView: android.text.TextPaint getPaint()>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<java.util.Calendar: java.util.Calendar getInstance()>
<android.media.AudioManager: int getStreamVolume(int)>
<java.util.HashMap: java.util.Collection values()>
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>
<android.view.View: int getMeasuredHeight()>
<java.lang.StringBuilder: java.lang.String toString()>
<java.util.ArrayList: java.util.Iterator iterator()>
<android.widget.TextView: java.lang.CharSequence getText()>
<java.text.DateFormat: java.lang.String format(java.util.Date)>
<java.security.MessageDigest: byte[] digest(byte[])>
<java.util.Calendar: long getTimeInMillis()>
<android.location.Location: double getLongitude()>
<java.lang.Class: java.lang.String getCanonicalName()>
<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<java.lang.Object: java.lang.Object clone()>
<android.location.LocationProvider: int getAccuracy()>
<java.net.URL: java.lang.String getProtocol()>
<android.graphics.Bitmap: int getWidth()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>
<android.view.View: int getSystemUiVisibility()>
<java.lang.String: java.lang.String trim()>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<java.net.URL: java.lang.String getFile()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap$Config)>
<android.view.MotionEvent: float getRawY()>
<android.hardware.Camera$Parameters: java.util.List getSupportedFlashModes()>
<java.net.HttpURLConnection: int getResponseCode()>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<android.view.View: android.view.ViewParent getParent()>
<java.util.Vector: java.lang.Object firstElement()>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.webkit.ConsoleMessage: java.lang.String sourceId()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.media.AudioManager: int getStreamMaxVolume(int)>
<android.widget.TextView: float getTextSize()>
<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>
<java.util.Locale: java.lang.String getDisplayLanguage(java.util.Locale)>
<java.util.Locale: java.lang.String getDisplayLanguage()>
<java.util.HashSet: java.util.Iterator iterator()>
<java.lang.reflect.Method: java.lang.String getName()>
<android.content.res.AssetFileDescriptor: long getLength()>
<android.os.AsyncTask: android.os.AsyncTask$Status getStatus()>
<java.security.Provider: java.util.Set entrySet()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFpsRange()>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.hardware.Camera$Parameters: java.lang.String getFocusMode()>
<android.app.Activity: android.content.Intent getIntent()>
<android.hardware.Camera$Parameters: java.util.List getSupportedFocusModes()>
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>
<android.view.Display: int getOrientation()>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.view.View: android.os.Handler getHandler()>
<android.widget.TextView: int getCompoundPaddingBottom()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<android.content.Intent: android.os.Bundle getExtras()>
<android.location.Location: float getAccuracy()>
<java.security.MessageDigest: byte[] digest()>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<android.view.View: android.content.Context getContext()>
<android.location.Location: java.lang.String getProvider()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewSizes()>
<android.view.View: int getMeasuredWidth()>
<android.graphics.Bitmap: int getHeight()>
<java.util.UUID: java.lang.String toString()>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<java.net.URL: java.lang.String getHost()>
<android.view.View: int getVisibility()>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.text.Layout: int getLineEnd(int)>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<android.os.Bundle: int getInt(java.lang.String)>
<android.widget.EditText: android.text.Editable getText()>

<java.lang.reflect.Field: java.lang.String getName()>
<android.view.MotionEvent: float getX(int)>
<android.text.Layout: int getHeight()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<android.view.View: java.lang.Object getTag()>
<android.webkit.ConsoleMessage: java.lang.String message()>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<java.util.Date: java.lang.String toString()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence,int,int)>
<android.view.View: android.content.res.Resources getResources()>
<java.util.Locale: java.util.Locale getDefault()>
<java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>
<java.io.InputStream: long skip(long)>
<android.view.View: int getPaddingTop()>
<android.location.Location: long getTime()>
<android.util.SparseIntArray: int get(int,int)>
<android.text.StaticLayout: int getLineCount()>
<java.util.Locale: java.lang.String getLanguage()>
<android.text.StaticLayout: int getLineStart(int)>
<android.view.View: int getWidth()>
<android.hardware.Camera$Parameters: java.util.List getSupportedColorEffects()>
<android.util.SparseIntArray: android.util.SparseIntArray clone()>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.view.KeyEvent: int getKeyCode()>
<android.widget.TextView: int getCompoundPaddingRight()>
<android.app.AlertDialog$Builder: android.app.AlertDialog show()>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<java.net.URLConnection: java.lang.String getContentType()>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<java.io.FileInputStream: java.io.FileDescriptor getFD()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>
<java.io.File: java.io.File[] listFiles()>
<android.view.View: int getPaddingBottom()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.view.Display: int getDisplayId()>
<android.view.View: int getHeight()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.lang.String: char[] toCharArray()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<java.lang.Thread: java.lang.String getName()>
<android.content.res.Configuration: java.lang.String toString()>
<android.view.Display: int getHeight()>
<java.lang.reflect.Field: int getModifiers()>
<android.view.ViewGroup: int getChildCount()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<java.util.Calendar: int get(int)>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.widget.TextView: android.text.Editable getEditableText()>
<android.util.DisplayMetrics: java.lang.String toString()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPreviewFormats()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<java.io.File: java.lang.String toString()>
<java.lang.StackTraceElement: java.lang.String toString()>
<android.view.MotionEvent: float getY()>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.view.KeyEvent: int getRepeatCount()>
<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>
<android.widget.TextView: int getInputType()>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.app.Activity: android.content.ComponentName getComponentName()>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<java.lang.String: java.lang.String toString()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<java.util.Calendar: java.util.Date getTime()>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<java.io.File: java.lang.String getAbsolutePath()>
<android.net.NetworkInfo: int getType()>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>
<android.view.MotionEvent: float getX()>
<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.content.ContextWrapper: java.lang.String getPackageCodePath()>
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
<java.util.HashMap: java.util.Set entrySet()>
<java.lang.reflect.Field: java.lang.Class getType()>
<java.io.FileInputStream: long skip(long)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<java.lang.Long: long longValue()>
<android.view.MotionEvent: float getRawX()>
<android.app.AlertDialog$Builder: android.app.AlertDialog create()>
<android.hardware.Sensor: java.lang.String getVendor()>
<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>
<android.view.MotionEvent: int getActionMasked()>
<android.content.res.Resources: java.lang.String getString(int)>
<javax.crypto.Cipher: byte[] doFinal(byte[])>
<android.view.KeyEvent: java.lang.String getCharacters()>
<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.widget.TextView: int getLineCount()>
<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>
<android.app.Activity: android.view.Window getWindow()>
<android.content.Intent: java.lang.String getScheme()>
<android.location.Location: double getLatitude()>
<android.text.StaticLayout: int getLineForVertical(int)>
<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<java.net.URLConnection: java.lang.String guessContentTypeFromName(java.lang.String)>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.view.MotionEvent: int getPointerCount()>
<java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>
<java.net.URLConnection: java.util.Map getHeaderFields()>
<android.view.MotionEvent: int getSource()>
<android.os.Debug$MemoryInfo: int getTotalPss()>
<android.os.Debug$MemoryInfo: int getTotalSharedDirty()>
<java.io.File: java.lang.String getPath()>
<java.util.Date: int getSeconds()>
<android.text.Layout: float getLineWidth(int)>
<java.lang.Throwable: java.lang.String getMessage()>
<android.util.SparseArray: java.lang.Object get(int)>
<android.content.Intent: android.net.Uri getData()>
<java.net.URL: java.lang.String toString()>
<android.hardware.Camera$Parameters: java.lang.String flatten()>
<java.util.Vector: java.util.Enumeration elements()>
<android.hardware.Camera$Parameters: java.util.List getSupportedPictureSizes()>
<java.util.HashMap: java.util.Set keySet()>
<java.util.Scanner: java.lang.Object next()>
<android.content.Intent: java.lang.String getDataString()>
<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>
<java.util.Stack: java.lang.Object pop()>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<android.widget.TextView: int getCompoundPaddingLeft()>
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>
<android.app.ActivityManager: int getMemoryClass()>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.hardware.Camera$Parameters: int getPreviewFormat()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>
<android.hardware.Sensor: java.lang.String getName()>
<android.view.Display: int getRotation()>
<java.util.ArrayList: java.lang.Object get(int)>
<java.lang.String: byte[] getBytes(java.lang.String)>
<android.content.Intent: java.lang.String getAction()>
<android.hardware.Sensor: int getType()>
<android.hardware.Camera$Parameters: java.util.List getSupportedSceneModes()>
<android.hardware.SensorManager: void getRotationMatrixFromVector(float[],float[])>
<java.lang.StringBuffer: java.lang.String toString()>
<java.util.Locale: java.lang.String getCountry()>
<android.animation.Animator: android.animation.Animator clone()>
<android.hardware.Camera: android.hardware.Camera$Parameters getParameters()>
<java.io.File: java.lang.String getName()>
<android.widget.TextView: int getCompoundPaddingTop()>
