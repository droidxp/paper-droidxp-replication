{
    "conclusion": {
        "identical": "5697",
        "similar": "4",
        "new": "1",
        "deleted": "10",
        "simiScore": "0.9991231146965976"
    },
    "verbose": {
        "identical": [
            "<com.turntable.gk.GameDubo: boolean getStart()>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.io.File)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$BoolKD: java.lang.Boolean _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.impl.StringCollectionSerializer: void <init>(org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.xc.DomElementJsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.TextBuffer: int getTextOffset()>",
            "<org.codehaus.jackson.map.ser.ToStringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void _parseSlowFloatValue(int)>",
            "<org.codehaus.jackson.io.IOContext: void releaseNameCopyBuffer(char[])>",
            "<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$Body: void setCreditBalance(java.lang.String)>",
            "<org.codehaus.jackson.JsonParser: long getValueAsLong(long)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<com.turntable.gk.common.util.payTools.Base64: java.lang.String encode(byte[])>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: void completeAndClearBuffer(java.lang.Object[],int,java.util.List)>",
            "<org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.jaxrs.Annotations[])>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.reflect.Type getGenericType()>",
            "<org.codehaus.jackson.annotate.JsonTypeInfo$As: void <clinit>()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: int c(java.lang.String)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: void write(java.lang.String)>",
            "<org.codehaus.jackson.io.UTF32Reader: void reportInvalid(int,int,java.lang.String)>",
            "<com.turntable.gk.common.json.dao.request.ThanSizeRq: java.lang.String getUid()>",
            "<org.codehaus.jackson.impl.JsonReadContext: java.lang.String toString()>",
            "<com.turntable.gk.common.util.payTools.Base64: boolean isPad(char)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: void write(char[],int,int)>",
            "<org.codehaus.jackson.util.InternCache: void <init>()>",
            "<org.codehaus.jackson.node.MissingNode: long getValueAsLong(long)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer: void <init>()>",
            "<org.codehaus.jackson.node.BooleanNode: boolean getBooleanValue()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeFieldName(java.lang.String)>",
            "<com.weibopay.impl.SdkMinRes$Head: void <init>()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeUTF8Segment(byte[],int,int)>",
            "<org.codehaus.jackson.map.util.EnumValues: java.lang.String valueFor(java.lang.Enum)>",
            "<org.codehaus.jackson.map.type.ArrayType: boolean isArrayType()>",
            "<org.codehaus.jackson.JsonNode: boolean isArray()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.ObjectNode objectNode()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers: void <clinit>()>",
            "<com.turntable.gk.GameDubo: boolean isshadow()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.JsonToken nextToken()>",
            "<com.turntable.gk.net.SNetworkTask: void setCancel(boolean)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _skipLF()>",
            "<com.turntable.gk.bean.AppsRes: com.turntable.gk.bean.AppsRes$Body getBody()>",
            "<org.codehaus.jackson.map.deser.BaseNodeDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver: org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.String toString()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethodMap: boolean isEmpty()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$TokenBufferSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$AnnotatedProperty: void <init>(java.beans.PropertyDescriptor)>",
            "<org.codehaus.jackson.map.DeserializationConfig: void setAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer: java.lang.Class deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonStreamContext getOutputContext()>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeNull()>",
            "<com.turntable.gk.UpdateAPK: java.lang.String access$4(com.turntable.gk.UpdateAPK)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.node.ContainerNode removeAll()>",
            "<com.weibopay.impl.RequestInfo: java.lang.String getName()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.smile.SmileParser: boolean handleSignature(boolean,boolean)>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: void <init>(org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassStatusType: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.sym.Name: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer: void <init>()>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void <init>()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: int size()>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: void <init>()>",
            "<com.turntable.gk.AlertDialogView: void <init>(android.content.Context,android.app.AlertDialog,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializationConfig: java.lang.Class findMixInClassFor(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Object[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.BigIntegerNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.SerializerFactory$Config: void <init>()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder: java.lang.Object _constructArray(int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer: void <init>(java.lang.Class,java.lang.Double)>",
            "<org.codehaus.jackson.io.MergedStream: boolean markSupported()>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: void setNewestVersion(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDeserializerProvider(org.codehaus.jackson.map.DeserializerProvider)>",
            "<org.codehaus.jackson.smile.SmileParser: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: char _decodeEscaped()>",
            "<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonNode currentNode()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeFieldName(org.codehaus.jackson.SerializableString)>",
            "<com.weibopay.impl.PreparePay: boolean checkInst()>",
            "<org.codehaus.jackson.util.JsonParserSequence: org.codehaus.jackson.util.JsonParserSequence createFlattened(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor getAnnotated()>",
            "<org.codehaus.jackson.map.SerializationConfig: void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap: org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeFieldName(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.EnumDeserializer: void <init>(org.codehaus.jackson.map.deser.EnumResolver)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedWithParams: void addIfNotPresent(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription: org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription moreSpecificType(org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription,org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()>",
            "<com.turntable.gk.UpdateAPK: long access$2(com.turntable.gk.UpdateAPK)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer: void <init>()>",
            "<org.codehaus.jackson.xc.XmlAdapterJsonSerializer: java.lang.Class findValueClass()>",
            "<org.codehaus.jackson.schema.JsonSchema: org.codehaus.jackson.node.ObjectNode getSchemaNode()>",
            "<org.codehaus.jackson.Base64Variant: int decodeBase64Char(char)>",
            "<org.codehaus.jackson.impl.StreamBasedParserBase: void _closeInput()>",
            "<com.turntable.gk.GameDubo: void shadow3(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.type.TypeBindings: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator: boolean hasNext()>",
            "<com.weibopay.http.SNetworkProxy: void getRequest(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$InetAddressDeserializer: java.net.InetAddress _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedWithParams: org.codehaus.jackson.map.introspect.AnnotationMap getParameterAnnotations(int)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonLocation getTokenLocation()>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void copyCurrentEvent(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.FilterProvider)>",
            "<org.codehaus.jackson.smile.Tool: void main(java.lang.String[])>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker$Std defaultInstance()>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getName()>",
            "<com.turntable.gk.date.LoginRes$CardList: void setCardChannel(java.lang.String)>",
            "<org.codehaus.jackson.impl.JsonParserBase: boolean hasTextCharacters()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,org.codehaus.jackson.annotate.JsonTypeInfo$As)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonToken nextToken()>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: void <init>()>",
            "<org.codehaus.jackson.node.ArrayNode: void add(byte[])>",
            "<com.turntable.gk.GameDubo: void rotaryTable(android.graphics.Canvas)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: java.lang.String getText()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setBankId(java.lang.String)>",
            "<com.games.b: void <init>(android.content.Context)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeRaw(char[],int,int)>",
            "<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void <init>(org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>",
            "<org.codehaus.jackson.map.ObjectMapper$1: void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<com.turntable.gk.common.json.dao.response.Gun: int getGlod()>",
            "<org.codehaus.jackson.map.type.ArrayType: java.lang.String buildCanonicalName()>",
            "<org.codehaus.jackson.jaxrs.Annotations: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: void <init>()>",
            "<org.codehaus.jackson.map.deser.Creator$PropertyBased: org.codehaus.jackson.map.deser.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.TestGame: void access$12(com.turntable.gk.TestGame,java.lang.String)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPlatformUrl(java.lang.String)>",
            "<org.codehaus.jackson.JsonGenerator: void writeNumberField(java.lang.String,float)>",
            "<com.turntable.gk.TestGame: void access$26(com.turntable.gk.TestGame,boolean)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$IntArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.node.LongNode: boolean getValueAsBoolean(boolean)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: javax.xml.bind.'annotation'.adapters.XmlAdapter findAdapterForClass(org.codehaus.jackson.map.introspect.AnnotatedClass,boolean)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitJumpInsn(int,org.codehaus.jackson.org.objectweb.asm.Label)>",
            "<org.codehaus.jackson.smile.SmileGenerator: int _convertSurrogate(int,int)>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: void clean()>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: java.lang.String getInternalClassName(java.lang.String)>",
            "<com.turntable.gk.TestGame: void requestThanSize(java.lang.String)>",
            "<com.turntable.gk.TestGame$AlertDialogview$1: void <init>(com.turntable.gk.TestGame$AlertDialogview,android.app.AlertDialog)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name _parseApostropheFieldName()>",
            "<org.codehaus.jackson.node.NullNode: int getValueAsInt(int)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethodMap: org.codehaus.jackson.map.introspect.AnnotatedMethod remove(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.Version: int getMinorVersion()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType getKeyType()>",
            "<com.turntable.gk.UpdateAPK$1: void handleMessage(android.os.Message)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.JsonSerializer constructBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.xc.DataHandlerJsonDeserializer$1: java.io.OutputStream getOutputStream()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void setKeySerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readMapAndClose(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: boolean isManagedReference()>",
            "<org.codehaus.jackson.map.ser.PropertyBuilder: org.codehaus.jackson.map.ser.BeanPropertyWriter buildWriter(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.introspect.AnnotatedMember,boolean)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer: org.joda.time.LocalDate deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator: void <clinit>()>",
            "<org.codehaus.jackson.map.type.ArrayType: boolean isConcrete()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.ser.PropertyBuilder: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.xc.XmlAdapterJsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void a(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializerBase: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: java.lang.String _getText2(org.codehaus.jackson.JsonToken)>",
            "<com.turntable.gk.TestGame: void access$21(com.turntable.gk.TestGame,boolean)>",
            "<com.turntable.gk.date.LoginRes$Body: void setSkipPayPassType(int)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeBytes(byte,byte,byte,byte)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadableInstant)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitMultiANewArrayInsn(java.lang.String,int)>",
            "<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.node.ArrayNode: void add(int)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode path(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$CharArraySerializer: void serialize(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(float)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.String)>",
            "<com.turntable.gk.TestGame: int getBetGlod()>",
            "<org.codehaus.jackson.map.JsonDeserializer$None: void <init>()>",
            "<org.codehaus.jackson.io.UTF8Writer: java.io.Writer append(char)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder: java.lang.Object _constructArray(int)>",
            "<org.codehaus.jackson.map.SerializationConfig$Feature: void <clinit>()>",
            "<com.turntable.gk.net.BaseHandler: void <init>()>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getDefDescLine2()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setOrderTime(java.lang.String)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeNumber(double)>",
            "<org.codehaus.jackson.map.deser.CollectionDeserializer: java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.module.SimpleModule: void <init>(java.lang.String,org.codehaus.jackson.Version)>",
            "<org.codehaus.jackson.map.introspect.AnnotationMap: int size()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void serializeTypedContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: boolean hasSerializers()>",
            "<org.codehaus.jackson.io.NumberOutput: int outputInt(int,char[],int)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: java.lang.String getPkPassId()>",
            "<com.turntable.gk.common.json.dao.request.GameGetRq: void setToken(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: int getDimensions()>",
            "<com.weibopay.impl.PreparePay$1: void <init>(com.weibopay.impl.PreparePay)>",
            "<com.turntable.gk.SelectGlod: void access$12(com.turntable.gk.SelectGlod,com.turntable.gk.BackgroundThread)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.DeserializationConfig: void addHandler(org.codehaus.jackson.map.DeserializationProblemHandler)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _skipCR()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.type.JavaType _convertType(java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: java.util.List filterBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeFieldName(org.codehaus.jackson.SerializableString)>",
            "<com.turntable.gk.UpdateAPK: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.UntypedObjectDeserializer: java.util.List mapArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.SelectGlod: com.turntable.gk.AlertDialogView access$6(com.turntable.gk.SelectGlod,java.lang.String,int)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileFactory disable(org.codehaus.jackson.smile.SmileParser$Feature)>",
            "<org.codehaus.jackson.node.ArrayNode: int size()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writePPFieldName(java.lang.String,boolean)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addPropertyConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.deser.SettableBeanProperty[])>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: double _parseDoublePrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.smile.SmileBufferRecycler: void releaseSeenStringValuesBuffer(java.lang.Object[])>",
            "<org.codehaus.jackson.map.DeserializerFactory$Config: void <init>()>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addStringFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.BeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.Creator$PropertyBased propertyBasedCreator()>",
            "<org.codehaus.jackson.util.JsonParserSequence: org.codehaus.jackson.JsonToken nextToken()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.util.List findSuperTypes(java.lang.Class,java.lang.Class)>",
            "<com.turntable.gk.common.json.dao.request.TopUpRq: java.lang.String getToken()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$ShortKD: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.FailingSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.Base64Variant: void encodeBase64Partial(java.lang.StringBuilder,int,int)>",
            "<org.codehaus.jackson.smile.SmileParser$1: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ByteArraySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.TestGame$2: void <init>(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.BeanDescription: java.lang.Class getBeanClass()>",
            "<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.ClassIntrospector,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer$MyClassLoader: java.lang.Class loadAndResolve(java.lang.String,byte[],java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$ClassSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter: boolean isInline()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void a(int,int)>",
            "<com.turntable.gk.SelectGlod: android.view.View$OnClickListener getOnClickListener(android.widget.ImageView[])>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$FloatDeser: float[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.ArrayNode: void addContentsTo(java.util.List)>",
            "<org.codehaus.jackson.impl.JsonParserBase: org.codehaus.jackson.util.ByteArrayBuilder _getByteArrayBuilder()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void flush()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int _decodeUtf8_3fast(int)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>",
            "<org.codehaus.jackson.node.BaseJsonNode: org.codehaus.jackson.node.ObjectNode findParent(java.lang.String)>",
            "<org.codehaus.jackson.Base64Variant: java.lang.String getName()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig copySerializationConfig()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider configure(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.map.type.TypeParser$MyTokenizer: boolean hasMoreTokens()>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer _createAndCache2(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.SelectGlod$6: void onReceivedTitle(android.webkit.WebView,java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void a(byte[],int,int)>",
            "<com.turntable.gk.date.LoginRes$CardList: void setLast(java.lang.String)>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper$1: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileUtil: void <init>()>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.node.LongNode: int hashCode()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder: double[] _constructArray(int)>",
            "<org.codehaus.jackson.JsonParser: java.lang.Object readValueAs(java.lang.Class)>",
            "<com.weibopay.http.SNetworkTask: void onPostExecute(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.ser.BeanPropertyWriter constructFilteredBeanWriter(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[])>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: byte[] _decodeBase64(org.codehaus.jackson.Base64Variant)>",
            "<com.turntable.gk.common.json.dao.response.Gun: int getGl()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setSerializationConfig(org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: boolean isCglibGetCallbacks(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: void <init>()>",
            "<com.turntable.gk.common.json.dao.request.TopUpRq: long getMoney()>",
            "<org.codehaus.jackson.node.NumericNode: long getValueAsLong()>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: java.lang.String toString()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.String getName()>",
            "<org.codehaus.jackson.map.util.ClassUtil: boolean hasGetterSignature(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.util.TextBuffer: java.lang.String toString()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$DoubleDeser: void <init>()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IteratorSerializer: void serializeContents(java.util.Iterator,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.node.BooleanNode: long getValueAsLong(long)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeString(char[],int,int)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileParser createJsonParser(java.net.URL)>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket: void <init>(org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket,java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void <init>(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature[] values()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitEnd()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()>",
            "<org.codehaus.jackson.JsonParser: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void b()>",
            "<org.codehaus.jackson.map.SerializationConfig: java.lang.Class getSerializationView()>",
            "<com.turntable.gk.GameDubo: void changeSpeed()>",
            "<org.codehaus.jackson.map.deser.PropertyValueBuffer: org.codehaus.jackson.map.deser.PropertyValue buffered()>",
            "<org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>",
            "<org.codehaus.jackson.impl.JsonReadContext: java.lang.String getCurrentName()>",
            "<org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap: org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeString(org.codehaus.jackson.SerializableString)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: boolean isClosed()>",
            "<com.turntable.gk.GlobalInfo: float getcHeight()>",
            "<com.turntable.gk.SelectGlod: java.lang.String createMerchantOrderId()>",
            "<org.codehaus.jackson.map.ext.OptionalHandlerFactory: boolean hasInterface(java.lang.Class,java.lang.String)>",
            "<org.codehaus.jackson.node.IntNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void b(org.codehaus.jackson.org.objectweb.asm.Item)>",
            "<org.codehaus.jackson.map.BeanDescription: void <init>(org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.TestGame$5: boolean onLongClick(android.view.View)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Byte[] deserializeFromBase64(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.AnnotatedElement getAnnotated()>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.map.type.MapType construct(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeStartObject()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _skipComment()>",
            "<org.codehaus.jackson.map.ser.FailingSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type: void <clinit>()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.BytesToNameCanonicalizer makeChild(boolean,boolean)>",
            "<org.codehaus.jackson.util.TextBuffer: char[] findBuffer(int)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$PropertyDescriptors: void <init>(java.lang.Class,java.util.List)>",
            "<com.turntable.gk.net.FileTool: void createFile(java.lang.String,java.lang.String,java.lang.String)>",
            "<com.turntable.gk.SelectGlod: void access$17(com.turntable.gk.SelectGlod)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker$Std withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void reportOverflowInt()>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: org.codehaus.jackson.JsonParseException _constructError(java.lang.String,java.lang.Throwable)>",
            "<org.codehaus.jackson.node.ObjectNode: java.util.List findParents(java.lang.String,java.util.List)>",
            "<org.codehaus.jackson.map.type.ArrayType: java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.map.SerializationConfig: void setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$CharKD: void <init>()>",
            "<org.codehaus.jackson.map.ser.impl.StaticListSerializerBase: void <init>(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.util.CharTypes: int[] getInputCodeComment()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter()>",
            "<com.weibopay.http.SNetworkProxy$1: java.lang.Object callService()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription: boolean hasGenerics()>",
            "<com.turntable.gk.Tools$1: void <init>()>",
            "<com.turntable.gk.date.LoginRes$CardList: void setIcon(java.lang.String)>",
            "<org.codehaus.jackson.node.POJONode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: java.math.BigDecimal getDecimalValue()>",
            "<com.turntable.gk.GlobalInfo: long getGlodCoins(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.type.JavaType: boolean isInterface()>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getIdx()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.BooleanNode: boolean getValueAsBoolean()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void visitEnd()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<com.turntable.gk.date.LoginRes$Body: void setSkipPayPassQuote(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: java.lang.String determineClassName(java.lang.Object)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setMerchantIdentity(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedWithParams: int getAnnotationCount()>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NumericNode numberNode(java.math.BigInteger)>",
            "<org.codehaus.jackson.node.NumericNode: long getValueAsLong(long)>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishInt()>",
            "<org.codehaus.jackson.impl.StreamBasedParserBase: boolean loadMore()>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter: boolean includeMethod(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.Deserializers$None: org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.JsonFactory: void enableParserFeature(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeEndObject()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.annotate.NoClass: void <init>()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<com.turntable.gk.GameDubo: void onDraw(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer: void <init>()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$CollectionSerializer: void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.impl.Utf8Generator: int _writeEscapedControlChar(int,int)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: boolean hasTextCharacters()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>",
            "<org.codehaus.jackson.map.ObjectMapper: void setVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder: void _reset()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$StringArraySerializer: void <init>(org.codehaus.jackson.map.BeanProperty)>",
            "<com.weibopay.http.INetworkConstants: void <init>()>",
            "<org.codehaus.jackson.map.SerializationConfig: void addMixInAnnotations(java.lang.Class,java.lang.Class)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>",
            "<com.turntable.gk.App: java.lang.String mask(java.lang.String)>",
            "<org.codehaus.jackson.mrbean.BeanUtil: void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>",
            "<com.turntable.gk.common.json.dao.response.GameStartRp: void <init>()>",
            "<org.codehaus.jackson.node.ContainerNode$NoNodesIterator: void <init>()>",
            "<org.codehaus.jackson.map.ObjectWriter: boolean canSerialize(java.lang.Class)>",
            "<com.turntable.gk.TestGame: android.view.View$OnTouchListener getOnTouchListener()>",
            "<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.map.type.ArrayType withContentTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: char[] getTextCharacters()>",
            "<com.turntable.gk.SelectGlod: com.turntable.gk.AlertDialogView setAlertDialog(java.lang.String,int)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$Body: void setVirtualCreditCards(java.util.ArrayList)>",
            "<org.codehaus.jackson.sym.NameN: boolean equals(int,int)>",
            "<org.codehaus.jackson.node.ValueNode: void <init>()>",
            "<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: void setGetter(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap _findPropertyFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection,boolean)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder: int[] _constructArray(int)>",
            "<org.codehaus.jackson.util.TextBuffer: void append(char)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: java.util.List addToList(java.util.List,java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ArrayDeserializer: void <init>()>",
            "<org.codehaus.jackson.JsonParser: void clearCurrentToken()>",
            "<com.turntable.gk.bean.Head: void setCode(int)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name findName(int,int)>",
            "<com.turntable.gk.date.LoginRes$Body: void setLoginName(java.lang.String)>",
            "<org.codehaus.jackson.JsonLocation: void <init>(java.lang.Object,long,long,int,int)>",
            "<org.codehaus.jackson.JsonGenerationException: void <init>(java.lang.Throwable)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IteratorSerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.util.Collection allIntrospectors(java.util.Collection)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: boolean isFactoryMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: void setReason(java.lang.String)>",
            "<org.codehaus.jackson.io.UTF8Writer: int convertSurrogate(int)>",
            "<com.turntable.gk.common.json.dao.request.ThanSize: void setBg(int)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getParameterClass(int)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedConstructor getDefaultConstructor()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void <init>()>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void <init>(java.lang.Class,java.util.Collection)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<com.turntable.gk.TestGame: void initDate()>",
            "<com.turntable.gk.common.json.dao.request.ThanSizeRq: java.lang.String getToken()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$EnumKD: void <init>(org.codehaus.jackson.map.deser.EnumResolver)>",
            "<org.codehaus.jackson.map.type.SimpleType: java.lang.String toString()>",
            "<org.codehaus.jackson.map.JsonMappingException: java.util.List getPath()>",
            "<com.weibopay.http.RequestInfo: void <clinit>()>",
            "<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getLastClearedToken()>",
            "<org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As[] values()>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getBankName()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Member getMember()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setIgnoreUnknownProperties(boolean)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: org.joda.time.DateTime parseLocal(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: void configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()>",
            "<com.turntable.gk.BaseActivity: void onSaveInstanceState(android.os.Bundle)>",
            "<org.codehaus.jackson.JsonNode: org.codehaus.jackson.JsonNode getPath(int)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void close()>",
            "<com.turntable.gk.bean.AppsRes$Body: void <init>()>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker$Std withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.node.ObjectNode: void <init>(org.codehaus.jackson.node.JsonNodeFactory)>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver: org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver construct(org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean)>",
            "<org.codehaus.jackson.mrbean.BeanUtil: void <init>()>",
            "<org.codehaus.jackson.map.type.SimpleType: java.lang.String buildCanonicalName()>",
            "<com.turntable.gk.SelectGlod: android.view.View getPopView(java.lang.String)>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: java.io.Writer append(java.lang.CharSequence)>",
            "<org.codehaus.jackson.Base64Variant: int encodeBase64Partial(int,int,byte[],int)>",
            "<org.codehaus.jackson.map.JsonSerializer: void <init>()>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object)>",
            "<com.turntable.gk.date.LoginRes$Body: java.util.ArrayList getVirtualCreditCards()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void <init>()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.SerializerFactory$Config getConfig()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void e()>",
            "<com.turntable.gk.net.SNetworkTask: void onPostExecute(java.lang.Object)>",
            "<org.codehaus.jackson.node.TextNode: void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean isInvisible(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<com.turntable.gk.TestGame: void setTextMoney()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializers: org.codehaus.jackson.map.KeyDeserializer constructEnumKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.node.TextNode: byte[] getBinaryValue()>",
            "<com.turntable.gk.Tools: void makeText(android.content.Context,java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializerProvider)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeHeader()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Object[] deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.map.exc.UnrecognizedPropertyException: org.codehaus.jackson.map.exc.UnrecognizedPropertyException 'from'(org.codehaus.jackson.JsonParser,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.map.type.ClassKey: java.lang.String toString()>",
            "<org.codehaus.jackson.map.JsonMappingException: void prependPath(java.lang.Object,int)>",
            "<com.turntable.gk.BackgroundThread: java.lang.String getName()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findJaxbPropertyName(java.lang.reflect.AnnotatedElement,java.lang.Class,java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.ThreadRefresh: void <init>()>",
            "<org.codehaus.jackson.io.NumberOutput: java.lang.String toString(int)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void _writeStartArray()>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature: boolean enabledByDefault()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.'annotation'.Annotation getContextAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitMaxs(int,int)>",
            "<org.codehaus.jackson.map.JsonSerializer: java.lang.Class handledType()>",
            "<org.codehaus.jackson.map.SerializerFactory: org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.node.ObjectNode: void put(java.lang.String,long)>",
            "<com.turntable.gk.net.SNetworkProxy: void networkFinished(java.lang.String,java.lang.Object)>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: java.lang.String getUrl()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.JsonSerializer _findFirstSerializer(java.lang.Iterable,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.util.TextBuffer: char[] contentsAsArray()>",
            "<com.turntable.gk.common.util.payTools.PartnerConfig: java.lang.String htmlUrl(int)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: void setPkPassId(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _reportInvalidChar(int)>",
            "<org.codehaus.jackson.io.BaseReader: void reportBounds(char[],int,int)>",
            "<org.codehaus.jackson.node.ObjectNode: java.util.Iterator getFieldNames()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void _writeStartObject()>",
            "<org.codehaus.jackson.map.type.SimpleType: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeNumber(java.math.BigInteger)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: java.lang.String toString()>",
            "<org.codehaus.jackson.Version: int getMajorVersion()>",
            "<com.turntable.gk.SelectGlod$9: void <init>(com.turntable.gk.SelectGlod,android.content.Context,android.app.AlertDialog,java.lang.String)>",
            "<org.codehaus.jackson.map.util.ObjectBuffer$Node: void <init>(java.lang.Object[])>",
            "<org.codehaus.jackson.node.ObjectNode: int size()>",
            "<com.turntable.gk.SelectGlod: void setpay()>",
            "<com.turntable.gk.SelectGlod$6: void onCloseWindow(android.webkit.WebView)>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(byte[],int,int)>",
            "<org.codehaus.jackson.map.SerializationConfig: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ser.SerializerCache: org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>",
            "<org.codehaus.jackson.map.util.EnumValues: org.codehaus.jackson.map.util.EnumValues construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: long getSize(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor visitInterfaceBound()>",
            "<org.codehaus.jackson.map.introspect.MemberKey: boolean equals(java.lang.Object)>",
            "<com.turntable.gk.SelectGlod: void access$13(com.turntable.gk.SelectGlod,java.lang.String)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getBgImage()>",
            "<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.map.deser.impl.StringCollectionDeserializer: org.codehaus.jackson.map.JsonDeserializer getContentDeserializer()>",
            "<org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.jsontype.NamedType,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector,java.util.HashMap)>",
            "<com.turntable.gk.date.LoginRes$CardList: void setStatus(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileFactory configure(org.codehaus.jackson.smile.SmileGenerator$Feature,boolean)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonParser$Feature,boolean)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.util.List getConstructors()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: org.codehaus.jackson.JsonToken _handleUnexpectedValue(int)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: org.codehaus.jackson.JsonStreamContext getParsingContext()>",
            "<com.weibopay.impl.PreparePay: boolean access$6(com.weibopay.impl.PreparePay)>",
            "<org.codehaus.jackson.io.BaseReader: void reportStrangeStream()>",
            "<com.turntable.gk.bean.DrawCashRes$Body: void setMinQuota(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getInputCharset()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: void <clinit>()>",
            "<org.codehaus.jackson.JsonNode: int size()>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi: org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: java.lang.String getCurrentName()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeRawValue(java.lang.String,int,int)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeUTF8String(byte[],int,int)>",
            "<org.codehaus.jackson.node.IntNode: int hashCode()>",
            "<org.codehaus.jackson.JsonNode: org.codehaus.jackson.JsonNode get(int)>",
            "<org.codehaus.jackson.smile.SmileBufferRecycler: void <init>()>",
            "<org.codehaus.jackson.impl.JsonParserBase: void close()>",
            "<org.codehaus.jackson.map.BeanProperty$Std: java.lang.String getName()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerModifier: void <init>()>",
            "<org.codehaus.jackson.node.NodeCursor$RootValue: org.codehaus.jackson.JsonNode currentNode()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig)>",
            "<com.turntable.gk.common.json.dao.request.ThanSize: void setBs(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void serializeFieldsFiltered(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$AtomicBooleanDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.util.JsonParserSequence: void close()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer: void serialize(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.BufferRecycler$CharBufferType: org.codehaus.jackson.util.BufferRecycler$CharBufferType valueOf(java.lang.String)>",
            "<org.codehaus.jackson.io.JsonStringEncoder: void <init>()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeNumber(float)>",
            "<org.codehaus.jackson.map.ObjectMapper$DefaultTyping: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void <init>(org.codehaus.jackson.map.ObjectMapper)>",
            "<org.codehaus.jackson.node.DoubleNode: org.codehaus.jackson.node.DoubleNode valueOf(double)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setRemitCode(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeFieldName(org.codehaus.jackson.io.SerializedString)>",
            "<org.codehaus.jackson.map.deser.EnumDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeEndObject()>",
            "<com.turntable.gk.BaseActivity: void onDestroy()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: int a(int)>",
            "<org.codehaus.jackson.smile.SmileParser$Feature: boolean enabledByDefault()>",
            "<com.turntable.gk.common.json.dao.response.BaseResponseBean: java.lang.String getSt()>",
            "<org.codehaus.jackson.map.ObjectMapper$1: void setMixInAnnotations(java.lang.Class,java.lang.Class)>",
            "<org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.annotate.JsonTypeInfo$Id: java.lang.String getDefaultPropertyName()>",
            "<com.turntable.gk.TestGame: void access$3(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>",
            "<com.turntable.gk.bean.AppsRes: void <init>()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$ByteDeser: byte[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.smile.SmileGenerator: int _findSeenStringValue(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.MemberKey: void <init>(java.lang.reflect.Constructor)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getWbId()>",
            "<org.codehaus.jackson.node.BigIntegerNode: int hashCode()>",
            "<com.turntable.gk.net.SNetworkTask: void <init>(java.lang.String,com.turntable.gk.net.SNetworkCallBack)>",
            "<com.turntable.gk.common.net.MyX509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>",
            "<com.turntable.gk.SelectGlod$5: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.type.MapType: java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$FloatDeserializer: void <init>(java.lang.Class,java.lang.Float)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$LongDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.MissingNode: org.codehaus.jackson.node.MissingNode getInstance()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: long readLong(int)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _skipString()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeRawUTF8String(byte[],int,int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$PrimitiveOrWrapperDeserializer: void <init>(java.lang.Class,java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.CustomDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.impl.StreamBasedParserBase: boolean _loadToHaveAtLeast(int)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Class getRawSerializationType()>",
            "<org.codehaus.jackson.xc.DataHandlerJsonDeserializer$1: java.lang.String getName()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.smile.Tool: void showUsage()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: void processViews(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.BeanSerializerBuilder)>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: java.util.Iterator allProperties()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileFactory enable(org.codehaus.jackson.smile.SmileParser$Feature)>",
            "<org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer: void serialize(javax.xml.datatype.XMLGregorianCalendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.JsonParser: java.lang.Object getEmbeddedObject()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitInsn(int)>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: void createUnimplementedMethod(org.codehaus.jackson.org.objectweb.asm.ClassWriter,java.lang.String,java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.util.LinkedNode: boolean contains(org.codehaus.jackson.map.util.LinkedNode,java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ByteArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: void a(int,int)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.reflect.Method findFactoryMethod(java.lang.Class[])>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Field getAnnotated()>",
            "<org.codehaus.jackson.map.ser.StdKeySerializer: void <clinit>()>",
            "<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>",
            "<org.codehaus.jackson.map.ser.SerializerCache: void addNonTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.ser.BeanPropertyWriter _constructWriter(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.ser.PropertyBuilder,boolean,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMember)>",
            "<com.turntable.gk.common.json.dao.request.ThanSize: int getBg()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name addName(int[],int,int)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: int hash(java.lang.Class,boolean)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: java.lang.String getConstructorDescriptor(java.lang.reflect.Constructor)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$CurrencyDeserializer: void <init>()>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeObject(java.lang.Object)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer: void serialize(org.joda.time.DateTime,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ByteArraySerializer: void serializeWithType(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: java.lang.String readClass(int,char[])>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeSingleEscape(int)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: java.lang.String getDescriptor()>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: void _decodeBase64(java.lang.String,org.codehaus.jackson.util.ByteArrayBuilder,org.codehaus.jackson.Base64Variant)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: boolean isEnabled(org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getSignType()>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializerProvider)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void resolveMemberMethods(org.codehaus.jackson.map.introspect.MethodFilter,boolean)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: int getOpcode(int)>",
            "<org.codehaus.jackson.xc.DataHandlerJsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void _cantHappen()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer: void serializeWithType(org.codehaus.jackson.map.JsonSerializableWithType,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<com.turntable.gk.GlobalInfo: void refresh(com.turntable.gk.common.util.interfaceI.Refresh)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedRaw(java.lang.Object)>",
            "<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.node.ObjectNode: void putNull(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$ShortDeserializer: java.lang.Short deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getBindedMobilePhoneNo()>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: void <init>()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.JsonToken parseNumberText(int)>",
            "<org.codehaus.jackson.io.NumberOutput: int outputFullTriplet(int,char[],int)>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode,org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.util.CharTypes: int[] getOutputEscapes()>",
            "<org.codehaus.jackson.JsonEncoding: void <init>(java.lang.String,int,java.lang.String,boolean)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeStartObject()>",
            "<com.turntable.gk.GameDubo: android.app.Activity access$0(com.turntable.gk.GameDubo)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: void close()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _fromWildcard(java.lang.reflect.WildcardType,org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <init>(java.lang.String,int,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.impl.SimpleFilterProvider: org.codehaus.jackson.map.ser.BeanPropertyFilter removeFilter(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: int cachedDeserializersCount()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder: boolean[] _constructArray(int)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name parseMediumFieldName(int,int[])>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: boolean hasNext()>",
            "<com.turntable.gk.GameDubo$2: void run()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: boolean isWriteable(java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$CreatorProperty: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileParser createJsonParser(byte[],int,int)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedLong(long)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeNull()>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: byte[] completeAndCoalesce(int)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$ArrayDeser: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.date.LoginRes$CardList: void setBankAccountNo(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValueUsingView(java.io.OutputStream,java.lang.Object,java.lang.Class)>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getIcon()>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setVersion(java.lang.String)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void unshareMain()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: boolean hasValueDeserializer()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name parseFieldName(int,int,int,int)>",
            "<org.codehaus.jackson.io.NumberInput: int parseAsInt(java.lang.String,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void b(int)>",
            "<org.codehaus.jackson.map.util.JSONPObject: java.lang.String getFunction()>",
            "<org.codehaus.jackson.node.ObjectNode: int hashCode()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider configure(org.codehaus.jackson.JsonParser$Feature,boolean)>",
            "<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleModule addDeserializer(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: javax.xml.bind.'annotation'.adapters.XmlAdapter checkAdapter(javax.xml.bind.'annotation'.adapters.XmlJavaTypeAdapter,java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addMixOvers(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod,boolean)>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: org.codehaus.jackson.org.objectweb.asm.ByteVector putByteArray(byte[],int,int)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _finishString2()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$PropertyDescriptors: java.util.Map _processWriteMethod(java.util.Map,java.lang.reflect.Method,java.lang.String,java.util.List)>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder: java.lang.Object resetAndStart()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: void _handleEOF()>",
            "<org.codehaus.jackson.map.ext.DOMSerializer: void serialize(org.w3c.dom.Node,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.node.IntNode: void <clinit>()>",
            "<org.codehaus.jackson.node.DoubleNode: boolean isFloatingPointNumber()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeBytes(byte[],int,int)>",
            "<org.codehaus.jackson.node.NodeCursor: org.codehaus.jackson.node.NodeCursor getParent()>",
            "<org.codehaus.jackson.io.JsonStringEncoder: byte[] encodeAsUTF8(java.lang.String)>",
            "<com.turntable.gk.bean.RequestInfo: void setName(java.lang.String)>",
            "<org.codehaus.jackson.io.NumberInput: double parseAsDouble(java.lang.String,double)>",
            "<org.codehaus.jackson.smile.SmileParser: void _handleLongFieldName()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.CreatorContainer findDeserializerCreators(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)>",
            "<org.codehaus.jackson.annotate.JsonMethod: void <clinit>()>",
            "<org.codehaus.jackson.node.POJONode: boolean isPojo()>",
            "<org.codehaus.jackson.node.NumericNode: boolean isNumber()>",
            "<org.codehaus.jackson.map.DeserializationConfig: void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType[] findParameterTypes(org.codehaus.jackson.type.JavaType,java.lang.Class)>",
            "<org.codehaus.jackson.node.DoubleNode: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<org.codehaus.jackson.map.ser.impl.TimeZoneSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void a(org.codehaus.jackson.org.objectweb.asm.ClassWriter,int,org.codehaus.jackson.org.objectweb.asm.Type[],int)>",
            "<org.codehaus.jackson.map.deser.EnumMapDeserializer: java.util.EnumMap constructMap()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer: java.lang.Class getKeyClass()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.map.SerializerProvider: void <init>(org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder: java.lang.Object _constructArray(int)>",
            "<org.codehaus.jackson.node.TextNode: boolean isTextual()>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class)>",
            "<com.turntable.gk.common.json.dao.response.BaseResponseBean: java.lang.String getErrmsg()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setProductDesc(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void _reportIncompatibleRootType(java.lang.Object,org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.common.json.dao.response.Game: java.lang.String getOrderUrl()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void reportUnexpectedNumberChar(int,java.lang.String)>",
            "<org.codehaus.jackson.util.BufferRecycler: char[] calloc(int)>",
            "<org.codehaus.jackson.smile.SmileParser: void _skip7BitBinary()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicReferenceSerializer: void serialize(java.util.concurrent.atomic.AtomicReference,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder: void <init>()>",
            "<com.turntable.gk.date.BaseResult: void <init>()>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.JsonParser)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getSkipPayPassQuote()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<com.weibopay.impl.RequestInfo: com.weibopay.impl.RequestInfo valueOf(java.lang.String)>",
            "<org.codehaus.jackson.JsonNode: java.util.Iterator getFieldNames()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.net.SNetworkProxy$1: java.lang.Object callService()>",
            "<org.codehaus.jackson.map.util.LRUMap: void <init>(int,int)>",
            "<org.codehaus.jackson.map.util.EnumValues: org.codehaus.jackson.io.SerializedString serializedValueFor(java.lang.Enum)>",
            "<org.codehaus.jackson.node.MissingNode: org.codehaus.jackson.JsonNode path(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.bean.DrawCashRes$Card: void <init>()>",
            "<com.turntable.gk.common.json.dao.response.BaseResponseBean: void <init>()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: java.lang.String getText()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder: java.lang.Object _constructArray(int)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$Body: void <init>()>",
            "<org.codehaus.jackson.map.type.CollectionType: java.lang.String toString()>",
            "<org.codehaus.jackson.smile.SmileParser: int getTextLength()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>",
            "<org.codehaus.jackson.io.IOContext: char[] allocNameCopyBuffer(int)>",
            "<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>",
            "<org.codehaus.jackson.map.introspect.MemberKey: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.BaseNodeDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.node.NullNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.map.MappingJsonFactory: void <init>()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeRaw(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.module.SimpleModule: java.lang.String getModuleName()>",
            "<com.turntable.gk.GameDubo: void shadow17(android.graphics.Canvas)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$Body: int getCreditAcctEnabled()>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor visitParameterType()>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitIntInsn(int,int)>",
            "<org.codehaus.jackson.node.BinaryNode: int hashCode()>",
            "<org.codehaus.jackson.map.ser.ScalarSerializerBase: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.JsonGenerator: boolean isFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: void setMapper(org.codehaus.jackson.map.ObjectMapper)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.GameDubo: void <init>(android.app.Activity)>",
            "<org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility[] values()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeFieldName(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicLongSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassStatusType: com.turntable.gk.date.GetPkPassGroupListRes$PkPassStatusType[] values()>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeNumber(java.math.BigDecimal)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: int hashCode()>",
            "<org.codehaus.jackson.map.deser.ThrowableDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)>",
            "<com.turntable.gk.bean.VirtualCreditCard: java.lang.String getLogoUrl()>",
            "<com.turntable.gk.GlobalInfo: float getcWidth1()>",
            "<org.codehaus.jackson.map.ObjectWriter: void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi: org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setBgColor(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getLanguage()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer: java.lang.String deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: boolean isClosed()>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: void a(java.lang.StringBuffer,java.lang.Class)>",
            "<com.turntable.gk.bean.paybean.HtmlPayData: java.lang.String getSignContent()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer: void <init>(boolean)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter: void <init>()>",
            "<org.codehaus.jackson.xc.DomElementJsonDeserializer: void <init>(javax.xml.parsers.DocumentBuilder)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeRawValue(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPayerId(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Integer _parseInteger(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitTypeInsn(int,java.lang.String)>",
            "<org.codehaus.jackson.Base64Variant: int decodeBase64Char(int)>",
            "<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.SerializationConfig getConfig()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$NumberDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$DoubleKD: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider enable(org.codehaus.jackson.JsonParser$Feature,boolean)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer: void <init>()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _finishString()>",
            "<com.weibopay.http.SNetWork: java.lang.String getRequest(java.lang.String)>",
            "<org.codehaus.jackson.JsonFactory: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$ByteDeser: void <init>()>",
            "<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext getParent()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: void setFilteredProperties(org.codehaus.jackson.map.ser.BeanPropertyWriter[])>",
            "<org.codehaus.jackson.node.TreeTraversingParser: org.codehaus.jackson.JsonNode currentNumericNode()>",
            "<org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator: java.lang.Object get(java.lang.Object,java.lang.reflect.Field)>",
            "<com.games.b: java.util.List b(android.content.Context)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer: void serialize(org.joda.time.LocalDate,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.smile.SmileParser: int _decodeUtf8_3fast(int)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.node.ArrayNode insertArray(int)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int getTextLength()>",
            "<org.codehaus.jackson.node.NullNode: void <init>()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: boolean _isIncludableField(java.lang.reflect.Field)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$ShortDeserializer: void <init>(java.lang.Class,java.lang.Short)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: java.lang.String getInternalName(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer: void <init>(java.lang.Class,java.lang.Boolean)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.ArrayNode arrayNode()>",
            "<com.turntable.gk.SelectGlod$5: void <init>(com.turntable.gk.SelectGlod)>",
            "<com.turntable.gk.TestGame: void updateView(java.lang.String,long,long)>",
            "<org.codehaus.jackson.JsonParser: int getValueAsInt()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Type getParameterType(int)>",
            "<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.type.JavaType getContentType()>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getColor()>",
            "<org.codehaus.jackson.io.SerializedString: java.lang.String toString()>",
            "<com.turntable.gk.SelectGlod: void access$3(com.turntable.gk.SelectGlod,java.lang.String)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeRawValue(java.lang.String)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.util.BufferRecycler _getBufferRecycler()>",
            "<org.codehaus.jackson.map.ser.EnumSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.weibopay.impl.PreparePay: void checkPayTool()>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: int getArgumentsAndReturnSizes(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8Generator: int _outputRawMultiByteChar(int,char[],int,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: int newMethod(java.lang.String,java.lang.String,java.lang.String,boolean)>",
            "<org.codehaus.jackson.map.ser.PropertyBuilder: org.codehaus.jackson.type.JavaType findSerializationType(org.codehaus.jackson.map.introspect.Annotated,boolean)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassGroup: void <init>()>",
            "<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.ser.FilterProvider getFilterProvider()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.util.TextBuffer: char[] finishCurrentSegment()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void set(java.lang.Object,java.lang.Object)>",
            "<org.codehaus.jackson.node.LongNode: java.math.BigInteger getBigIntegerValue()>",
            "<org.codehaus.jackson.map.TreeMapper: void writeTree(org.codehaus.jackson.JsonNode,java.io.Writer)>",
            "<org.codehaus.jackson.type.TypeReference: int compareTo(java.lang.Object)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.io.InputStream)>",
            "<org.codehaus.jackson.sym.NameN: void <init>(java.lang.String,int,int[],int)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper enableDefaultTypingAsProperty(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,java.lang.String)>",
            "<org.codehaus.jackson.util.VersionUtil: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _addSeenName(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void visitBaseType(char)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature: int collectDefaults()>",
            "<org.codehaus.jackson.type.JavaType: void setValueHandler(java.lang.Object)>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: com.turntable.gk.net.SNetworkTask getThreadStackFirst()>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeFieldName(org.codehaus.jackson.io.SerializedString)>",
            "<com.turntable.gk.date.LoginRes$Body: void setVirtualCreditCards(java.util.ArrayList)>",
            "<org.codehaus.jackson.JsonNode: java.lang.Number getNumberValue()>",
            "<org.codehaus.jackson.map.exc.UnrecognizedPropertyException: java.lang.String getUnrecognizedPropertyName()>",
            "<org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver: java.lang.String idFromValue(java.lang.Object)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: int getAccess()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeNumber(int)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.common.util.payTools.Base64: void <init>()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$LongSerializer: void <clinit>()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: int newConst(java.lang.Object)>",
            "<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
            "<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.type.JavaType,java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: void <init>()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$FloatDeser: void <init>()>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: void setDefaultPackage(java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeNumber(java.math.BigDecimal)>",
            "<org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileGenerator: long outputOffset()>",
            "<com.turntable.gk.date.LoginRes$CardList: void setCardId(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer: void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$TimeZoneDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.net.SNetworkTask: java.lang.Object doInBackground(java.lang.Void[])>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$URLDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] resetAndStart()>",
            "<org.codehaus.jackson.type.TypeReference: void <init>()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: void <init>()>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder typeProperty(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.FailingSerializer: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter: org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.lang.String[])>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,int,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.node.JsonNodeFactory)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.JsonParser getParser()>",
            "<org.codehaus.jackson.map.DeserializationConfig: void setMixInAnnotations(java.util.Map)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: void <init>()>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.node.ObjectNode retain(java.util.Collection)>",
            "<org.codehaus.jackson.JsonParser: int releaseBuffered(java.io.OutputStream)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.util.Annotations getAnnotations()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicBooleanSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ObjectWriter: void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.node.ObjectNode: void put(java.lang.String,double)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder: byte[] _constructArray(int)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$AnnotatedProperty: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: void <init>(java.lang.Object,int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$TokenBufferSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty: org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer: java.lang.String deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.ObjectNode: void putContentsTo(java.util.Map)>",
            "<com.turntable.gk.SelectGlod$2: void <init>(com.turntable.gk.SelectGlod,android.widget.PopupWindow,java.lang.String)>",
            "<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView: void <init>(org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.JsonNode findParent(java.lang.String)>",
            "<com.turntable.gk.TestGame: android.view.View$OnClickListener getOnClickListener()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeQuotedLong(long)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writePositiveVInt(int)>",
            "<com.turntable.gk.GameDubo: int getColor()>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: double getDoubleValue()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer: long _parseLong(java.lang.String)>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: boolean isHandled(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: void createSetter(org.codehaus.jackson.org.objectweb.asm.ClassWriter,java.lang.String,org.codehaus.jackson.mrbean.BeanBuilder$Property,org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription)>",
            "<org.codehaus.jackson.node.LongNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,java.lang.Class,org.codehaus.jackson.map.DeserializerProvider)>",
            "<org.codehaus.jackson.node.DoubleNode: boolean isDouble()>",
            "<org.codehaus.jackson.map.SerializationConfig: void disable(org.codehaus.jackson.map.SerializationConfig$Feature)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription: java.lang.String genericSignature()>",
            "<org.codehaus.jackson.map.ObjectMapper: byte[] writeValueAsBytes(java.lang.Object)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector pair(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: void accept(org.codehaus.jackson.org.objectweb.asm.ClassVisitor,int)>",
            "<org.codehaus.jackson.map.TreeMapper: void <init>(org.codehaus.jackson.map.ObjectMapper)>",
            "<org.codehaus.jackson.node.BigIntegerNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.node.ObjectNode: java.util.List findValuesAsText(java.lang.String,java.util.List)>",
            "<org.codehaus.jackson.map.ser.NullSerializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.Creator$StringBased stringCreator()>",
            "<com.turntable.gk.R$dimen: void <init>()>",
            "<org.codehaus.jackson.JsonNode: boolean isLong()>",
            "<org.codehaus.jackson.jaxrs.Annotations: org.codehaus.jackson.jaxrs.Annotations[] values()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider: java.lang.Object nullValue(org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter: boolean isInline()>",
            "<org.codehaus.jackson.Base64Variant: boolean usesPadding()>",
            "<org.codehaus.jackson.node.LongNode: long getLongValue()>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.String toString()>",
            "<com.weibopay.http.RequestInfo: java.lang.String getOperationType()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$CharDeser: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: int calcHash(int,int)>",
            "<org.codehaus.jackson.node.MissingNode: int getValueAsInt(int)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.ser.StdSerializerProvider createInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory)>",
            "<com.turntable.gk.net.SNetworkTask: java.lang.Object doInBackground(java.lang.Object[])>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As)>",
            "<com.turntable.gk.bean.VersionCheckRes: void setBody(com.turntable.gk.bean.VersionCheckRes$Body)>",
            "<org.codehaus.jackson.smile.SmileParser: void _reportInvalidOther(int,int)>",
            "<com.turntable.gk.common.json.dao.request.TopUpRq: void setToken(java.lang.String)>",
            "<org.codehaus.jackson.map.util.EnumValues: void <init>(java.util.Map)>",
            "<org.codehaus.jackson.util.InternCache: void <clinit>()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator: java.util.Iterator iterator()>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: void <init>(java.lang.reflect.Constructor,org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>",
            "<org.codehaus.jackson.map.ser.PropertyBuilder: java.lang.Object getDefaultBean()>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor visitClassBound()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: boolean isDefaultSerializer(org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: void write(char[])>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item c(org.codehaus.jackson.org.objectweb.asm.Item)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.node.BigIntegerNode: java.math.BigDecimal getDecimalValue()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _collectionType(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileFactory enable(org.codehaus.jackson.smile.SmileGenerator$Feature)>",
            "<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.JsonFactory getJsonFactory()>",
            "<org.codehaus.jackson.map.ser.EnumSerializer: void <init>(org.codehaus.jackson.map.util.EnumValues)>",
            "<org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility valueOf(java.lang.String)>",
            "<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType containedType(int)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$PropertyDescriptors: java.lang.Class getBeanClass()>",
            "<org.codehaus.jackson.map.util.JSONPObject: void <init>(java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.smile.SmileBufferRecycler: java.lang.Object[] allocSeenStringValuesBuffer()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer: void <clinit>()>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: int calcHash(java.lang.String)>",
            "<org.codehaus.jackson.io.UTF8Writer: void flush()>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: int mysize()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPlatformId(java.lang.String)>",
            "<org.codehaus.jackson.util.VersionUtil: org.codehaus.jackson.Version parseVersion(java.lang.String)>",
            "<com.turntable.gk.TestGame: void access$16(com.turntable.gk.TestGame,float)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void checkCanDeserialize(boolean)>",
            "<org.codehaus.jackson.node.MissingNode: org.codehaus.jackson.JsonNode path(int)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Type getGenericPropertyType()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: java.lang.String getText()>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: void setFieldName(java.lang.String)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void close()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: org.codehaus.jackson.map.deser.SettableBeanProperty removeProperty(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter viewWriter(java.lang.Class)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapInstantiationProblem(java.lang.Throwable,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()>",
            "<org.codehaus.jackson.map.RuntimeJsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.map.JsonMappingException)>",
            "<org.codehaus.jackson.map.deser.ContainerDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer: void <init>(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator _createUTF8JsonGenerator(java.io.OutputStream,org.codehaus.jackson.io.IOContext)>",
            "<com.turntable.gk.common.json.dao.response.GameStartRp: void setGame(com.turntable.gk.common.json.dao.response.Game)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers: void <init>()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$StringArraySerializer: void serializeContentsSlow(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.ext.DOMSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void visitEnd()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: int newClass(java.lang.String)>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.Reader constructReader()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: char[] getTextCharacters()>",
            "<org.codehaus.jackson.node.TextNode: long getValueAsLong(long)>",
            "<com.turntable.gk.bean.Head: void setMsg(java.lang.String)>",
            "<org.codehaus.jackson.map.ext.OptionalHandlerFactory: void <clinit>()>",
            "<org.codehaus.jackson.impl.JsonWriteContext: int writeValue()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver: java.lang.String idFromValue(java.lang.Object)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: double getDoubleValue()>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.GameDubo$1: void <init>(com.turntable.gk.GameDubo,int,int)>",
            "<org.codehaus.jackson.map.deser.impl.StringCollectionDeserializer: java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeFieldName(java.lang.String)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NumericNode numberNode(float)>",
            "<com.turntable.gk.common.util.payTools.Base64: int removeWhiteSpace(char[])>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void flush()>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: void createField(org.codehaus.jackson.org.objectweb.asm.ClassWriter,org.codehaus.jackson.mrbean.BeanBuilder$Property,org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription)>",
            "<org.codehaus.jackson.JsonGenerator: void <init>()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getTrueName()>",
            "<com.games.b: java.lang.String c()>",
            "<org.codehaus.jackson.node.BooleanNode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String,int,int)>",
            "<org.codehaus.jackson.node.ObjectNode: void put(java.lang.String,boolean)>",
            "<org.codehaus.jackson.util.TokenBuffer: void serialize(org.codehaus.jackson.JsonGenerator)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getAvailableBalance()>",
            "<com.turntable.gk.TestGame: int access$22(com.turntable.gk.TestGame,java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List getConstructors()>",
            "<org.codehaus.jackson.xc.DataHandlerJsonDeserializer$1: void <init>(org.codehaus.jackson.xc.DataHandlerJsonDeserializer,byte[])>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void expandCollision()>",
            "<org.codehaus.jackson.smile.SmileParser: void setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature: void <clinit>()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.ser.FilterProvider)>",
            "<org.codehaus.jackson.schema.JsonSchema: org.codehaus.jackson.JsonNode getDefaultSchemaNode()>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: int getCurrentSegmentLength()>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: org.codehaus.jackson.map.deser.SettableBeanProperty next()>",
            "<org.codehaus.jackson.smile.SmileGenerator$Feature: int getMask()>",
            "<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType construct(java.lang.Class,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ShortArraySerializer: void serializeContents(short[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.io.NumberOutput: void <clinit>()>",
            "<org.codehaus.jackson.Base64Variant: int encodeBase64Partial(int,int,char[],int)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$LongSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.turntable.gk.GameDubo: void shadow21(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$EnumKD: java.lang.Enum _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider disable(org.codehaus.jackson.JsonGenerator$Feature,boolean)>",
            "<com.turntable.gk.common.json.dao.response.Game: void setFt(java.lang.String)>",
            "<org.codehaus.jackson.node.ContainerNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: int getSort()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$StringCtorKeyDeserializer: void <init>(java.lang.reflect.Constructor)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addLongConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>",
            "<org.codehaus.jackson.util.TokenBuffer$1: void <clinit>()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void <init>(int,boolean)>",
            "<org.codehaus.jackson.impl.JsonParserBase: void loadMoreGuaranteed()>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeTree(org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.map.jsontype.NamedType: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.type.JavaType getType()>",
            "<com.turntable.gk.net.SNetworkProxy$1: void <init>(com.turntable.gk.net.SNetworkProxy,java.lang.String,com.turntable.gk.net.SNetworkCallBack,java.lang.String,java.util.HashMap,java.lang.Class)>",
            "<com.turntable.gk.SelectGlod: void requestTop_up(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.io.SerializedString: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.impl.RawSerializer: void <init>(java.lang.Class)>",
            "<com.weibopay.http.SNetworkProxy: void cancelRequest()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitLabel(org.codehaus.jackson.org.objectweb.asm.Label)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: void <init>()>",
            "<org.codehaus.jackson.map.ext.DOMDeserializer: org.w3c.dom.Document parse(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: void a(long,int)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int,int)>",
            "<com.weibopay.http.SNetworkProxy$2: java.lang.Object callService()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector nopInstance()>",
            "<org.codehaus.jackson.map.SerializationConfig: void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$CharArraySerializer: void _writeArrayContents(org.codehaus.jackson.JsonGenerator,char[])>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonParser _createJsonParser(byte[],int,int,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.annotate.JsonMethod: boolean setterEnabled()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setExt2(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeNumber(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethodMap: org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.ser.StdKeySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$FloatArraySerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.node.BinaryNode: void <init>(byte[])>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: boolean isPotentialBeanType(java.lang.Class)>",
            "<org.codehaus.jackson.Version: java.lang.String toString()>",
            "<org.codehaus.jackson.map.SerializerProvider: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>",
            "<org.codehaus.jackson.io.SerializedString: int hashCode()>",
            "<org.codehaus.jackson.xc.DataHandlerJsonSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.JsonNode: org.codehaus.jackson.JsonNode getPath(java.lang.String)>",
            "<org.codehaus.jackson.Base64Variant: java.lang.String encode(byte[])>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeNumber(double)>",
            "<com.turntable.gk.common.json.dao.request.GameLoginRq: void setToken(java.lang.String)>",
            "<com.turntable.gk.TestGame: android.widget.ProgressBar access$25(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.impl.JsonSerializerMap: int findSize(int)>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void setRootValueSeparator(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$StringFactoryKeyDeserializer: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.util.ClassUtil: void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean)>",
            "<org.codehaus.jackson.map.ser.JsonValueSerializer: java.lang.String toString()>",
            "<org.codehaus.jackson.map.deser.BaseNodeDeserializer: void _handleDuplicateField(java.lang.String,org.codehaus.jackson.node.ObjectNode,org.codehaus.jackson.JsonNode,org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.type.JavaType containedType(int)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: int getMemberMethodCount()>",
            "<com.weibopay.impl.PreparePay: int access$3(com.weibopay.impl.PreparePay)>",
            "<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.CustomDeserializerFactory: void <init>()>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter: void <init>()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileParser _createJsonParser(byte[],int,int,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.type.JavaType: boolean isPrimitive()>",
            "<org.codehaus.jackson.node.ObjectNode$NoFieldsIterator: void remove()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver: java.lang.String _defaultTypeId(java.lang.Class)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: org.codehaus.jackson.JsonToken peekNextToken()>",
            "<org.codehaus.jackson.map.ser.SerializerCache: org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap()>",
            "<org.codehaus.jackson.map.deser.Creator$Delegating: void <init>(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Type getGenericType()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: java.lang.Iterable deserializerModifiers()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: int a(int[],int[],int,int)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: boolean hasConcreteGetter()>",
            "<org.codehaus.jackson.map.SerializerFactory: org.codehaus.jackson.map.SerializerFactory withAdditionalSerializers(org.codehaus.jackson.map.Serializers)>",
            "<org.codehaus.jackson.map.util.RootNameLookup: org.codehaus.jackson.io.SerializedString findRootName(java.lang.Class,org.codehaus.jackson.map.MapperConfig)>",
            "<org.codehaus.jackson.impl.StreamBasedParserBase: void _releaseBuffers()>",
            "<com.turntable.gk.SelectGlod: void setGlod(int,android.widget.ImageView[],int)>",
            "<org.codehaus.jackson.impl.JsonReadContext: void <init>(org.codehaus.jackson.impl.JsonReadContext,int,int,int)>",
            "<org.codehaus.jackson.map.deser.CollectionDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer,org.codehaus.jackson.map.TypeDeserializer,java.lang.reflect.Constructor)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: int getWa()>",
            "<org.codehaus.jackson.JsonStreamContext: java.lang.String getTypeDesc()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: boolean isBackReference()>",
            "<com.turntable.gk.common.json.dao.request.ThanSizeRq: void <init>()>",
            "<org.codehaus.jackson.map.type.CollectionType: boolean isContainerType()>",
            "<org.codehaus.jackson.node.ArrayNode: void insert(int,org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.map.module.SimpleSerializers: void _addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder: java.lang.Object _constructArray(int)>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishBigDecimal()>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: void _copyTo(java.lang.Object,int,java.lang.Object[],int)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: java.math.BigInteger getBigIntegerValue()>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider getFilterProvider()>",
            "<org.codehaus.jackson.smile.SmileParser: int _decodeUtf8_3(int)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer getNullValueSerializer()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers: java.util.Collection provide()>",
            "<org.codehaus.jackson.JsonNode: java.util.List findValues(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withDefaultPrettyPrinter()>",
            "<com.turntable.gk.UpgradeActivity$1: void <init>(com.turntable.gk.UpgradeActivity)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers: java.util.Collection provide()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void <init>(org.codehaus.jackson.io.IOContext,int,java.io.InputStream,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer,byte[],int,int,boolean)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: void resetTyped(java.lang.Class)>",
            "<com.turntable.gk.R$color: void <init>()>",
            "<org.codehaus.jackson.JsonParser: long getValueAsLong()>",
            "<com.turntable.gk.GlobalInfo: float getcWidth()>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.ArrayNode arrayNode()>",
            "<org.codehaus.jackson.annotate.JsonMethod: boolean creatorEnabled()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void <clinit>()>",
            "<com.turntable.gk.GameDubo: void thranSizeTools(android.graphics.Canvas)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.TestGame$2: void onClick(android.view.View)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: void <init>()>",
            "<org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.Creator: void <init>()>",
            "<org.codehaus.jackson.map.ser.SerializerCache: void addTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter: boolean includeMethod(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.type.CollectionType: java.lang.String buildCanonicalName()>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeNumber(long)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPayerContactType()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: java.lang.String _valueDesc()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.Item: void a(double)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer getSerializer()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: long _parseLongPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.util.Iterator properties()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$BoolKD: void <init>()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonStreamContext getParsingContext()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: int a()>",
            "<org.codehaus.jackson.node.ObjectNode: void put(java.lang.String,int)>",
            "<org.codehaus.jackson.Base64Variants: void <init>()>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: java.lang.reflect.Constructor getDefaultConstructor()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeEndArray()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethodMap: void <init>()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor,boolean)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<com.turntable.gk.TestGame: void gunRq(com.turntable.gk.common.json.dao.response.Gun[])>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember,java.lang.reflect.Type,org.codehaus.jackson.map.introspect.AnnotationMap)>",
            "<com.turntable.gk.bean.DrawCashRes$Body: void setQuota(java.lang.String)>",
            "<org.codehaus.jackson.map.module.SimpleDeserializers: void addDeserializer(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: void setAp(int)>",
            "<org.codehaus.jackson.org.objectweb.asm.AnnotationWriter: void a(org.codehaus.jackson.org.objectweb.asm.AnnotationWriter[],int,org.codehaus.jackson.org.objectweb.asm.ByteVector)>",
            "<org.codehaus.jackson.node.BooleanNode: boolean getValueAsBoolean(boolean)>",
            "<com.turntable.gk.BaseActivity: void onResume()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>",
            "<com.turntable.gk.TestGame: void setDisplayMetrics()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeBytesLong(byte[],int,int)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeString(java.lang.String)>",
            "<org.codehaus.jackson.impl.ReaderBasedParserBase: int releaseBuffered(java.io.Writer)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: org.codehaus.jackson.JsonToken nextToken()>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: java.lang.Object remove()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setRedoFlag(java.lang.String)>",
            "<com.turntable.gk.common.json.dao.request.TopUpRq: java.lang.String getUid()>",
            "<org.codehaus.jackson.node.IntNode: boolean isIntegralNumber()>",
            "<org.codehaus.jackson.map.type.HierarchicType: org.codehaus.jackson.map.type.HierarchicType getSuperType()>",
            "<org.codehaus.jackson.io.NumberOutput: java.lang.String toString(long)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeFieldName(org.codehaus.jackson.SerializableString)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: java.util.Calendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal)>",
            "<org.codehaus.jackson.node.LongNode: org.codehaus.jackson.node.LongNode valueOf(long)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: org.codehaus.jackson.map.ObjectMapper getDefaultMapper()>",
            "<org.codehaus.jackson.JsonParser: boolean getValueAsBoolean()>",
            "<com.turntable.gk.net.SNetworkProxy: void getRequest(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.impl.StringCollectionDeserializer: org.codehaus.jackson.type.JavaType getContentType()>",
            "<org.codehaus.jackson.map.module.SimpleDeserializers: org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.NodeCursor$RootValue: void <init>(org.codehaus.jackson.JsonNode,org.codehaus.jackson.node.NodeCursor)>",
            "<org.codehaus.jackson.io.MergedStream: void mark(int)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode path(int)>",
            "<org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator: java.lang.Class enumTypeFor(java.util.EnumSet)>",
            "<org.codehaus.jackson.node.TextNode: org.codehaus.jackson.node.TextNode valueOf(java.lang.String)>",
            "<org.codehaus.jackson.node.POJONode: double getValueAsDouble(double)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: void <init>(org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isSetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitTypeInsn(int,java.lang.String)>",
            "<org.codehaus.jackson.JsonGenerator: org.codehaus.jackson.JsonGenerator setPrettyPrinter(org.codehaus.jackson.PrettyPrinter)>",
            "<org.codehaus.jackson.util.TokenBuffer: void _append(org.codehaus.jackson.JsonToken,java.lang.Object)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: void <init>(java.lang.reflect.Field,org.codehaus.jackson.map.introspect.AnnotationMap)>",
            "<com.turntable.gk.common.json.dao.request.GameLoginRq: java.lang.String getUid()>",
            "<org.codehaus.jackson.io.UTF8Writer: void throwIllegal(int)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void <init>(org.codehaus.jackson.util.BufferRecycler,int)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void <init>(java.lang.Class,boolean)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: boolean isClosed()>",
            "<com.turntable.gk.net.SNetWork: java.lang.Object postRequest(java.lang.String,java.util.HashMap,java.lang.Class)>",
            "<org.codehaus.jackson.node.BaseJsonNode: void writeTo(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeRawValue(char[],int,int)>",
            "<org.codehaus.jackson.map.deser.BaseNodeDeserializer: org.codehaus.jackson.node.ArrayNode deserializeArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.Version: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.smile.SmileParser: int _decodeUtf8_2(int)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.SerializerBase: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Object[] insertInList(java.lang.Object[],java.lang.Object)>",
            "<org.codehaus.jackson.smile.SmileParserBootstrapper: boolean ensureLoaded(int)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.CreatorContainer)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$IntArraySerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$FloatKD: void <init>()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void writeTo(java.lang.Object,java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.OutputStream)>",
            "<org.codehaus.jackson.map.ser.impl.RawSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: int _skipWS()>",
            "<com.turntable.gk.BaseActivity: void netRequestRes(java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.node.ArrayNode: java.util.List findValuesAsText(java.lang.String,java.util.List)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: boolean getValueAsBoolean(boolean)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeNumber(long)>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.CreatorContainer)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: int cachedSerializersCount()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: javax.xml.bind.'annotation'.XmlAccessType findAccessType(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.JsonFactory: boolean isGeneratorFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<com.weibopay.impl.SdkMinRes: void <init>()>",
            "<org.codehaus.jackson.map.type.ClassKey: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.UntypedObjectDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeStringSegment(char[],int,int)>",
            "<org.codehaus.jackson.map.deser.Creator$StringBased: java.lang.Object construct(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.Attribute: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: void setProperties(java.util.List)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: java.lang.Iterable serializerModifiers()>",
            "<com.turntable.gk.Tools: void <init>()>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.node.ObjectNode retain(java.lang.String[])>",
            "<org.codehaus.jackson.io.NumberInput: double parseDouble(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()>",
            "<org.codehaus.jackson.node.NullNode: boolean isNull()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$StringCtorKeyDeserializer: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: void replace(org.codehaus.jackson.map.deser.SettableBeanProperty)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.String findGettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.Version version()>",
            "<com.weibopay.impl.SdkMinRes$Head: void setCode(int)>",
            "<org.codehaus.jackson.smile.Tool: void decode(java.io.InputStream)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeRaw(char[],int,int)>",
            "<com.turntable.gk.bean.DrawCashRes: com.turntable.gk.bean.DrawCashRes$Body getBody()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: java.lang.Iterable serializers()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers: org.codehaus.jackson.map.ser.ContainerSerializerBase iterableSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper: javax.ws.rs.core.Response toResponse(org.codehaus.jackson.map.JsonMappingException)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode get(int)>",
            "<org.codehaus.jackson.map.ser.impl.SimpleFilterProvider: org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$EnumSetSerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType fromType(java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: int getParameterCount()>",
            "<com.turntable.gk.bean.RequestInfo: void setOperationType(java.lang.String)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: void <init>()>",
            "<org.codehaus.jackson.node.DecimalNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.type.JavaType: void <init>(java.lang.Class,int)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: java.math.BigInteger getBigIntegerValue()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getMerchantIdentityType()>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void <init>()>",
            "<org.codehaus.jackson.map.introspect.Annotated: org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.io.UTF32Reader: int read()>",
            "<com.turntable.gk.common.json.dao.request.GameGetRq: void setOrderId(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$BoolKD: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.map.ObjectMapper locateMapper(java.lang.Class,javax.ws.rs.core.MediaType)>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getStatus()>",
            "<com.turntable.gk.common.json.dao.request.GameGetRq: void setUid(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: void setViews(java.lang.Class[])>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.Creator$NumberBased numberCreator()>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void <init>(int)>",
            "<org.codehaus.jackson.map.deser.Creator$Delegating: void setDeserializer(org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.NullNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter typedWriter(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void <init>(java.util.HashSet,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.GlobalInfo: float getcHeight1()>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getLast()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getCardNum()>",
            "<org.codehaus.jackson.JsonParser: boolean getBooleanValue()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.AnnotationMap: void add(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.AnnotatedElement getAnnotated()>",
            "<org.codehaus.jackson.node.IntNode: java.math.BigInteger getBigIntegerValue()>",
            "<org.codehaus.jackson.map.ObjectMapper: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,java.lang.Class)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findJaxbSpecifiedPropertyName(java.beans.PropertyDescriptor)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: java.lang.IllegalArgumentException reportInvalidChar(org.codehaus.jackson.Base64Variant,int,int)>",
            "<org.codehaus.jackson.node.ContainerNode$NoStringsIterator: java.lang.String next()>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: void setLocation(org.codehaus.jackson.JsonLocation)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void a(int,org.codehaus.jackson.org.objectweb.asm.Label)>",
            "<com.turntable.gk.UpdateAPK: void <init>(android.app.Activity,java.lang.String,android.os.Handler)>",
            "<com.turntable.gk.date.LoginRes$Body: void setBindedEmail(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPageUrl()>",
            "<org.codehaus.jackson.map.util.LinkedNode: java.lang.Object value()>",
            "<com.turntable.gk.GameDubo: void shadow12(android.graphics.Canvas)>",
            "<org.codehaus.jackson.node.TextNode: void appendQuoted(java.lang.StringBuilder,java.lang.String)>",
            "<com.turntable.gk.App: android.app.Activity getActivity()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeNumber(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter writer()>",
            "<org.codehaus.jackson.JsonNode: boolean getValueAsBoolean()>",
            "<org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object constructDefaultInstance()>",
            "<org.codehaus.jackson.map.ser.impl.StringCollectionSerializer: void serialize(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[])>",
            "<org.codehaus.jackson.smile.SmileUtil: int zigzagEncode(int)>",
            "<com.turntable.gk.GameDubo$1: void run()>",
            "<org.codehaus.jackson.org.objectweb.asm.Edge: void <init>()>",
            "<org.codehaus.jackson.map.ObjectWriter: byte[] writeValueAsBytes(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: java.lang.Object findFilterId(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void set(java.lang.Object,java.lang.Object)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: java.lang.IllegalArgumentException reportInvalidChar(org.codehaus.jackson.Base64Variant,char,int)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.Class getRawType()>",
            "<com.turntable.gk.common.util.NewcoJsonUtil: com.turntable.gk.common.util.NewcoJsonUtil getInstance()>",
            "<org.codehaus.jackson.map.util.EnumValues: java.util.Collection values()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.JsonEncoding findEncoding(javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap)>",
            "<org.codehaus.jackson.type.JavaType: java.lang.String containedTypeName(int)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<com.turntable.gk.bean.paybean.SdkRes: void <init>()>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.NumericNode numberNode(double)>",
            "<com.turntable.gk.SelectGlod$4: void <init>(com.turntable.gk.SelectGlod,java.lang.String,java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getProductId()>",
            "<org.codehaus.jackson.map.deser.EnumSetDeserializer: void <init>(org.codehaus.jackson.map.deser.EnumResolver)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NumericNode numberNode(byte)>",
            "<com.turntable.gk.GlobalInfo: boolean isconnection()>",
            "<com.turntable.gk.App: java.util.HashMap postParams()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.String _locateTypeId(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>",
            "<org.codehaus.jackson.node.DoubleNode: java.math.BigInteger getBigIntegerValue()>",
            "<org.codehaus.jackson.smile.SmileParser$Feature: int getMask()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.node.ObjectNode createObjectNode()>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor visitInterface()>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitLdcInsn(java.lang.Object)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeNull()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$SqlDateDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.ArrayNode: void _insert(int,org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(char[],int,int)>",
            "<org.codehaus.jackson.map.ser.MapSerializer: java.util.HashSet toSet(java.lang.String[])>",
            "<com.turntable.gk.common.json.dao.response.BaseResponseBean: void setSt(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeEndObject()>",
            "<com.weibopay.impl.OrderInfo: void <init>()>",
            "<com.turntable.gk.SelectGlod: com.turntable.gk.BackgroundThread getListeningRefresh()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$UUIDDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,java.lang.Throwable)>",
            "<org.codehaus.jackson.map.DeserializerFactory: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$FloatArraySerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.PropertyBuilder: java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.io.InputStream)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int nextByte()>",
            "<org.codehaus.jackson.io.MergedStream: long skip(long)>",
            "<org.codehaus.jackson.map.ObjectMapper$2: void <clinit>()>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int)>",
            "<com.turntable.gk.BackgroundThread: void <init>()>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase$1: void <clinit>()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setCardIssuer(java.lang.String)>",
            "<org.codehaus.jackson.node.NullNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: void <init>(org.codehaus.jackson.JsonNode,org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: void <init>(org.codehaus.jackson.io.IOContext,byte[],int,int)>",
            "<org.codehaus.jackson.map.ObjectMapper$DefaultTyping: void <clinit>()>",
            "<com.turntable.gk.App: void setActivity(android.app.Activity)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$CurrencyDeserializer: java.util.Currency _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.ContainerNode$NoStringsIterator: void remove()>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishRawBinary()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getName()>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void write(byte[],int,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.AnnotationWriter: void a(org.codehaus.jackson.org.objectweb.asm.ByteVector)>",
            "<org.codehaus.jackson.map.ser.SerializerBase: void <init>(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void <clinit>()>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void writeStartObject(org.codehaus.jackson.JsonGenerator)>",
            "<com.turntable.gk.date.LoginRes$CardList: void setBankName(java.lang.String)>",
            "<com.weibopay.impl.PreparePay: android.content.Context access$7(com.weibopay.impl.PreparePay)>",
            "<org.codehaus.jackson.map.ser.NullSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser configure(org.codehaus.jackson.JsonParser$Feature,boolean)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$CollectionSerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.impl.JsonReadContext: void setCurrentName(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.io.NumberOutput: int outputLong(long,byte[],int)>",
            "<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonToken endToken()>",
            "<org.codehaus.jackson.map.type.MapType: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.JsonNode: boolean isTextual()>",
            "<org.codehaus.jackson.smile.SmileParser: void _releaseBuffers()>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: int getIndex()>",
            "<org.codehaus.jackson.sym.Name3: boolean equals(int[],int)>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase: void init(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.SerializationConfig$Feature: boolean enabledByDefault()>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>",
            "<com.turntable.gk.common.json.dao.response.Game: void setSize(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name findName(int,int,int)>",
            "<com.turntable.gk.SelectGlod: com.turntable.gk.SelectGlod access$5()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: java.lang.Object getEmbeddedObject()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.PrettyPrinter _defaultPrettyPrinter()>",
            "<com.turntable.gk.bean.DrawCashRes$Card: void setLast(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: boolean maybeDirty()>",
            "<com.turntable.gk.TestGame: void restoreBackgroundResource()>",
            "<org.codehaus.jackson.node.BinaryNode: org.codehaus.jackson.node.BinaryNode valueOf(byte[],int,int)>",
            "<org.codehaus.jackson.map.type.TypeParser: void <init>(org.codehaus.jackson.map.type.TypeFactory)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.jaxrs.Annotations[])>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.String getName()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _fromType(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<com.turntable.gk.bean.VirtualCreditCard: void setLogoUrl(java.lang.String)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: boolean isJsonType(javax.ws.rs.core.MediaType)>",
            "<org.codehaus.jackson.map.deser.CustomDeserializerFactory: void addMixInAnnotationMapping(java.lang.Class,java.lang.Class)>",
            "<com.turntable.gk.SelectGlod: void access$1(com.turntable.gk.SelectGlod,int,android.widget.ImageView[],int)>",
            "<com.turntable.gk.date.UploadLogRes: void <init>()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: org.codehaus.jackson.JsonToken resetInt(boolean,int)>",
            "<com.weibopay.http.SNetworkProxy$2: void <init>(com.weibopay.http.SNetworkProxy,java.lang.String,com.weibopay.http.SNetworkCallBack,java.lang.String)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: org.codehaus.jackson.map.AnnotationIntrospector _resolveIntrospectors(org.codehaus.jackson.jaxrs.Annotations[])>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor visitReturnType()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeString(java.lang.String)>",
            "<org.codehaus.jackson.xc.XmlAdapterJsonDeserializer: void <clinit>()>",
            "<org.codehaus.jackson.util.TextBuffer: void clearSegments()>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: void <init>(org.codehaus.jackson.annotate.JsonAutoDetect)>",
            "<org.codehaus.jackson.node.BaseJsonNode: java.util.List findValuesAsText(java.lang.String,java.util.List)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void visitAttribute(org.codehaus.jackson.org.objectweb.asm.Attribute)>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView: org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode valueOf(boolean)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: void configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: org.codehaus.jackson.JsonLocation getCurrentLocation()>",
            "<org.codehaus.jackson.JsonGenerator: void writeNumberField(java.lang.String,int)>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter: void <init>()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPayerName()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: org.codehaus.jackson.map.AnnotationIntrospector _resolveIntrospector(org.codehaus.jackson.jaxrs.Annotations)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$AsArraySerializer: void <init>(java.lang.Class,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.util.CharTypes: int[] getInputCodeLatin1JsNames()>",
            "<org.codehaus.jackson.node.IntNode: java.lang.Number getNumberValue()>",
            "<org.codehaus.jackson.map.util.JSONPObject: void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: void setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<com.turntable.gk.UpdateAPK$3: void run()>",
            "<org.codehaus.jackson.JsonParser: int releaseBuffered(java.io.Writer)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: void resetUntyped(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.node.BooleanNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.common.json.dao.response.BaseResponseBean: void setErrmsg(java.lang.String)>",
            "<org.codehaus.jackson.annotate.JsonAutoDetect$1: void <clinit>()>",
            "<com.turntable.gk.bean.VirtualCreditCard: void setActivated(int)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileFactory disable(org.codehaus.jackson.smile.SmileGenerator$Feature)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$ShortDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String okNameForIsGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addMethodMixIns(org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.type.CollectionType: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void visitInnerClassType(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeRawUTF8String(byte[],int,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.Item: void a(int)>",
            "<org.codehaus.jackson.org.objectweb.asm.Item: void <init>(int,org.codehaus.jackson.org.objectweb.asm.Item)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers: org.codehaus.jackson.map.ser.ContainerSerializerBase iteratorSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.ArrayNode: void insert(int,float)>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(java.lang.reflect.Type)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: void _setAnnotations(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.jaxrs.Annotations[])>",
            "<com.turntable.gk.SelectGlod: void startAppPayOld(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$1: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void convertNumberToBigDecimal()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter: void <init>()>",
            "<com.turntable.gk.bean.RequestDepositRes: void <init>()>",
            "<org.codehaus.jackson.io.IOContext: byte[] allocWriteEncodingBuffer()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeFieldName(java.lang.String)>",
            "<com.turntable.gk.Tools$1: void onClick(android.content.DialogInterface,int)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode putAll(java.util.Map)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$StackTraceElementDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void <init>()>",
            "<org.codehaus.jackson.node.ObjectNode$NoFieldsIterator: java.util.Map$Entry next()>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer _findCachedDeserializer(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.type.JavaType getType()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$LongArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void _reportInvalidEOF(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileParser$Feature: org.codehaus.jackson.smile.SmileParser$Feature[] values()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getDeclaringClass()>",
            "<org.codehaus.jackson.io.IOContext: org.codehaus.jackson.JsonEncoding getEncoding()>",
            "<com.turntable.gk.SelectGlod: java.lang.String access$19(com.turntable.gk.SelectGlod)>",
            "<com.turntable.gk.SelectGlod$2: void onClick(android.view.View)>",
            "<org.codehaus.jackson.map.ObjectMapper$1: void addSerializers(org.codehaus.jackson.map.Serializers)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setSerializerProvider(org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ext.DOMDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeTree(org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.node.ObjectNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getMD5KeyProperty()>",
            "<org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder: org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _resolveVariableViaSubTypes(org.codehaus.jackson.map.type.HierarchicType,java.lang.String,org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver: org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void write(byte[])>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$NumberDeserializer: java.lang.Number deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$DoubleArraySerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.PropertyValue$Any: void <init>(org.codehaus.jackson.map.deser.PropertyValue,java.lang.Object,org.codehaus.jackson.map.deser.SettableAnyProperty,java.lang.String)>",
            "<com.turntable.gk.common.json.dao.request.GameGetRq: java.lang.String getToken()>",
            "<org.codehaus.jackson.node.POJONode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.JsonStreamContext getParent()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable ignoredFields()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.common.json.dao.request.TopUpRq: java.lang.String getPayType()>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.BooleanNode booleanNode(boolean)>",
            "<com.turntable.gk.SelectGlod: android.webkit.WebView access$10(com.turntable.gk.SelectGlod)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$IntDeser: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.GameDubo: void run()>",
            "<com.turntable.gk.SelectGlod: void initWebView()>",
            "<org.codehaus.jackson.node.ValueNode: boolean isValueNode()>",
            "<com.turntable.gk.common.json.dao.request.ThanSize: void <init>()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getSignMsg()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: java.lang.String buildSetterName(java.lang.String)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.ContainerNode$NoStringsIterator: void <clinit>()>",
            "<org.codehaus.jackson.node.BinaryNode: void <init>(byte[],int,int)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer buildIterableSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeStringSegments(java.lang.String)>",
            "<com.turntable.gk.common.json.dao.response.Game: void setOrderStatus(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name _parseFieldName(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider: void <init>(org.codehaus.jackson.jaxrs.Annotations[])>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.type.JavaType _narrow(java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(int)>",
            "<org.codehaus.jackson.Base64Variant: char encodeBase64BitsAsChar(int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$StackTraceElementDeserializer: java.lang.StackTraceElement deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.io.SerializedString: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.node.ObjectNode: void put(java.lang.String,byte[])>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.ser.impl.PropertySerializerMap emptyMap()>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.text.DateFormat getBlueprintRFC1123Format()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: double parseDouble(java.lang.String)>",
            "<com.turntable.gk.FruitbuttonbarView: void draw(android.graphics.Canvas)>",
            "<org.codehaus.jackson.xc.DataHandlerJsonDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdScalarDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: void <init>(org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer findSerializerByPrimaryType(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.NumericNode numberNode(short)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _finishString2(char[],int)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int)>",
            "<com.turntable.gk.TestGame: void access$8(com.turntable.gk.TestGame,long)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void _wrapError(java.lang.String,java.lang.Throwable)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: void _reportSelfReference(java.lang.Object)>",
            "<org.codehaus.jackson.node.TextNode: double getValueAsDouble(double)>",
            "<com.turntable.gk.GlobalInfo: int getTurn1(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: java.lang.UnsupportedOperationException _notSupported()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$EnumSetSerializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.JsonStreamContext: boolean inRoot()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>",
            "<com.turntable.gk.common.json.dao.response.Game: java.lang.String getOrderInfo()>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode get(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.node.MissingNode: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$NumberDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: int b(org.codehaus.jackson.org.objectweb.asm.ClassWriter,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config)>",
            "<com.turntable.gk.common.util.payTools.RequestParameterUtil: java.lang.String getSign(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType mapType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializers: org.codehaus.jackson.map.KeyDeserializer findStringBasedKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.type.JavaType getType()>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.ObjectWriter: void writeValue(java.io.Writer,java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty: void set(java.lang.Object,java.lang.Object)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: boolean hasSerializerModifiers()>",
            "<org.codehaus.jackson.smile.SmileGenerator$Feature: void <init>(java.lang.String,int,boolean)>",
            "<org.codehaus.jackson.node.ContainerNode: void <init>(org.codehaus.jackson.node.JsonNodeFactory)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$URLDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.impl.StringCollectionSerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.SelectGlod: void access$18(com.turntable.gk.SelectGlod,java.lang.String)>",
            "<com.turntable.gk.GlobalInfo: void setsaveSdk(java.lang.String,int)>",
            "<com.turntable.gk.SelectGlod: void access$21(com.turntable.gk.SelectGlod,java.lang.String)>",
            "<com.turntable.gk.AlertDialogView$3: void onClick(android.view.View)>",
            "<org.codehaus.jackson.map.TypeDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$TokenBufferSerializer: void <init>()>",
            "<org.codehaus.jackson.map.module.SimpleSerializers: void addSerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: int a(int,char[],boolean,org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor)>",
            "<org.codehaus.jackson.smile.SmileParser: org.codehaus.jackson.smile.SmileBufferRecycler _smileBufferRecycler()>",
            "<com.turntable.gk.SelectGlod: int getPayMoney()>",
            "<com.turntable.gk.SelectGlod$3: void <init>(com.turntable.gk.SelectGlod,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.JsonNode: boolean isContainerNode()>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getVersion()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Long _parseLong(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void <init>(int)>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class,org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode readTree(java.io.InputStream)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: java.lang.String _parseApostropheFieldName()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDateTime(org.joda.time.ReadablePartial)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.JsonNode: boolean getValueAsBoolean(boolean)>",
            "<com.turntable.gk.net.SNetworkTask: com.turntable.gk.net.SNetworkTask getSNetworkTask()>",
            "<org.codehaus.jackson.map.deser.PropertyValueBuffer: java.lang.Object[] getParameters(java.lang.Object[])>",
            "<org.codehaus.jackson.util.TokenBuffer$Segment: void set(int,org.codehaus.jackson.JsonToken,java.lang.Object)>",
            "<org.codehaus.jackson.smile.SmileConstants: void <clinit>()>",
            "<org.codehaus.jackson.map.type.MapType: java.lang.String buildCanonicalName()>",
            "<org.codehaus.jackson.node.ValueNode: org.codehaus.jackson.JsonNode path(java.lang.String)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser$1: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: short readShort(int)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void visitFormalTypeParameter(java.lang.String)>",
            "<com.turntable.gk.AlertDialogView$1: void onClick(android.view.View)>",
            "<org.codehaus.jackson.map.introspect.Annotated: boolean isPublic()>",
            "<org.codehaus.jackson.xc.DataHandlerJsonSerializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$FileSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$PropertyDescriptors: java.beans.PropertyDescriptor findByPropertyName(java.lang.String)>",
            "<org.codehaus.jackson.io.UTF8Writer: void write(java.lang.String)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeIdResolver idResolver(org.codehaus.jackson.type.JavaType,java.util.Collection,boolean,boolean)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: int getOr()>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.io.IOContext: java.lang.Object getSourceReference()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: boolean hasCurrentToken()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.type.JavaType: java.lang.String getErasedSignature()>",
            "<org.codehaus.jackson.JsonFactory: void disableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NumericNode numberNode(double)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: void <clinit>()>",
            "<org.codehaus.jackson.map.ext.OptionalHandlerFactory: java.lang.Object instantiate(java.lang.String)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.DeserializationConfig$Feature: void <init>(java.lang.String,int,boolean)>",
            "<org.codehaus.jackson.map.util.StdDateFormat: boolean looksLikeISO8601(java.lang.String)>",
            "<org.codehaus.jackson.node.BinaryNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature: int getMask()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethodMap: java.util.Iterator iterator()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer: void serialize(java.lang.Integer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.date.LoginRes: com.turntable.gk.date.LoginRes$Body getBody()>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser _createJsonParser(java.io.Reader,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void visitInnerClass(java.lang.String,java.lang.String,java.lang.String,int)>",
            "<com.turntable.gk.GameDubo: void shadow4(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$LocaleDeserializer: java.util.Locale _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<com.turntable.gk.TestGame$ExitListenerReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getProductDesc()>",
            "<org.codehaus.jackson.annotate.JsonMethod: boolean fieldEnabled()>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeNumber(float)>",
            "<org.codehaus.jackson.Base64Variant: int getMaxLineLength()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$LongKD: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.GameDubo: boolean thansizeclick()>",
            "<org.codehaus.jackson.map.BeanProperty$Std: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.impl.ReaderBasedParserBase: void _releaseBuffers()>",
            "<com.turntable.gk.common.json.dao.request.GameStartRq: void setToken(java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.Base64Variant getBase64Variant()>",
            "<com.turntable.gk.SelectGlod: void onActivityResult(int,int,android.content.Intent)>",
            "<org.codehaus.jackson.JsonGenerator$Feature: int getMask()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider getSerializerProvider()>",
            "<org.codehaus.jackson.map.deser.CollectionDeserializer: java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection)>",
            "<org.codehaus.jackson.map.ObjectReader: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$EnumSetSerializer: void serializeContents(java.util.EnumSet,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.JsonToken _handleUnexpectedValue(int)>",
            "<org.codehaus.jackson.JsonNode: org.codehaus.jackson.JsonNode getElementValue(int)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: org.joda.time.ReadableInstant deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.TextNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.weibopay.impl.RequestInfo: java.lang.String getOperationType()>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.JsonParser: double getValueAsDouble()>",
            "<org.codehaus.jackson.node.ObjectNode: void put(java.lang.String,java.math.BigDecimal)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.'annotation'.Annotation findFieldAnnotation(java.lang.Class,java.lang.Class,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.EnumResolver: org.codehaus.jackson.map.deser.EnumResolver constructFor(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.smile.SmileParser: java.lang.String _decodeShortAsciiName(int)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getBalance()>",
            "<com.turntable.gk.GameDubo: boolean getIsStart()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: void setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker()>",
            "<org.codehaus.jackson.map.deser.PropertyValue: void <init>(org.codehaus.jackson.map.deser.PropertyValue,java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.MapSerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode createObjectNode()>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.lang.Object clone()>",
            "<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType findType(java.lang.String)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription: int getReturnOpcode()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _slowUTF8Encode(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$LocaleDeserializer: void <init>()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeStartArray()>",
            "<org.codehaus.jackson.Version: int compareTo(java.lang.Object)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<com.turntable.gk.net.RequestInfo: java.lang.String getOperationType()>",
            "<org.codehaus.jackson.node.ObjectNode$NoFieldsIterator: void <clinit>()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector create(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.smile.SmileFactory: java.io.Writer _createWriter(java.io.OutputStream,org.codehaus.jackson.JsonEncoding,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.map.BeanProperty$Std: java.lang.'annotation'.Annotation getContextAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _verifyPrettyValueWrite(java.lang.String,int)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.HierarchicType _findSuperTypeChain(java.lang.Class,java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitIincInsn(int,int)>",
            "<org.codehaus.jackson.node.POJONode: int getValueAsInt(int)>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.reflect.Constructor findDefaultConstructor()>",
            "<org.codehaus.jackson.map.util.JSONWrappedObject: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withPrettyPrinter(org.codehaus.jackson.PrettyPrinter)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setMerchantIdentityType(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.impl.TimeZoneSerializer: void <clinit>()>",
            "<com.turntable.gk.TestGame$3: boolean onTouch(android.view.View,android.view.MotionEvent)>",
            "<org.codehaus.jackson.JsonEncoding: java.lang.String getJavaName()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.JsonLocation: int getLineNr()>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: void setPa(int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.util.TokenBuffer$Segment: org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$CreatorProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedParameter,int)>",
            "<com.turntable.gk.net.NetManage: void <init>()>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.TextNode textNode(java.lang.String)>",
            "<org.codehaus.jackson.JsonParser: void <init>(int)>",
            "<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.map.type.TypeBindings childInstance()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: java.util.Collection allIntrospectors(java.util.Collection)>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeNull()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$DoubleDeser: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.xc.XmlAdapterJsonSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.deser.EnumMapDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$Body: void setCreditAcctEnabled(int)>",
            "<org.codehaus.jackson.map.ext.DOMSerializer: void <init>()>",
            "<org.codehaus.jackson.map.TreeMapper: void writeTree(org.codehaus.jackson.JsonNode,java.io.File)>",
            "<org.codehaus.jackson.node.BigIntegerNode: boolean isBigInteger()>",
            "<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeRaw(char[],int,int)>",
            "<com.turntable.gk.TestGame: boolean isBet()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.DateDeserializer: java.util.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.io.UTF8Writer: void <init>(org.codehaus.jackson.io.IOContext,java.io.OutputStream)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: int a(java.lang.String,int)>",
            "<com.turntable.gk.bean.RequestInfo: com.turntable.gk.bean.RequestInfo[] values()>",
            "<org.codehaus.jackson.map.type.TypeBase: java.lang.String toCanonical()>",
            "<org.codehaus.jackson.JsonParser: boolean isEnabled(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.map.ser.impl.SimpleFilterProvider: void <init>(java.util.Map)>",
            "<org.codehaus.jackson.node.ArrayNode: void add(boolean)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$StringArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.io.UTF8Writer: void write(char[],int,int)>",
            "<org.codehaus.jackson.map.ext.OptionalHandlerFactory: void <init>()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer: void <init>(org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.CollectionDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<com.weibopay.http.SNetworkProxy$1: void <init>(com.weibopay.http.SNetworkProxy,java.lang.String,com.weibopay.http.SNetworkCallBack,java.lang.String,java.util.HashMap,java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void a(int,int,int)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.net.URL,java.lang.Class)>",
            "<org.codehaus.jackson.io.MergedStream: void close()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: java.lang.String a(int,int,char[])>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setMerchantAcctId(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.TypeSerializer findPropertyTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedWithParams: void <init>(org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>",
            "<org.codehaus.jackson.map.ser.JdkSerializers: void <init>()>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: void <init>(java.util.Collection)>",
            "<org.codehaus.jackson.node.ContainerNode$NoNodesIterator: org.codehaus.jackson.node.ContainerNode$NoNodesIterator instance()>",
            "<com.turntable.gk.common.json.dao.request.Fruits: int getPa()>",
            "<org.codehaus.jackson.map.introspect.MemberKey: void <init>(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: int getTextOffset()>",
            "<org.codehaus.jackson.io.IOContext: char[] allocConcatBuffer()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers: void <init>()>",
            "<com.turntable.gk.UpdateAPK: void doDownloadTheFile(java.lang.String)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.Name getEmptyName()>",
            "<org.codehaus.jackson.org.objectweb.asm.Attribute: boolean isUnknown()>",
            "<org.codehaus.jackson.map.type.HierarchicType: java.lang.Class getRawClass()>",
            "<org.codehaus.jackson.map.ObjectWriter: void writeValue(java.io.OutputStream,java.lang.Object)>",
            "<org.codehaus.jackson.node.DecimalNode: boolean isFloatingPointNumber()>",
            "<com.turntable.gk.date.LoginRes$CardList: void setCardNick(java.lang.String)>",
            "<org.codehaus.jackson.JsonEncoding: void <clinit>()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _fromArrayType(java.lang.reflect.GenericArrayType,org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: boolean hasAnyGetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeString(org.codehaus.jackson.SerializableString)>",
            "<com.turntable.gk.bean.DrawCashRes$Card: void setShowInfo(java.lang.String)>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.type.JavaType narrowKey(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.CustomSerializerFactory: void addGenericMapping(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.smile.SmileParser: org.codehaus.jackson.JsonToken nextToken()>",
            "<org.codehaus.jackson.map.type.SimpleType: int containedTypeCount()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$StringArraySerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.node.ArrayNode: void add(long)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.Base64Variant: int encodeBase64Chunk(int,char[],int)>",
            "<org.codehaus.jackson.JsonParseException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: void flush()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes: void setBody(com.turntable.gk.date.GetPkPassGroupListRes$Body)>",
            "<com.turntable.gk.common.util.payTools.RequestParameterUtil: void <init>()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.TestGame: int access$24(com.turntable.gk.TestGame,java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: int c(byte[],int)>",
            "<org.codehaus.jackson.node.NumericNode: double getValueAsDouble()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: void <init>(java.io.InputStream)>",
            "<com.turntable.gk.R: void <init>()>",
            "<org.codehaus.jackson.map.ObjectMapper: void registerModule(org.codehaus.jackson.map.Module)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicLongSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.type.MapType: int containedTypeCount()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitLookupSwitchInsn(org.codehaus.jackson.org.objectweb.asm.Label,int[],org.codehaus.jackson.org.objectweb.asm.Label[])>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.SerializerProvider: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileParser: void _decodeLongUnicode()>",
            "<com.turntable.gk.common.json.dao.response.Game: void setOrderId(java.lang.String)>",
            "<org.codehaus.jackson.map.JsonSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.io.IOContext: org.codehaus.jackson.util.TextBuffer constructTextBuffer()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer: void serialize(org.joda.time.DateMidnight,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$StringSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$EnumSetSerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory)>",
            "<org.codehaus.jackson.io.JsonStringEncoder: int _convertSurrogate(int,int)>",
            "<org.codehaus.jackson.node.ArrayNode: void insert(int,double)>",
            "<com.turntable.gk.common.util.NewcoJsonUtil: java.lang.Object getJsonValue(java.lang.String,org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.Base64Variants: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: void b(org.codehaus.jackson.org.objectweb.asm.Label,long,int)>",
            "<com.turntable.gk.GlobalInfo: void setsave(java.lang.String,int)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer: org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()>",
            "<org.codehaus.jackson.JsonGenerator: void writeNumberField(java.lang.String,long)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.JsonMappingException: void prependPath(java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: void serializeWithType(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: short _parseShortPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.type.MapType: boolean isContainerType()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: void flushCachedDeserializers()>",
            "<org.codehaus.jackson.org.objectweb.asm.Item: void a(int,java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPlatformId()>",
            "<org.codehaus.jackson.JsonNode: boolean isMissingNode()>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.introspect.BasicBeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ShortArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode path(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider enable(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.node.ObjectNode: boolean isObject()>",
            "<com.weibopay.impl.RequestInfo: void <clinit>()>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String)>",
            "<org.codehaus.jackson.map.type.TypeBindings: org.codehaus.jackson.type.JavaType[] typesAsArray()>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getWbImg()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void close()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes: void <init>()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder: float[] _constructArray(int)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: java.lang.Appendable append(java.lang.CharSequence,int,int)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitJumpInsn(int,org.codehaus.jackson.org.objectweb.asm.Label)>",
            "<org.codehaus.jackson.map.ext.DOMDeserializer: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: void _throwAsIOE(java.lang.Exception,java.lang.Object)>",
            "<org.codehaus.jackson.type.JavaType: boolean isThrowable()>",
            "<org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: void <init>(java.util.Set)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.String findEnumValue(java.lang.Enum)>",
            "<com.turntable.gk.common.util.payTools.RequestParameterUtil: boolean checkSign(java.lang.String,java.lang.String,java.lang.String)>",
            "<com.turntable.gk.GlobalInfo: int getTurnConversion(int)>",
            "<org.codehaus.jackson.node.DecimalNode: org.codehaus.jackson.node.DecimalNode valueOf(java.math.BigDecimal)>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: void setReleaseNotes(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPid()>",
            "<com.turntable.gk.common.json.dao.request.GameStartRq: com.turntable.gk.common.json.dao.request.Fruits getFruits()>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.String canBeABeanType(java.lang.Class)>",
            "<org.codehaus.jackson.impl.JsonParserBase: long getTokenCharacterOffset()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$ShortDeser: short[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicIntegerSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.util.LinkedNode getProblemHandlers()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: byte[] _decodeBase64(org.codehaus.jackson.Base64Variant)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.DeserializationConfig,java.util.HashMap,org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<org.codehaus.jackson.map.ser.SerializerCache: void addNonTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.jaxrs.JsonParseExceptionMapper: void <init>()>",
            "<com.turntable.gk.bean.PayConfig: void <init>()>",
            "<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleModule addSerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder: java.lang.Object completeAndClearBuffer(java.lang.Object,int)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonGenerator _createJsonGenerator(java.io.Writer,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType[] values()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addMemberMethods(java.lang.Class,org.codehaus.jackson.map.introspect.MethodFilter,org.codehaus.jackson.map.introspect.AnnotatedMethodMap,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethodMap)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: void <init>(byte[],int,int)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket: java.lang.String find(char[],int,int)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeFieldName(org.codehaus.jackson.io.SerializedString)>",
            "<org.codehaus.jackson.JsonFactory: boolean isEnabled(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: java.lang.String _desc(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$AtomicBooleanDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: boolean a(long)>",
            "<org.codehaus.jackson.node.ObjectNode$NoFieldsIterator: java.lang.Object next()>",
            "<com.weibopay.http.RequestInfo: com.weibopay.http.RequestInfo valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.CustomSerializerFactory: void setEnumSerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.io.IOContext _createContext(java.lang.Object,boolean)>",
            "<org.codehaus.jackson.org.objectweb.asm.FieldWriter: void <init>(org.codehaus.jackson.org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: int getCreatorIndex()>",
            "<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>",
            "<com.turntable.gk.SelectGlod$JsToJava: void <init>(com.turntable.gk.SelectGlod)>",
            "<com.turntable.gk.SelectGlod$9: void onclick()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer: java.lang.Boolean deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.map.SerializerFactory: org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.Base64Variant: java.lang.String toString()>",
            "<org.codehaus.jackson.map.deser.CustomDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: int a(int,char[],java.lang.String,org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ShortArraySerializer: void <init>(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.node.ObjectNode findParent(java.lang.String)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeBoolean(boolean)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$PatternDeserializer: void <init>()>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode putAll(org.codehaus.jackson.node.ObjectNode)>",
            "<org.codehaus.jackson.smile.SmileGenerator: org.codehaus.jackson.smile.SmileGenerator disable(org.codehaus.jackson.smile.SmileGenerator$Feature)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitMultiANewArrayInsn(java.lang.String,int)>",
            "<org.codehaus.jackson.map.SerializationConfig: void setDateFormat(java.text.DateFormat)>",
            "<com.weibopay.impl.PreparePay$1: void handleMessage(android.os.Message)>",
            "<org.codehaus.jackson.map.type.TypeParser: java.lang.Class findClass(java.lang.String,org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.codehaus.jackson.org.objectweb.asm.Label,org.codehaus.jackson.org.objectweb.asm.Label,int)>",
            "<org.codehaus.jackson.util.TextBuffer: void expand(int)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,java.lang.Class)>",
            "<org.codehaus.jackson.io.NumberOutput: int outputFullTriplet(int,byte[],int)>",
            "<org.codehaus.jackson.node.TextNode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.type.TypeReference: int compareTo(org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: org.codehaus.jackson.map.BeanProperty getProperty()>",
            "<org.codehaus.jackson.io.IOContext: char[] allocTokenBuffer()>",
            "<org.codehaus.jackson.util.TokenBuffer: void flush()>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.util.List getStaticMethods()>",
            "<org.codehaus.jackson.org.objectweb.asm.AnnotationWriter: void <init>(org.codehaus.jackson.org.objectweb.asm.ClassWriter,boolean,org.codehaus.jackson.org.objectweb.asm.ByteVector,org.codehaus.jackson.org.objectweb.asm.ByteVector,int)>",
            "<com.turntable.gk.BaseActivity: void netRequestErr(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object removeInternalSetting(java.lang.Object)>",
            "<org.codehaus.jackson.JsonGenerator: void writeBinary(byte[],int,int)>",
            "<org.codehaus.jackson.node.ArrayNode: void add(org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NumericNode numberNode(short)>",
            "<org.codehaus.jackson.util.TextBuffer: char[] getCurrentSegment()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void a(java.lang.Object)>",
            "<org.codehaus.jackson.io.MergedStream: int read(byte[])>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper enableDefaultTyping()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getGenericType()>",
            "<org.codehaus.jackson.map.deser.DateDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: java.lang.String getClassName()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.Class getRawType()>",
            "<org.codehaus.jackson.map.JsonSerializer$None: void <init>()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper disableDefaultTyping()>",
            "<com.turntable.gk.AppInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>",
            "<com.turntable.gk.TestGame: com.turntable.gk.TestGame$AlertDialogview access$13(com.turntable.gk.TestGame,java.lang.String)>",
            "<org.codehaus.jackson.node.TextNode: int getValueAsInt(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonParser$Feature,boolean)>",
            "<org.codehaus.jackson.map.module.SimpleDeserializers: org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.node.DoubleNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ArrayDeserializer: void <clinit>()>",
            "<com.turntable.gk.TestGame$4: void handleMessage(android.os.Message)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer: java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParseException _constructError(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: boolean isClosed()>",
            "<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextValue()>",
            "<org.codehaus.jackson.map.ser.SerializerCache: void <init>()>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addIntConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: void <init>(int,char[],int,int)>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: void serializeContentsUsing(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPid(java.lang.String)>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.date.LoginRes: void setBody(com.turntable.gk.date.LoginRes$Body)>",
            "<org.codehaus.jackson.map.type.ArrayType: java.lang.String containedTypeName(int)>",
            "<org.codehaus.jackson.map.deser.impl.StringCollectionDeserializer: java.util.Collection deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: java.lang.reflect.Method getSetter()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setCreators(org.codehaus.jackson.map.deser.CreatorContainer)>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: java.lang.String getCommonSuperClass(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.impl.JsonParserBase: void _handleEOF()>",
            "<org.codehaus.jackson.io.NumberOutput: int outputInt(int,byte[],int)>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void <clinit>()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name slowParseFieldName()>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers: void <init>()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>()>",
            "<com.turntable.gk.TestGame: void requestDeposit(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.node.ObjectNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPlatformSignType(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket: java.lang.String getSymbol()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$LongKD: java.lang.Long _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findDeserializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.map.type.MapType: java.lang.String containedTypeName(int)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.EnumDeserializer: org.codehaus.jackson.map.JsonDeserializer deserializerForCreator(org.codehaus.jackson.map.DeserializationConfig,java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<com.turntable.gk.TestGame$ExitListenerReceiver: void onReceive(android.content.Context,android.content.Intent)>",
            "<org.codehaus.jackson.sym.Name1: org.codehaus.jackson.sym.Name1 getEmptyName()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: int getPkPassType()>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<com.turntable.gk.SelectGlod: int access$2(com.turntable.gk.SelectGlod)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: byte[] getCurrentSegment()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeFieldName(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: org.codehaus.jackson.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator$1: void <clinit>()>",
            "<org.codehaus.jackson.xc.DomElementJsonDeserializer: org.w3c.dom.Element fromNode(org.w3c.dom.Document,org.codehaus.jackson.JsonNode)>",
            "<com.weibopay.http.SNetWork: void <init>()>",
            "<com.turntable.gk.net.SNetWork: void <init>()>",
            "<org.codehaus.jackson.sym.Name2: boolean equals(int)>",
            "<com.turntable.gk.Test$AlertDialogview: android.view.View getView()>",
            "<org.codehaus.jackson.io.NumberInput: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer: void serialize(java.lang.Float,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.VersionUtil: int parseVersionPart(java.lang.String)>",
            "<org.codehaus.jackson.map.type.MapType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: java.lang.String getDescriptor(java.lang.Class)>",
            "<org.codehaus.jackson.io.IOContext: void releaseTokenBuffer(char[])>",
            "<org.codehaus.jackson.map.ser.impl.StringCollectionSerializer: void serializeUsingCustom(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<com.turntable.gk.App: int px2dip(float)>",
            "<org.codehaus.jackson.org.objectweb.asm.AnnotationWriter: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>",
            "<com.turntable.gk.SelectGlod: void onClick(android.view.View)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeNumber(java.math.BigInteger)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object)>",
            "<org.codehaus.jackson.io.UTF8Writer: void write(int)>",
            "<com.turntable.gk.Tools: void showAlertDialog(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.DeserializerProvider withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getExt1()>",
            "<org.codehaus.jackson.node.NodeCursor$Object: org.codehaus.jackson.JsonStreamContext getParent()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.map.type.MapType: java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.map.DeserializationProblemHandler: void <init>()>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$AnnotatedProperty: java.lang.annotation.Annotation[] getDeclaredAnnotations()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void a(int,int)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeString(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: void serializeContents(java.lang.Iterable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: void release()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.date.LoginRes$Body: void setSfzFailedReason(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _skipString()>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor visitExceptionType()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeRawValue(java.lang.String,int,int)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>",
            "<org.codehaus.jackson.map.ser.impl.InetAddressSerializer: void <clinit>()>",
            "<org.codehaus.jackson.util.TextBuffer: void append(char[],int,int)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeBoolean(boolean)>",
            "<org.codehaus.jackson.smile.SmileGenerator$Feature: org.codehaus.jackson.smile.SmileGenerator$Feature valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.Creator$Delegating delegatingCreator()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$LongArraySerializer: void <init>(org.codehaus.jackson.map.TypeSerializer)>",
            "<com.turntable.gk.TestGame: void is_top_up_Refresh(java.lang.String,java.lang.String,java.lang.String)>",
            "<com.turntable.gk.TestGame: java.lang.String access$15(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer: void serialize(java.sql.Time,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.Class getDeclaringClass()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$TokenBufferDeserializer: org.codehaus.jackson.util.TokenBuffer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeNumber(java.math.BigInteger)>",
            "<com.weibopay.impl.Tools: void <init>()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: int getTextOffset()>",
            "<org.codehaus.jackson.node.IntNode: org.codehaus.jackson.node.IntNode valueOf(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: void <clinit>()>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor visitSuperclass()>",
            "<com.turntable.gk.SelectGlod: void access$9(com.turntable.gk.SelectGlod,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer: void serialize(java.sql.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: void setAnnotationsToUse(org.codehaus.jackson.jaxrs.Annotations[])>",
            "<org.codehaus.jackson.impl.JsonReadContext: void reset(int,int,int)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,java.lang.Class)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: void _checkIsNumber()>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void <init>(java.lang.Class,org.codehaus.jackson.map.ser.BeanPropertyWriter[])>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: void <clinit>()>",
            "<org.codehaus.jackson.map.util.ClassUtil: void throwAsIAE(java.lang.Throwable)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$StringSerializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$LongArraySerializer: void serializeContents(long[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.JsonParser$Feature: void <clinit>()>",
            "<com.turntable.gk.common.json.dao.request.GameLoginRq: void setUid(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: void <init>()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeUTF8String(byte[],int,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonParser _createJsonParser(java.io.Reader,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: void setSetter(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.node.JsonNodeFactory)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$FloatArraySerializer: void <init>(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>",
            "<org.codehaus.jackson.node.ArrayNode: boolean isArray()>",
            "<com.turntable.gk.BaseActivity: void sendNotify(java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeNumber(int)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeNumber(java.math.BigInteger)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder: void <init>()>",
            "<com.turntable.gk.GameDubo: void shadow14(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.type.TypeParser: java.lang.IllegalArgumentException _problem(org.codehaus.jackson.map.type.TypeParser$MyTokenizer,java.lang.String)>",
            "<com.turntable.gk.bean.RequestInfo: java.lang.String getName()>",
            "<org.codehaus.jackson.JsonNode: void <clinit>()>",
            "<org.codehaus.jackson.impl.Utf8Generator: int _decodeSurrogate(int,int)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder getByteBuilder()>",
            "<org.codehaus.jackson.JsonParser: boolean isFeatureEnabled(org.codehaus.jackson.JsonParser$Feature)>",
            "<com.turntable.gk.Test: void <init>()>",
            "<com.turntable.gk.common.util.NewcoJsonUtil: java.lang.Object readValue(java.lang.String,java.lang.Class)>",
            "<com.turntable.gk.UpdateAPK: void check()>",
            "<org.codehaus.jackson.map.Deserializers$None: org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$1: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.node.ContainerNode$NoNodesIterator: java.lang.Object next()>",
            "<org.codehaus.jackson.node.MissingNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: int a(org.codehaus.jackson.org.objectweb.asm.ClassWriter,int)>",
            "<org.codehaus.jackson.util.TextBuffer: int size()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder$1: void <clinit>()>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: void linkNext(org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: void <init>(org.codehaus.jackson.map.SerializerFactory$Config)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeStartArray()>",
            "<com.turntable.gk.SelectGlod: void chmod(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int findSize(int)>",
            "<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext reset(int)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setOrderAmount(java.lang.String)>",
            "<com.turntable.gk.SelectGlod: android.widget.PopupWindow getPopWindow(android.view.View)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeBytes(byte,byte,byte,byte,byte,byte)>",
            "<org.codehaus.jackson.map.SerializationConfig: void fromAnnotations(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void <clinit>()>",
            "<com.weibopay.http.SNetworkTask: void <init>(java.lang.String,com.weibopay.http.SNetworkCallBack)>",
            "<org.codehaus.jackson.smile.SmileGenerator: org.codehaus.jackson.JsonGenerator setPrettyPrinter(org.codehaus.jackson.PrettyPrinter)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: void <init>(java.lang.ClassLoader)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$PatternDeserializer: java.util.regex.Pattern _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeRaw(byte)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: java.lang.String getCurrentName()>",
            "<org.codehaus.jackson.node.NodeCursor$Object: java.lang.String getCurrentName()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$AtomicBooleanDeserializer: java.util.concurrent.atomic.AtomicBoolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonGenerator: void writeBinaryField(java.lang.String,byte[])>",
            "<org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: void <init>(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.org.objectweb.asm.AnnotationWriter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: void <init>(org.codehaus.jackson.util.TokenBuffer$Segment,org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.JsonLocation: java.lang.Object getSourceRef()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeEndObject()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _skipUtf8_2(int)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _mediumUTF8Encode(char[],int,int)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: java.io.Writer append(java.lang.CharSequence,int,int)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config getConfig()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicBooleanSerializer: void <init>()>",
            "<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation)>",
            "<org.codehaus.jackson.JsonGenerator: void setFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int _skipWS()>",
            "<org.codehaus.jackson.map.type.ClassKey: int compareTo(java.lang.Object)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$ClassSerializer: void serialize(java.lang.Class,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription setterType()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _matchToken(org.codehaus.jackson.JsonToken)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void convertNumberToLong()>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setUri(java.lang.String)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int[],int)>",
            "<org.codehaus.jackson.node.ArrayNode: java.lang.String toString()>",
            "<org.codehaus.jackson.map.type.ArrayType: java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer: void <init>(org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.node.ObjectNode: void put(java.lang.String,java.lang.String)>",
            "<com.turntable.gk.App: int dip2px(float)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: org.codehaus.jackson.JsonToken _nextAfterName()>",
            "<com.turntable.gk.bean.DrawCashRes$Body: void setBalance(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _flushBuffer()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object convertValue(java.lang.Object,java.lang.Class)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.NumericNode numberNode(int)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.TextNode textNode(java.lang.String)>",
            "<org.codehaus.jackson.JsonFactory: void <init>(org.codehaus.jackson.ObjectCodec)>",
            "<com.weibopay.impl.SdkMinRes$Head: java.lang.String getMsg()>",
            "<com.turntable.gk.UpdateAPK: java.lang.String getMIMEType(java.io.File)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: void <init>(org.codehaus.jackson.sym.Name,org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket)>",
            "<org.codehaus.jackson.util.CharTypes: int[] getInputCodeUtf8JsNames()>",
            "<org.codehaus.jackson.map.util.JSONPObject: void <init>(java.lang.String,java.lang.Object,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$LongDeserializer: void <init>(java.lang.Class,java.lang.Long)>",
            "<org.codehaus.jackson.map.util.ClassUtil: void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setDefDescLine1(java.lang.String)>",
            "<org.codehaus.jackson.io.NumberOutput: void <init>()>",
            "<org.codehaus.jackson.io.UTF8Writer: java.lang.Appendable append(char)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: void set(java.lang.Object,java.lang.String,java.lang.Object)>",
            "<com.turntable.gk.GlobalInfo: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishLong()>",
            "<org.codehaus.jackson.map.util.EnumValues: org.codehaus.jackson.map.util.EnumValues constructFromName(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.util.TokenBuffer$Segment: org.codehaus.jackson.util.TokenBuffer$Segment append(int,org.codehaus.jackson.JsonToken,java.lang.Object)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: int calcHash(int[],int)>",
            "<org.codehaus.jackson.map.deser.impl.StringCollectionDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer,java.lang.reflect.Constructor)>",
            "<org.codehaus.jackson.node.LongNode: boolean isLong()>",
            "<org.codehaus.jackson.map.deser.EnumResolver: org.codehaus.jackson.map.deser.EnumResolver constructUnsafeUsingToString(java.lang.Class)>",
            "<com.turntable.gk.common.json.dao.response.Game: void setWin(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ArrayDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.TestGame$4: void <init>(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.util.TokenBuffer: void <clinit>()>",
            "<com.turntable.gk.TestGame: android.os.Handler getDefaultHandler1()>",
            "<org.codehaus.jackson.JsonNode: boolean isInt()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: void visitSource(java.lang.String,java.lang.String)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getIcon()>",
            "<org.codehaus.jackson.map.SerializationConfig: void setIntrospector(org.codehaus.jackson.map.ClassIntrospector)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<org.codehaus.jackson.node.POJONode: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ObjectMapper: void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[])>",
            "<org.codehaus.jackson.map.DeserializationConfig: void setIntrospector(org.codehaus.jackson.map.ClassIntrospector)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeStartObject()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Class getDeclaringClass()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder: java.lang.Object _constructArray(int)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode findParent(java.lang.String)>",
            "<org.codehaus.jackson.node.NumericNode: int getValueAsInt()>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: int getValueAsInt(int)>",
            "<org.codehaus.jackson.smile.SmileFactory: void <clinit>()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.JsonLocation: int getColumnNr()>",
            "<org.codehaus.jackson.org.objectweb.asm.Attribute: org.codehaus.jackson.org.objectweb.asm.ByteVector write(org.codehaus.jackson.org.objectweb.asm.ClassWriter,byte[],int,int,int)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ObjectMapper$1: void addDeserializers(org.codehaus.jackson.map.Deserializers)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeStringField(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)>",
            "<com.turntable.gk.GameDubo: void start()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: void setFgColor(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeStringField(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty _findWithEquals(java.lang.String,int)>",
            "<org.codehaus.jackson.node.NumericNode: double getValueAsDouble(double)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedWithParams: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.node.ObjectNode remove(java.util.Collection)>",
            "<org.codehaus.jackson.smile.SmileGenerator$Feature: org.codehaus.jackson.smile.SmileGenerator$Feature[] values()>",
            "<org.codehaus.jackson.map.DeserializationConfig: java.text.DateFormat getDateFormat()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$TokenBufferSerializer: void serialize(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.SelectGlod: void access$22(com.turntable.gk.SelectGlod,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.ser.PropertyBuilder constructPropertyBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addOrReplaceProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,boolean)>",
            "<org.codehaus.jackson.map.ObjectMapper$1: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.map.ObjectMapper)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeFieldName(org.codehaus.jackson.SerializableString,boolean)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult: void <init>(org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.ser.impl.PropertySerializerMap)>",
            "<org.codehaus.jackson.map.type.TypeBase: void <init>(java.lang.Class,int)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addStringConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.deser.PropertyValueBuffer: void bufferAnyProperty(org.codehaus.jackson.map.deser.SettableAnyProperty,java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: void <clinit>()>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void a()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: void setManagedReferenceName(java.lang.String)>",
            "<org.codehaus.jackson.map.ext.OptionalHandlerFactory: boolean hasSupertypeStartingWith(java.lang.Class,java.lang.String)>",
            "<com.turntable.gk.SelectGlod$1: void <init>(com.turntable.gk.SelectGlod,android.widget.ImageView[])>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$TimeZoneDeserializer: void <init>()>",
            "<com.turntable.gk.bean.DrawCashRes$Card: java.lang.String getBankCode()>",
            "<org.codehaus.jackson.smile.Tool: void process(java.lang.String[])>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: java.lang.Iterable arrayAsIterable(java.lang.Object[])>",
            "<com.turntable.gk.TestGame: void <init>()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer: void <clinit>()>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: void <clinit>()>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeRaw(char)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: void serializeContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.JsonNode: boolean isFloatingPointNumber()>",
            "<com.turntable.gk.GameDubo: int getCopyImageChecked()>",
            "<org.codehaus.jackson.smile.SmileParser: int _fourBytesToInt()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>",
            "<com.turntable.gk.SelectGlod$11: long getNextTime()>",
            "<org.codehaus.jackson.org.objectweb.asm.Item: void a(float)>",
            "<org.codehaus.jackson.JsonLocation: void <init>(java.lang.Object,long,int,int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty back(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name _handleUnusualFieldName(int)>",
            "<org.codehaus.jackson.map.ser.SerializerCache: org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: byte[] a(java.io.InputStream)>",
            "<org.codehaus.jackson.io.BaseReader: void close()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeRaw(java.lang.String)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.introspect.AnnotationMap: java.lang.String toString()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setExpiredTime(java.lang.String)>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findEnumType(java.util.EnumMap)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: void clearCurrentToken()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$ShortKD: void <init>()>",
            "<org.codehaus.jackson.sym.NameN: boolean equals(int[],int)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addDelegatingConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>",
            "<org.codehaus.jackson.io.MergedStream: int read()>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeNumber(long)>",
            "<com.turntable.gk.BackgroundThread: void stop()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassGroup: void setGroupId(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker$Std 'with'(org.codehaus.jackson.annotate.JsonAutoDetect)>",
            "<com.turntable.gk.bean.VirtualCreditCard: void setUsed(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.CustomSerializerFactory: void addSpecificMapping(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.NumericNode numberNode(long)>",
            "<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.map.ObjectMapper objectMapper()>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: void write(java.lang.String,int,int)>",
            "<org.codehaus.jackson.type.JavaType: void setTypeHandler(java.lang.Object)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setProductNum(java.lang.String)>",
            "<org.codehaus.jackson.map.SerializationConfig: java.text.DateFormat getDateFormat()>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: void <init>(java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.type.TypeFactory: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: org.codehaus.jackson.org.objectweb.asm.Label readLabel(int,org.codehaus.jackson.org.objectweb.asm.Label[])>",
            "<com.turntable.gk.R$layout: void <init>()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$CreatorProperty: void set(java.lang.Object,java.lang.Object)>",
            "<com.turntable.gk.SelectGlod$6: void <init>(com.turntable.gk.SelectGlod)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeFieldName(org.codehaus.jackson.SerializableString)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$BooleanArraySerializer: void <init>()>",
            "<com.turntable.gk.bean.RequestInfo: java.lang.String getOperationType()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _fromParameterizedClass(java.lang.Class,java.util.List)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType fromTypeReference(org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.map.ser.impl.StringCollectionSerializer: void serializeWithType(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.Base64Variant: byte encodeBase64BitsAsByte(int)>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.util.Date parse(java.lang.String)>",
            "<org.codehaus.jackson.JsonParser$Feature: org.codehaus.jackson.JsonParser$Feature[] values()>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializerProvider)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: java.lang.Appendable append(char)>",
            "<org.codehaus.jackson.io.NumberInput: long parseLong(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPayerIdType()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$TokenBufferSerializer: void serializeWithType(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<com.weibopay.impl.PreparePay: void <init>(android.content.Context,com.weibopay.impl.PreparePay$PreparePayListen,int)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>",
            "<org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer: org.w3c.dom.Document _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$Body: java.lang.String getCreditBalance()>",
            "<org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver: org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()>",
            "<org.codehaus.jackson.impl.JsonParserBase: java.lang.String getCurrentName()>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature: org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature valueOf(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeNumber(double)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.util.JSONWrappedObject: java.lang.String getSuffix()>",
            "<org.codehaus.jackson.map.util.JSONPObject: java.lang.Object getValue()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer: void <init>()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.DecimalNode: java.lang.Number getNumberValue()>",
            "<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String toString()>",
            "<org.codehaus.jackson.map.deser.Creator$Delegating: org.codehaus.jackson.map.introspect.AnnotatedMember getCreator()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassGroup: java.lang.String getGroupName()>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void serializeFieldsUsing(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IteratorSerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void <init>(org.codehaus.jackson.io.IOContext,int,org.codehaus.jackson.ObjectCodec,java.io.Writer)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.reflect.Member getMember()>",
            "<org.codehaus.jackson.io.NumberInput: long parseAsLong(java.lang.String,long)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void writeEndArray(org.codehaus.jackson.JsonGenerator,int)>",
            "<org.codehaus.jackson.ObjectCodec: void <init>()>",
            "<org.codehaus.jackson.util.TextBuffer: int getCurrentSegmentSize()>",
            "<com.turntable.gk.UpdateAPK: boolean isNetworkAvailable(android.content.Context)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setIconPath(java.lang.String)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<com.turntable.gk.bean.VirtualCreditCard: java.lang.String getGrantorName()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: void removeIgnorableTypes(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.Map)>",
            "<org.codehaus.jackson.map.deser.TimestampDeserializer: java.sql.Timestamp deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.node.DoubleNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setOrderId(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[])>",
            "<com.turntable.gk.GameDubo: void rotaryTable(android.graphics.Canvas,int)>",
            "<com.weibopay.impl.SdkMinRes$Head: void setMsg(java.lang.String)>",
            "<org.codehaus.jackson.map.type.SimpleType: void <init>(java.lang.Class,java.lang.String[],org.codehaus.jackson.type.JavaType[])>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void visitTypeVariable(java.lang.String)>",
            "<com.weibopay.impl.RequestInfo: void setName(java.lang.String)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.TemiGun: void <init>()>",
            "<com.turntable.gk.FruitbuttonbarView: void <init>(android.content.Context)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder getDoubleBuilder()>",
            "<org.codehaus.jackson.smile.SmileParser: void _addSeenStringValue()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: boolean hasAnnotations()>",
            "<org.codehaus.jackson.node.IntNode: boolean getValueAsBoolean(boolean)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: void <init>()>",
            "<org.codehaus.jackson.io.NumberInput: void <init>()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeNumber(long)>",
            "<com.turntable.gk.SelectGlod: boolean install()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.type.SimpleType: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isGetterVisible(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single: void <init>(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.deser.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap)>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: java.lang.String toString()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: float getFloatValue()>",
            "<org.codehaus.jackson.util.TokenBuffer: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<com.turntable.gk.GameDubo: void temiGunCheck()>",
            "<com.turntable.gk.App: boolean isAvaiableSpace(int)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers: java.util.Collection provide()>",
            "<com.turntable.gk.SelectGlod: void access$8(com.turntable.gk.SelectGlod,java.lang.String,java.lang.String)>",
            "<com.turntable.gk.common.json.dao.request.ThanSizeRq: void setToken(java.lang.String)>",
            "<com.turntable.gk.TestGame: void Top_up_Refresh(java.lang.String)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription: java.lang.String toString()>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: java.lang.String getMethodDescriptor(org.codehaus.jackson.org.objectweb.asm.Type,org.codehaus.jackson.org.objectweb.asm.Type[])>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.org.objectweb.asm.Item: void a(long)>",
            "<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: void <init>(java.lang.String,int,int)>",
            "<com.turntable.gk.TestGame: void access$18(com.turntable.gk.TestGame)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: void setStars(int)>",
            "<org.codehaus.jackson.io.NumberInput: boolean inLongRange(char[],int,int,boolean)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void close()>",
            "<com.turntable.gk.App: java.lang.String formatTime(long)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Class getPropertyType()>",
            "<com.turntable.gk.common.json.dao.request.GameStartRq: void setUid(java.lang.String)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>",
            "<org.codehaus.jackson.map.deser.BaseNodeDeserializer: void _reportProblem(org.codehaus.jackson.JsonParser,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bind(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findTypedValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.bean.DrawCashRes$Body: java.lang.String getBalance()>",
            "<org.codehaus.jackson.smile.SmileParser: int[] _growArrayTo(int[],int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: void <init>(org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type,java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.PartnerConfig: void <init>()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Boolean findCachability(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.JsonSerializer findBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.type.CollectionType: java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.String getPropertyName()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _matchToken(org.codehaus.jackson.JsonToken)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeBytes(byte,byte,byte,byte,byte)>",
            "<com.turntable.gk.bean.DrawCashRes$Body: void setToAccountTime(java.lang.String)>",
            "<com.weibopay.http.RequestInfo: java.lang.String getName()>",
            "<org.codehaus.jackson.smile.SmileParser: void _decodeShortUnicodeValue(int)>",
            "<com.turntable.gk.bean.Head: int getCode()>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: int getIntValue()>",
            "<org.codehaus.jackson.map.deser.StdScalarDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter: void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter)>",
            "<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription: java.lang.String erasedSignature()>",
            "<org.codehaus.jackson.io.UTF8Writer: void write(java.lang.String,int,int)>",
            "<com.turntable.gk.UpdateAPK: void onClick(android.view.View)>",
            "<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitEnd()>",
            "<org.codehaus.jackson.JsonNode: long getLongValue()>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory$SerializerMarker: void <init>()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setSignMsg(java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: long getLongValue()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$URLDeserializer: java.net.URL _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void <init>()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.EnumResolver: org.codehaus.jackson.map.deser.EnumResolver constructUsingToString(java.lang.Class)>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.map.type.MapType withTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: org.codehaus.jackson.org.objectweb.asm.Type getReturnType(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.io.SerializedString,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.type.JavaType,java.lang.reflect.Method,java.lang.reflect.Field,boolean,java.lang.Object)>",
            "<org.codehaus.jackson.smile.SmileFactory: void delegateToTextual(boolean)>",
            "<org.codehaus.jackson.smile.SmileParser: org.codehaus.jackson.sym.Name _findDecodedMedium(int)>",
            "<org.codehaus.jackson.node.DecimalNode: java.math.BigDecimal getDecimalValue()>",
            "<com.weibopay.http.RequestInfo: void setOperationType(java.lang.String)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode findParent(java.lang.String)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription getterType()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(org.codehaus.jackson.org.objectweb.asm.Item)>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: org.codehaus.jackson.map.ser.BeanSerializer withFiltered(org.codehaus.jackson.map.ser.BeanPropertyWriter[])>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void _parseSlowIntValue(int,char[],int,int)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String)>",
            "<com.turntable.gk.common.json.dao.response.Gun: void setGlod(int)>",
            "<org.codehaus.jackson.impl.ReaderBasedNumericParser: org.codehaus.jackson.JsonToken parseNumberText2(boolean)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: java.lang.String getName()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void _writeEndArray()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$DoubleArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: boolean hasProperty(java.lang.String)>",
            "<org.codehaus.jackson.JsonParser: void disableFeature(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.map.type.ArrayType: int containedTypeCount()>",
            "<org.codehaus.jackson.map.deser.Creator$NumberBased: java.lang.Object construct(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory getJsonFactory()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: boolean _isIncludableMethod(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.MethodFilter)>",
            "<org.codehaus.jackson.map.ext.OptionalHandlerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider)>",
            "<com.turntable.gk.Test: void onResume()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$DoubleKD: java.lang.Double _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ObjectWriter: void writeValue(java.io.File,java.lang.Object)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isSetterVisible(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.JsonMappingException unknownFieldException(java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.util.TextBuffer: void setCurrentLength(int)>",
            "<com.turntable.gk.BackgroundThread: void start()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder getShortBuilder()>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver getAbstractTypeResolver()>",
            "<com.turntable.gk.common.json.dao.request.GameStartRq: java.lang.String getToken()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer getNullKeySerializer()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider)>",
            "<org.codehaus.jackson.map.introspect.AnnotationMap: void addIfNotPresent(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getFrozenBalance()>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: java.lang.String getTypeProperty()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void a(int[],int[],org.codehaus.jackson.org.objectweb.asm.Label)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,org.codehaus.jackson.org.objectweb.asm.Label,org.codehaus.jackson.org.objectweb.asm.Label,int)>",
            "<com.turntable.gk.common.util.payTools.RequestParameterUtil: boolean checkMd5Sign(java.lang.String,java.lang.String)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$Body: java.util.ArrayList getVirtualCreditCards()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void flush()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$CharDeser: char[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: org.codehaus.jackson.map.ObjectMapper mapper()>",
            "<org.codehaus.jackson.map.ser.impl.StringCollectionSerializer: void serializeContents(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer: java.lang.Integer deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.util.TextBuffer: double contentsAsDouble()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setDeviceId(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: org.codehaus.jackson.org.objectweb.asm.Type getElementType()>",
            "<org.codehaus.jackson.jaxrs.Annotations: org.codehaus.jackson.jaxrs.Annotations valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$NonTypedScalarSerializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishDouble()>",
            "<org.codehaus.jackson.map.deser.EnumDeserializer$FactoryBasedDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.deser.CustomDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createArrayDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.util.VersionUtil: org.codehaus.jackson.Version versionFor(java.lang.Class)>",
            "<org.codehaus.jackson.JsonParser: void setFeature(org.codehaus.jackson.JsonParser$Feature,boolean)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedWithParams: void addOrOverrideParam(int,java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.map.module.SimpleSerializers: void addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser _createJsonParser(java.io.InputStream,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.map.ser.impl.SimpleFilterProvider: org.codehaus.jackson.map.ser.impl.SimpleFilterProvider setDefaultFilter(org.codehaus.jackson.map.ser.BeanPropertyFilter)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedWithParams: void addOrOverride(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer: org.w3c.dom.Node _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,java.lang.Class)>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.text.DateFormat getBlueprintISO8601Format()>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer: org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer getInstance()>",
            "<org.codehaus.jackson.map.type.TypeBase: java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(char[],int,int)>",
            "<org.codehaus.jackson.node.POJONode: java.lang.Object getPojo()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ShortArraySerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(long)>",
            "<org.codehaus.jackson.smile.SmileFactory: boolean isEnabled(org.codehaus.jackson.smile.SmileGenerator$Feature)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void <init>(org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.type.TypeBindings: void <init>(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$ShortDeser: void <init>()>",
            "<com.turntable.gk.GlobalInfo$1: void <init>()>",
            "<org.codehaus.jackson.node.BigIntegerNode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString getSerializedName()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void _addSymbol(int,org.codehaus.jackson.sym.Name)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: org.codehaus.jackson.org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>",
            "<com.turntable.gk.bean.DrawCashRes: void <init>()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: void <init>()>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: int copyData(java.lang.Object,int)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: int getFieldCount()>",
            "<org.codehaus.jackson.JsonNode: boolean isNull()>",
            "<org.codehaus.jackson.node.ContainerNode$NoNodesIterator: void remove()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeLongString(java.lang.String)>",
            "<com.turntable.gk.common.json.dao.response.TopUpRp: void <init>()>",
            "<com.turntable.gk.common.json.dao.response.Game: void setOrderInfo(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.introspect.BasicBeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.io.JsonStringEncoder: void _throwIllegalSurrogate(int)>",
            "<org.codehaus.jackson.smile.SmileParser: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<org.codehaus.jackson.node.LongNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.module.SimpleDeserializers: org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$AnnotatedProperty: boolean isAnnotationPresent(java.lang.Class)>",
            "<org.codehaus.jackson.map.type.CollectionType: java.lang.String containedTypeName(int)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer buildEnumSetSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishNumberToken(int)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int getTextOffset()>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void <init>()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>",
            "<org.codehaus.jackson.annotate.JsonMethod: boolean getterEnabled()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void <clinit>()>",
            "<org.codehaus.jackson.JsonToken: void <clinit>()>",
            "<com.turntable.gk.common.util.payTools.Base64: byte[] decode(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getExpiredTime()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Member getMember()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void _reportError(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializerBase: org.codehaus.jackson.map.ser.ContainerSerializerBase withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: java.util.Collection allIntrospectors()>",
            "<org.codehaus.jackson.impl.StreamBasedParserBase: void <init>(org.codehaus.jackson.io.IOContext,int,java.io.InputStream,byte[],int,int,boolean)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeUTF8String(byte[],int,int)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void <init>(int,org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$CharArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setDefDescLine2(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.TimestampDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor visitArrayType()>",
            "<org.codehaus.jackson.JsonToken: java.lang.String asString()>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.bean.DrawCashRes$Card: java.lang.String getBalance()>",
            "<com.turntable.gk.common.json.dao.request.Fruits: void setSs(int)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer buildIteratorSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ser.SerializerCache: void flush()>",
            "<org.codehaus.jackson.map.ser.impl.StringCollectionSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeNonSharedString(java.lang.String,int)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int _skipWSOrEnd()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: void setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeNumber(java.math.BigDecimal)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.reflect.AnnotatedElement getAnnotated()>",
            "<org.codehaus.jackson.util.CharTypes: void appendQuoted(java.lang.StringBuilder,java.lang.String)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,java.lang.Class)>",
            "<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig getConfig()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$CurrencyDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: int readUnsignedShort(int)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: void resetTyped(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.deser.CustomDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer: javax.xml.datatype.XMLGregorianCalendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonGenerator: void writeNumberField(java.lang.String,java.math.BigDecimal)>",
            "<org.codehaus.jackson.JsonNode: boolean isValueNode()>",
            "<org.codehaus.jackson.smile.SmileParser: void _reportInvalidChar(int)>",
            "<org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion[] values()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.util.StdDateFormat: void <init>()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType mapType(java.lang.Class,java.lang.Class,java.lang.Class)>",
            "<com.turntable.gk.TestGame: android.widget.TextView access$9(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.module.SimpleDeserializers: void <init>()>",
            "<org.codehaus.jackson.node.ArrayNode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.SerializationConfig$Feature: int collectDefaults()>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean checkUTF32(int)>",
            "<org.codehaus.jackson.node.IntNode: double getDoubleValue()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(double)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: org.codehaus.jackson.sym.CharsToNameCanonicalizer makeOrphan()>",
            "<org.codehaus.jackson.node.ArrayNode: void insert(int,java.lang.String)>",
            "<com.turntable.gk.App: java.util.ArrayList parserS(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.Map findBackReferenceProperties()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$CharDeser: void <init>()>",
            "<com.turntable.gk.App: boolean isNetworkAvailable(android.content.Context)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: void a(org.codehaus.jackson.org.objectweb.asm.ClassWriter)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker$Std withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.JsonGenerator: void writeFieldName(org.codehaus.jackson.SerializableString)>",
            "<com.turntable.gk.TestGame: int controlTheSize(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _findTypeResolver(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.io.IOContext: byte[] allocReadIOBuffer()>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: org.codehaus.jackson.JsonLocation getTokenLocation()>",
            "<com.turntable.gk.common.util.NewcoJsonUtil: void <init>()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List getFactoryMethods()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeString(org.codehaus.jackson.SerializableString)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode createArrayNode()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void d()>",
            "<com.games.a: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: void close()>",
            "<org.codehaus.jackson.impl.JsonReadContext: boolean expectComma()>",
            "<org.codehaus.jackson.JsonFactory: void enableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<com.weibopay.http.RequestInfo: com.weibopay.http.RequestInfo[] values()>",
            "<org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder: org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: int getTextLength()>",
            "<com.turntable.gk.SelectGlod: com.turntable.gk.BackgroundThread access$11(com.turntable.gk.SelectGlod)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void mergeChild(org.codehaus.jackson.sym.BytesToNameCanonicalizer)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeByte(byte)>",
            "<org.codehaus.jackson.map.annotate.JsonSerialize$Typing: org.codehaus.jackson.map.annotate.JsonSerialize$Typing[] values()>",
            "<com.turntable.gk.date.Head: java.lang.String getMsg()>",
            "<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.util.EnumSet constructSet()>",
            "<org.codehaus.jackson.node.DecimalNode: java.math.BigInteger getBigIntegerValue()>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView: void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$BooleanArraySerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void _allocMore()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _verifyValueWrite(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectWriter: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer: javax.xml.datatype.Duration _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: void rehash()>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType getType()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Deserializers[],org.codehaus.jackson.map.deser.BeanDeserializerModifier[])>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void flush()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider enable(org.codehaus.jackson.JsonGenerator$Feature,boolean)>",
            "<org.codehaus.jackson.node.ArrayNode: void add(float)>",
            "<com.turntable.gk.TestGame: boolean isGunCoordinates(com.turntable.gk.common.json.dao.response.Game)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.Test$AlertDialogview: void <init>(com.turntable.gk.Test,android.content.Context,android.app.AlertDialog)>",
            "<org.codehaus.jackson.map.MappingJsonFactory: void <init>(org.codehaus.jackson.map.ObjectMapper)>",
            "<org.codehaus.jackson.map.deser.impl.StringCollectionDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.schema.JsonSchema: java.lang.String toString()>",
            "<com.turntable.gk.GameDubo: boolean isflashing()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void reportInvalidNumber(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String okNameForAnyGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider disable(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.map.DeserializationContext: void <init>(org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.impl.JsonWriteContext: int writeFieldName(java.lang.String)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeFieldName(org.codehaus.jackson.io.SerializedString)>",
            "<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.type.JavaType getContentType()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType valueOf(java.lang.String)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.File,org.codehaus.jackson.JsonEncoding)>",
            "<com.turntable.gk.GameDubo$3: void <init>(com.turntable.gk.GameDubo)>",
            "<org.codehaus.jackson.map.ser.SerializerCache: org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.date.Head: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(java.lang.Object)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: void <init>(org.codehaus.jackson.type.JavaType,boolean)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$1: void <clinit>()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitTableSwitchInsn(int,int,org.codehaus.jackson.org.objectweb.asm.Label,org.codehaus.jackson.org.objectweb.asm.Label[])>",
            "<com.turntable.gk.date.LoginRes$CardList: void setBarcode(java.lang.String)>",
            "<com.turntable.gk.GameDubo$3: void run()>",
            "<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class getType()>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node next()>",
            "<com.turntable.gk.TestGame$AlertDialogview: void <init>(com.turntable.gk.TestGame,android.content.Context,android.app.AlertDialog,java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator$Feature: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String manglePropertyName(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.DoubleNode: double getDoubleValue()>",
            "<org.codehaus.jackson.node.TextNode: void _reportBase64EOF()>",
            "<org.codehaus.jackson.node.MissingNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void close()>",
            "<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.JsonNode readTree(java.lang.String)>",
            "<com.turntable.gk.GameDubo: void shadow7(android.graphics.Canvas)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeNull()>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter: void <init>()>",
            "<com.turntable.gk.App: void <clinit>()>",
            "<org.codehaus.jackson.jaxrs.JsonParseExceptionMapper: javax.ws.rs.core.Response toResponse(java.lang.Throwable)>",
            "<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.map.type.CollectionType withContentTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.SerializerCache: int size()>",
            "<org.codehaus.jackson.impl.Utf8Generator: int _outputMultiByteChar(int,int)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setInputCharset(java.lang.String)>",
            "<com.weibopay.http.SNetWork: java.lang.String getContentAsText(org.apache.http.HttpResponse)>",
            "<org.codehaus.jackson.map.deser.EnumDeserializer: java.lang.Enum deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.type.JavaType: int hashCode()>",
            "<org.codehaus.jackson.map.type.SimpleType: java.lang.String containedTypeName(int)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes: com.turntable.gk.date.GetPkPassGroupListRes$Body getBody()>",
            "<org.codehaus.jackson.map.ClassIntrospector: void <init>()>",
            "<org.codehaus.jackson.util.BufferRecycler$CharBufferType: void <init>(java.lang.String,int,int)>",
            "<com.turntable.gk.App: java.lang.String getOpenUDID()>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode findValue(java.lang.String)>",
            "<org.codehaus.jackson.annotate.JsonTypeInfo$Id: void <clinit>()>",
            "<org.codehaus.jackson.map.type.HierarchicType: boolean isGeneric()>",
            "<org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.type.JavaType containedType(int)>",
            "<org.codehaus.jackson.node.BooleanNode: boolean isBoolean()>",
            "<com.turntable.gk.App: void saveAccount(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.io.UTF8Writer: void close()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void resolveClassAnnotations()>",
            "<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>",
            "<com.turntable.gk.common.json.dao.response.GameStartRp: java.lang.String getGameid()>",
            "<org.codehaus.jackson.map.type.HierarchicType: void setSubType(org.codehaus.jackson.map.type.HierarchicType)>",
            "<org.codehaus.jackson.map.ser.ScalarSerializerBase: void <init>(java.lang.Class,boolean)>",
            "<com.turntable.gk.AlertDialogView: void setTextSize(float)>",
            "<com.weibopay.impl.PreparePay: com.weibopay.impl.PreparePay$PreparePayListen access$5(com.weibopay.impl.PreparePay)>",
            "<org.codehaus.jackson.JsonGenerator$Feature: void <clinit>()>",
            "<com.turntable.gk.date.Head: void setMsg(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.PropertyValue$Any: void assign(java.lang.Object)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.jaxrs.JacksonJaxbJsonProvider: void <init>()>",
            "<org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.sym.Name1: boolean equals(int,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: java.lang.String readUTF8(int,char[])>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: float getFloatValue()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.String writeValueAsString(java.lang.Object)>",
            "<com.turntable.gk.TestGame$AlertDialogview: void setTextSize(float)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map)>",
            "<org.codehaus.jackson.map.introspect.AnnotationMap: java.lang.'annotation'.Annotation get(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.SerializerBase: void wrapAndThrow(java.lang.Throwable,java.lang.Object,int)>",
            "<com.turntable.gk.net.SNetWork: java.lang.String getContentAsText(org.apache.http.HttpResponse)>",
            "<org.codehaus.jackson.map.deser.CollectionDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.node.ObjectNode findParent(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileParserBootstrapper: void <init>(org.codehaus.jackson.io.IOContext,byte[],int,int)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.impl.JsonWriteContext getOutputContext()>",
            "<org.codehaus.jackson.Version: boolean isSnapshot()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.util.EnumSet deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap: org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap instance()>",
            "<org.codehaus.jackson.smile.SmileUtil: long zigzagDecode(long)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.deser.CreatorContainer findMapCreators(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void serialize(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.EnumSerializer: void serialize(java.lang.Enum,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.App: int parseColor(java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.TypeDeserializer findTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ObjectMapper$1: org.codehaus.jackson.Version getMapperVersion()>",
            "<org.codehaus.jackson.map.ser.PropertyBuilder: java.lang.Object getDefaultValue(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field)>",
            "<org.codehaus.jackson.Base64Variant: void <init>(java.lang.String,java.lang.String,boolean,char,int)>",
            "<org.codehaus.jackson.io.UTF32Reader: int read(char[],int,int)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: boolean returnsBoolean(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: void registerSubtypes(java.lang.Class[])>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeRawValue(java.lang.String)>",
            "<com.turntable.gk.common.json.dao.request.ThanSizeRq: com.turntable.gk.common.json.dao.request.ThanSize getThanS()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void <clinit>()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.Name findName(int)>",
            "<com.turntable.gk.date.LoginRes$CardList: com.turntable.gk.date.LoginRes$CardList copy()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$1: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers: org.codehaus.jackson.map.ser.ContainerSerializerBase indexedListSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.org.objectweb.asm.Attribute: void a(org.codehaus.jackson.org.objectweb.asm.ClassWriter,byte[],int,int,int,org.codehaus.jackson.org.objectweb.asm.ByteVector)>",
            "<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.JsonNode readTree(java.io.Reader)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: java.lang.Appendable append(java.lang.CharSequence)>",
            "<com.turntable.gk.bean.DrawCashRes: void setBody(com.turntable.gk.bean.DrawCashRes$Body)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _verifyNoLeadingZeroes()>",
            "<org.codehaus.jackson.map.deser.EnumResolver: int lastValidIndex()>",
            "<org.codehaus.jackson.map.ObjectMapper: void setSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<org.codehaus.jackson.map.ser.impl.StringCollectionSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: org.codehaus.jackson.JsonLocation getTokenLocation()>",
            "<org.codehaus.jackson.node.DecimalNode: void <init>(java.math.BigDecimal)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getLoginName()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicReferenceSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.node.DoubleNode: long getLongValue()>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: void close()>",
            "<org.codehaus.jackson.map.ser.impl.InetAddressSerializer: void <init>()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getDeclaringClass()>",
            "<com.turntable.gk.date.LoginRes$Body: void setWbBalance(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object setInternalSetting(java.lang.Object,java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setSubmitType(java.lang.String)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getSfzFailedReason()>",
            "<org.codehaus.jackson.map.util.JSONWrappedObject: void <init>(java.lang.String,java.lang.String,java.lang.Object,java.lang.Class)>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.net.URL)>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(java.io.File,java.lang.Object)>",
            "<org.codehaus.jackson.map.util.JSONPObject: org.codehaus.jackson.type.JavaType getSerializationType()>",
            "<org.codehaus.jackson.util.JsonParserSequence: int containedParsersCount()>",
            "<org.codehaus.jackson.org.objectweb.asm.Item: boolean a(org.codehaus.jackson.org.objectweb.asm.Item)>",
            "<com.turntable.gk.TestGame$AlertDialogview$1: void onClick(android.view.View)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Class _doFindDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.map.SerializationConfig: void set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>",
            "<com.turntable.gk.GameDubo: void shadow22(android.graphics.Canvas)>",
            "<org.codehaus.jackson.JsonParser: byte[] getBinaryValue()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$ClassSerializer: void <init>()>",
            "<org.codehaus.jackson.map.type.TypeParser$MyTokenizer: void pushBack(java.lang.String)>",
            "<org.codehaus.jackson.sym.Name1: boolean equals(int)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeRaw(char)>",
            "<org.codehaus.jackson.map.ObjectMapper$1: org.codehaus.jackson.map.SerializationConfig getSeserializationConfig()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode valueToTree(java.lang.Object)>",
            "<org.codehaus.jackson.sym.Name: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name parseLongFieldName(int)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer findSerializerByAddonType(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: void <clinit>()>",
            "<com.weibopay.http.SNetworkProxy: void <init>(android.os.Handler)>",
            "<com.turntable.gk.TestGame$5: void <init>(com.turntable.gk.TestGame)>",
            "<com.turntable.gk.SelectGlod: boolean onKeyDown(int,android.view.KeyEvent)>",
            "<com.turntable.gk.AlertDialogView$2: void onClick(android.view.View)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$SqlDateDeserializer: java.sql.Date deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.io.NumberOutput: int outputLeadingTriplet(int,char[],int)>",
            "<org.codehaus.jackson.org.objectweb.asm.Handler: void <init>()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: org.codehaus.jackson.JsonToken resetFloat(boolean,int,int,int)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: int getTextLength()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$BooleanArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: java.lang.Number getNumberValue()>",
            "<org.codehaus.jackson.map.util.StdDateFormat: org.codehaus.jackson.map.util.StdDateFormat clone()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$FloatKD: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isFieldVisible(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.annotate.JsonMethod: boolean isGetterEnabled()>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: org.codehaus.jackson.org.objectweb.asm.ByteVector putShort(int)>",
            "<org.codehaus.jackson.JsonNode: boolean isBigDecimal()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name parseEscapedFieldName(int[],int,int,int,int)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeUTFSegment2(byte[],int,int)>",
            "<org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode getTrue()>",
            "<org.codehaus.jackson.node.NodeCursor$RootValue: org.codehaus.jackson.JsonToken nextValue()>",
            "<org.codehaus.jackson.map.ser.PropertyBuilder$1: void <clinit>()>",
            "<com.turntable.gk.net.SNetWork: java.lang.String getRequest(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withType(java.lang.Class)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.BooleanNode booleanNode(boolean)>",
            "<org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap: void <init>(org.codehaus.jackson.map.ser.impl.JsonSerializerMap)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addIntFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.JsonParser: java.lang.Object readValueAs(org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.JsonNode: org.codehaus.jackson.JsonNode getFieldValue(java.lang.String)>",
            "<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.JsonNode readTree(java.io.InputStream)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getWbBalance()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer: java.lang.Iterable all()>",
            "<com.turntable.gk.SelectGlod$11: void <init>(com.turntable.gk.SelectGlod)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.introspect.MethodFilter getSerializationMethodFilter(org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.JsonEncoding detectEncoding()>",
            "<org.codehaus.jackson.util.TextBuffer: void resetWithString(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<org.codehaus.jackson.sym.Name1: boolean equals(int[],int)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeEndArray()>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void serializeFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitTryCatchBlock(org.codehaus.jackson.org.objectweb.asm.Label,org.codehaus.jackson.org.objectweb.asm.Label,org.codehaus.jackson.org.objectweb.asm.Label,java.lang.String)>",
            "<com.turntable.gk.R$raw: void <init>()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void setJSONPFunctionName(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileParserBootstrapper: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer getKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.JsonNode: boolean isObject()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: org.codehaus.jackson.JsonToken nextToken()>",
            "<com.turntable.gk.SelectGlod$4: void onClick(android.content.DialogInterface,int)>",
            "<com.turntable.gk.SelectGlod$8: void <init>(com.turntable.gk.SelectGlod)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.GameDubo: void rotaryTableCheck()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.JsonToken _parserNumber2(char[],int,boolean,int)>",
            "<org.codehaus.jackson.JsonFactory: java.io.Writer _createWriter(java.io.OutputStream,org.codehaus.jackson.JsonEncoding,org.codehaus.jackson.io.IOContext)>",
            "<com.turntable.gk.common.json.dao.response.Game: void <init>()>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature: org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature[] values()>",
            "<org.codehaus.jackson.node.TextNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.io.NumberInput: int parseInt(java.lang.String)>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean handleBOM(int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer: java.lang.Integer deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.NumericNode: void <init>()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: int getTextLength()>",
            "<com.turntable.gk.SelectGlod$JsToJava: java.lang.String fetch()>",
            "<com.turntable.gk.SelectGlod: void access$7(com.turntable.gk.SelectGlod,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.AnyGetterWriter: void getAndSerialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.impl.JsonParserBase: org.codehaus.jackson.JsonLocation getTokenLocation()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeSegment(int)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>",
            "<org.codehaus.jackson.io.SerializedString: java.lang.String getValue()>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void indentObjectsWith(org.codehaus.jackson.impl.Indenter)>",
            "<org.codehaus.jackson.org.objectweb.asm.Attribute: int a(org.codehaus.jackson.org.objectweb.asm.ClassWriter,byte[],int,int,int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer: void _append(org.codehaus.jackson.JsonToken)>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getBankAccountNo()>",
            "<com.turntable.gk.net.RequestInfo: java.lang.String getName()>",
            "<com.turntable.gk.common.json.dao.request.Fruits: void setOr(int)>",
            "<org.codehaus.jackson.node.DoubleNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod[] values()>",
            "<org.codehaus.jackson.node.POJONode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addFieldMixIns(java.lang.Class,java.util.Map)>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] appendCompletedChunk(java.lang.Object[])>",
            "<org.codehaus.jackson.JsonStreamContext: void <init>()>",
            "<org.codehaus.jackson.util.CharTypes: int charToHex(int)>",
            "<org.codehaus.jackson.mrbean.BeanUtil: boolean isConcrete(java.lang.reflect.Member)>",
            "<org.codehaus.jackson.map.ser.SerializerBase: void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: void a(java.lang.StringBuffer)>",
            "<com.turntable.gk.net.SNetworkProxy: void cancelRequest()>",
            "<com.turntable.gk.common.json.dao.response.Game: void setGun(com.turntable.gk.common.json.dao.response.Gun[])>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void <init>(org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: int a(int,int)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void <init>(org.codehaus.jackson.io.IOContext,int,java.io.Reader,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.CharsToNameCanonicalizer)>",
            "<org.codehaus.jackson.map.ext.CoreXMLSerializers: void <init>()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void <init>(org.codehaus.jackson.io.IOContext,int)>",
            "<com.turntable.gk.TestGame: void onResume()>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: java.lang.String toString()>",
            "<org.codehaus.jackson.xc.DomElementJsonSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassGroup: int getGroupType()>",
            "<org.codehaus.jackson.org.objectweb.asm.FieldWriter: void visitEnd()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void <init>(java.lang.Class,java.util.List,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String toString()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BooleanDeserializer: java.lang.Boolean deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.common.json.dao.request.GameGetRq: java.lang.String getOrderId()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String okNameForGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>",
            "<org.codehaus.jackson.map.type.ArrayType: java.lang.String toString()>",
            "<com.turntable.gk.date.LoginRes$Body: int getSfzStatus()>",
            "<org.codehaus.jackson.map.DeserializationConfig$Feature: boolean enabledByDefault()>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode _put(java.lang.String,org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ByteArraySerializer: void serialize(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<com.turntable.gk.common.util.NewcoJsonUtil: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: void setCreators(org.codehaus.jackson.map.deser.CreatorContainer)>",
            "<com.games.b: java.lang.String[] d()>",
            "<com.turntable.gk.UpdateAPK$2: void run()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void reportOverflowLong()>",
            "<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer getKeySerializer()>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureReader: int a(java.lang.String,int,org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class,org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IteratorSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.JsonParser: boolean hasTextCharacters()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.ser.BeanSerializerBuilder constructBeanSerializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: void serializeContents(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.JsonProcessingException: java.lang.String getMessage()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeStringSegments(char[],int,int)>",
            "<org.codehaus.jackson.smile.SmileParser: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<org.codehaus.jackson.util.TokenBuffer$Segment: java.lang.Object get(int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer: void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<com.turntable.gk.date.LoginRes$Body: void setSfzStatus(int)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: boolean isInline()>",
            "<org.codehaus.jackson.io.JsonStringEncoder: int _appendSingleEscape(int,char[])>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: void serializeTypedContents(java.lang.Object[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter: void <init>()>",
            "<org.codehaus.jackson.map.util.ObjectBuffer$Node: java.lang.Object[] getData()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>",
            "<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeValue(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.node.ContainerNode: boolean isContainerNode()>",
            "<com.turntable.gk.GameDubo: void shadow1(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.map.type.MapType withContentTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: boolean isClosed()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder getLongBuilder()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void nukeSymbols()>",
            "<org.codehaus.jackson.map.SerializationConfig: void setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<com.turntable.gk.bean.RequestInfo: void <clinit>()>",
            "<com.turntable.gk.SelectGlod: java.lang.String getLocalIpAddress()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: java.lang.String getText()>",
            "<org.codehaus.jackson.util.TokenBuffer: java.lang.String toString()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeNull()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void setMapper(org.codehaus.jackson.map.ObjectMapper)>",
            "<org.codehaus.jackson.Base64Variants: org.codehaus.jackson.Base64Variant getDefaultVariant()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitMethodInsn(int,java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: org.codehaus.jackson.map.ser.BeanPropertyWriter[] getFilteredProperties()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getBgUrl()>",
            "<org.codehaus.jackson.node.NodeCursor$Object: boolean currentHasChildren()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.String getName()>",
            "<org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: boolean isVisible(java.lang.reflect.Member)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Class getRawType()>",
            "<com.turntable.gk.common.json.dao.response.Game: java.lang.String getFt()>",
            "<com.turntable.gk.SelectGlod: void setClickListener()>",
            "<com.turntable.gk.TestGame: void access$0(com.turntable.gk.TestGame,long)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: org.codehaus.jackson.mrbean.BeanBuilder$Property findProperty(java.lang.String)>",
            "<com.turntable.gk.GlobalInfo: int getmusic(int)>",
            "<org.codehaus.jackson.smile.Tool: void encode(java.io.InputStream)>",
            "<com.turntable.gk.SelectGlod: void onResume()>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPayType()>",
            "<org.codehaus.jackson.JsonStreamContext: int getCurrentIndex()>",
            "<com.turntable.gk.date.LoginRes$Body: void setAvailableBalance(java.lang.String)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: char _handleUnrecognizedCharacterEscape(char)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: boolean maybeDirty()>",
            "<org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter: org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.lang.String[])>",
            "<org.codehaus.jackson.map.ser.EnumSerializer: org.codehaus.jackson.map.util.EnumValues getEnumValues()>",
            "<org.codehaus.jackson.smile.SmileParser: void _skipBytes(int)>",
            "<org.codehaus.jackson.map.type.SimpleType: java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: void accept(org.codehaus.jackson.org.objectweb.asm.ClassVisitor,org.codehaus.jackson.org.objectweb.asm.Attribute[],int)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findEnumValue(java.lang.Enum)>",
            "<org.codehaus.jackson.map.deser.EnumMapDeserializer: java.util.EnumMap deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.map.ser.NullSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.ext.OptionalHandlerFactory: org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.Class getDeclaringClass()>",
            "<org.codehaus.jackson.map.JsonDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ObjectDeserializer: void <clinit>()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: java.lang.Object readConst(int,char[])>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Class[] getViews()>",
            "<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.map.SerializerFactory)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class)>",
            "<org.codehaus.jackson.node.BinaryNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser: java.lang.String[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonNode: java.math.BigDecimal getDecimalValue()>",
            "<org.codehaus.jackson.map.module.SimpleModule: void setupModule(org.codehaus.jackson.map.Module$SetupContext)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer: java.lang.Byte deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean ensureLoaded(int)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$AsArraySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializer: void <init>(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void visitSource(java.lang.String,java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setVersion(java.lang.String)>",
            "<org.codehaus.jackson.util.TextBuffer: void releaseBuffers()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.AnnotatedElement getAnnotated()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer: java.lang.Double deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.DoubleNode: int getIntValue()>",
            "<com.games.a: void a(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
            "<com.turntable.gk.SelectGlod: void startAppPay(java.lang.String,java.lang.String)>",
            "<com.turntable.gk.AlertDialogView$1: void <init>(com.turntable.gk.AlertDialogView,android.app.AlertDialog)>",
            "<org.codehaus.jackson.map.ser.impl.InetAddressSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPayerContactType(java.lang.String)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: void <init>(org.codehaus.jackson.sym.CharsToNameCanonicalizer,boolean,boolean,java.lang.String[],org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket[],int)>",
            "<com.turntable.gk.net.RequestInfo: void <clinit>()>",
            "<com.turntable.gk.bean.RequestDepositRes: void setBody(com.turntable.gk.bean.RequestDepositRes$Body)>",
            "<org.codehaus.jackson.JsonParser$NumberType: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<com.turntable.gk.AlertDialogView$3: void <init>(com.turntable.gk.AlertDialogView,android.app.AlertDialog)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void setNullValueSerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: void addSetter(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.AnnotationWriter: void visitEnd()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.Throwable getRootCause(java.lang.Throwable)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getNeedDyDesc()>",
            "<com.turntable.gk.UpdateAPK: android.widget.ProgressBar access$0(com.turntable.gk.UpdateAPK)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter: void writeIndentation(org.codehaus.jackson.JsonGenerator,int)>",
            "<org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.map.type.SimpleType withTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: org.codehaus.jackson.JsonNode currentNode()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void _writeSimpleObject(java.lang.Object)>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: void cleanall()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethodMap: org.codehaus.jackson.map.introspect.AnnotatedMethod remove(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder inclusion(org.codehaus.jackson.annotate.JsonTypeInfo$As)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Exception)>",
            "<com.turntable.gk.GameDubo: void shadow11(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.NullNode nullNode()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$ByteKD: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonGenerator$Feature: int collectDefaults()>",
            "<com.turntable.gk.bean.AppsRes: void setBody(com.turntable.gk.bean.AppsRes$Body)>",
            "<org.codehaus.jackson.JsonParseException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.node.BinaryNode: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$LongArraySerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)>",
            "<com.turntable.gk.net.SNetworkTask: java.lang.String getAsyncTaskName()>",
            "<com.turntable.gk.common.json.dao.response.BaseResponseBean: void setJver(java.lang.String)>",
            "<org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper: javax.ws.rs.core.Response toResponse(java.lang.Throwable)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$ShortKD: java.lang.Short _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.weibopay.http.SNetworkTask: java.lang.Object doInBackground(java.lang.Void[])>",
            "<org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap: org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap 'from'(java.util.HashMap)>",
            "<org.codehaus.jackson.map.ser.ToStringSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.turntable.gk.TestGame: long access$2(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withView(java.lang.Class)>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: void <init>(java.lang.Object,int)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object handlePolymorphic(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>",
            "<com.turntable.gk.net.RequestInfo: void setOperationType(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.Item: void <init>()>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.node.NodeCursor$Object: org.codehaus.jackson.JsonToken nextValue()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void b(org.codehaus.jackson.org.objectweb.asm.Frame)>",
            "<org.codehaus.jackson.map.module.SimpleModule: org.codehaus.jackson.map.module.SimpleModule addSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer: void <init>()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _skipUtf8_4(int)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeString(org.codehaus.jackson.SerializableString)>",
            "<com.turntable.gk.net.RequestInfo: void setName(java.lang.String)>",
            "<org.codehaus.jackson.io.IOContext: void <init>(org.codehaus.jackson.util.BufferRecycler,java.lang.Object,boolean)>",
            "<org.codehaus.jackson.impl.JsonParserBase: void _releaseBuffers()>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: java.lang.String toString()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _ensureRoomForOutput(int)>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishFloat()>",
            "<com.turntable.gk.date.UploadLogRes$Body: void <init>()>",
            "<com.turntable.gk.net.SNetworkProxy: void postRequest(java.lang.String,java.lang.String,java.util.HashMap,java.lang.Class)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeSharedStringValueReference(int)>",
            "<com.games.b: java.lang.String b()>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper$1: org.codehaus.jackson.map.SerializationConfig getSerializationConfig()>",
            "<org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter: org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.util.Set)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getSharingData()>",
            "<org.codehaus.jackson.Version: void <clinit>()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitCode()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>",
            "<org.codehaus.jackson.org.objectweb.asm.AnnotationWriter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>",
            "<com.turntable.gk.net.NetManage: void request(java.lang.String,java.lang.String,java.lang.String,java.lang.Class,com.turntable.gk.net.SNetworkCallBack)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicReferenceSerializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.LongNode: int getIntValue()>",
            "<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serializeUsingCustom(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.impl.StringCollectionSerializer: org.codehaus.jackson.JsonNode contentSchema()>",
            "<org.codehaus.jackson.node.ArrayNode: java.util.List findValues(java.lang.String,java.util.List)>",
            "<com.turntable.gk.GameDubo: void temiGun(android.graphics.Canvas)>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: void <init>()>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void beforeArrayValues(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.util.TextBuffer: void ensureNotShared()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<org.codehaus.jackson.util.BufferRecycler: char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,int)>",
            "<org.codehaus.jackson.io.BaseReader: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream,byte[],int,int)>",
            "<org.codehaus.jackson.JsonStreamContext: int getEntryCount()>",
            "<com.turntable.gk.SelectGlod: void selectPay(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator: void <init>(java.lang.Object[])>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>",
            "<org.codehaus.jackson.node.ObjectNode: java.util.Iterator getFields()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder: void <init>()>",
            "<org.codehaus.jackson.map.type.ArrayType: boolean isAbstract()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer: java.net.URI _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser _createJsonParser(byte[],int,int,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.map.module.SimpleDeserializers: org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int _decodeUtf8_3(int)>",
            "<com.weibopay.http.SNetworkProxy: void networkFinished(java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.lang.String toString()>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: java.util.Calendar constructCalendar(java.util.Date)>",
            "<org.codehaus.jackson.map.jsontype.NamedType: boolean hasName()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$IntArraySerializer: void serializeContents(int[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMember: void <init>()>",
            "<org.codehaus.jackson.node.LongNode: java.math.BigDecimal getDecimalValue()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.String getName()>",
            "<org.codehaus.jackson.map.KeyDeserializer$None: void <init>()>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal)>",
            "<org.codehaus.jackson.map.ObjectMapper: boolean canDeserialize(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode readTree(java.io.Reader)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: boolean hasKnownClassAnnotations()>",
            "<org.codehaus.jackson.node.MissingNode: void <clinit>()>",
            "<org.codehaus.jackson.node.BooleanNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.smile.SmileParser: byte[] _read7BitBinaryWithLength()>",
            "<org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ByteArraySerializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.SerializerCache: org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class)>",
            "<org.codehaus.jackson.map.BeanDescription: org.codehaus.jackson.type.JavaType getType()>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: java.lang.String getPropertyName(java.lang.String)>",
            "<org.codehaus.jackson.Base64Variant: int decodeBase64Byte(byte)>",
            "<org.codehaus.jackson.schema.JsonSchema: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void markAsShared()>",
            "<org.codehaus.jackson.JsonLocation: void <clinit>()>",
            "<com.turntable.gk.MusicPlayer: void <init>()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.Class wrapperType(java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: java.lang.String _parseFieldName2(int,int,int)>",
            "<com.turntable.gk.SelectGlod$1: void onClick(android.view.View)>",
            "<com.turntable.gk.TestGame: java.lang.String access$14(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: boolean hasValueDeserializer()>",
            "<org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter: void <init>(java.util.Set)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethodMap: void add(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.deser.AbstractDeserializer$1: void <clinit>()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: boolean _containedIn(java.lang.Class,java.util.HashSet)>",
            "<org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator: void <init>()>",
            "<org.codehaus.jackson.node.TextNode: boolean getValueAsBoolean(boolean)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Boolean _parseBoolean(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver: org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>",
            "<com.turntable.gk.net.SNetworkProxy$2: java.lang.String callService()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider enable(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer: org.joda.time.DateMidnight deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.JsonMappingException wrongTokenException(org.codehaus.jackson.JsonParser,org.codehaus.jackson.JsonToken,java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.Base64: boolean isData(char)>",
            "<com.turntable.gk.TestGame: void setView()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$BooleanArraySerializer: void serializeContents(boolean[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.weibopay.http.RequestInfo: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeBytes(byte,byte,byte)>",
            "<org.codehaus.jackson.JsonNode: java.util.List findParents(java.lang.String)>",
            "<org.codehaus.jackson.mrbean.BeanUtil: java.util.List findSuperTypes(java.lang.Class,java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addDelegatingFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _skipCppComment()>",
            "<org.codehaus.jackson.map.jsontype.NamedType: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.Version version()>",
            "<com.turntable.gk.TestGame$1: void handleMessage(android.os.Message)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType containedType(int)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Class findKeyDeserializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$FloatArraySerializer: void serializeContents(float[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serialize(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: java.lang.String[] getInterfaces()>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getBgColor()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeStartArray()>",
            "<org.codehaus.jackson.util.CharTypes: int[] getInputCodeUtf8()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonParser _createJsonParser(java.io.InputStream,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: void initTables(int)>",
            "<org.codehaus.jackson.map.ser.SerializerBase: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String)>",
            "<org.codehaus.jackson.sym.Name2: boolean equals(int,int)>",
            "<org.codehaus.jackson.map.deser.PropertyValueBuffer: void bufferProperty(org.codehaus.jackson.map.deser.SettableBeanProperty,java.lang.Object)>",
            "<com.turntable.gk.TestGame: void onPause()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPlatformSignMsg(java.lang.String)>",
            "<com.turntable.gk.common.net.MyX509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>",
            "<org.codehaus.jackson.node.NullNode: void <clinit>()>",
            "<org.codehaus.jackson.JsonToken: byte[] asByteArray()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitCode()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.common.json.dao.request.GameLoginRq: void <init>()>",
            "<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serializeWithType(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureReader: void <init>(java.lang.String)>",
            "<com.turntable.gk.SelectGlod: void setPopOnClickListener(android.view.View,android.view.View$OnClickListener)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: byte[] resetAndGetFirstSegment()>",
            "<org.codehaus.jackson.smile.SmileParser: void _reportInvalidInitial(int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ShortBuilder: short[] _constructArray(int)>",
            "<com.turntable.gk.net.SNetworkProxy: void <init>(android.os.Handler)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPlatformUrl()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer: void <init>()>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void writeEndArray(org.codehaus.jackson.JsonGenerator,int)>",
            "<org.codehaus.jackson.impl.JsonParserBase: void _reportMismatchedEndMarker(int,char)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: java.util.List findBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.node.ObjectNode: java.util.Iterator getElements()>",
            "<org.codehaus.jackson.type.JavaType: boolean isConcrete()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void a(int,int,org.codehaus.jackson.org.objectweb.asm.ClassWriter,org.codehaus.jackson.org.objectweb.asm.Item)>",
            "<org.codehaus.jackson.map.type.TypeBindings: java.lang.String toString()>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createTreeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: java.lang.String buildGetterName(java.lang.String)>",
            "<org.codehaus.jackson.map.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>",
            "<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType[] values()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.Name findName(int,int)>",
            "<com.turntable.gk.GameDubo: void shadow5(android.graphics.Canvas)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void <init>()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setProductName(java.lang.String)>",
            "<org.codehaus.jackson.map.util.JSONWrappedObject: java.lang.String getPrefix()>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getWbNickName()>",
            "<org.codehaus.jackson.map.ser.StdSerializers: void <init>()>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NullNode nullNode()>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single: org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class)>",
            "<org.codehaus.jackson.util.TextBuffer: void <init>(org.codehaus.jackson.util.BufferRecycler)>",
            "<org.codehaus.jackson.org.objectweb.asm.Opcodes: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileUtil: long zigzagEncode(long)>",
            "<org.codehaus.jackson.map.util.LinkedNode: void <init>(java.lang.Object,org.codehaus.jackson.map.util.LinkedNode)>",
            "<org.codehaus.jackson.xc.DataHandlerJsonDeserializer$1: java.io.InputStream getInputStream()>",
            "<org.codehaus.jackson.JsonParser: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.util.BufferRecycler$CharBufferType: int access$100(org.codehaus.jackson.util.BufferRecycler$CharBufferType)>",
            "<org.codehaus.jackson.map.introspect.MemberKey: int hashCode()>",
            "<com.turntable.gk.common.json.dao.response.Game: void setgA(java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,java.lang.Class,org.codehaus.jackson.map.DeserializerProvider)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeNumber(java.math.BigDecimal)>",
            "<org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken[] values()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicIntegerSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void <init>(java.lang.Class,org.codehaus.jackson.map.ser.BeanPropertyWriter[],java.lang.Object)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addPropertyFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.deser.SettableBeanProperty[])>",
            "<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType _widen(java.lang.Class)>",
            "<org.codehaus.jackson.node.POJONode: boolean getValueAsBoolean(boolean)>",
            "<org.codehaus.jackson.map.util.ClassUtil: boolean isProxyType(java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.AnnotationWriter: void visit(java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.xc.XmlAdapterJsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.node.ObjectNode insertObject(int)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeStartObject()>",
            "<org.codehaus.jackson.map.type.TypeParser$MyTokenizer: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeFieldNameUnicode(org.codehaus.jackson.SerializableString,byte[])>",
            "<org.codehaus.jackson.map.ser.StdSerializers$StringSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.GameDubo: boolean isflashingGun()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: float getFloatValue()>",
            "<org.codehaus.jackson.node.ContainerNode$NoStringsIterator: boolean hasNext()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.SelectGlod$10: void <init>(com.turntable.gk.SelectGlod,android.content.Context,android.app.AlertDialog,java.lang.String,java.lang.String,int)>",
            "<com.turntable.gk.common.json.dao.response.Game: void setOrderUrl(java.lang.String)>",
            "<com.turntable.gk.bean.DrawCashRes$Body: java.lang.String getToAccountTime()>",
            "<com.turntable.gk.AlertDialogView: android.view.View getView()>",
            "<org.codehaus.jackson.node.TextNode: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.node.BaseJsonNode: void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void convertNumberToInt()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)>",
            "<org.codehaus.jackson.Base64Variant: char getPaddingChar()>",
            "<org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken valueOf(java.lang.String)>",
            "<org.codehaus.jackson.sym.Name1: void <init>(java.lang.String,int,int)>",
            "<com.turntable.gk.bean.DrawCashRes$Card: java.lang.String getShowInfo()>",
            "<org.codehaus.jackson.map.type.SimpleType: java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.smile.SmileParser$Feature: void <clinit>()>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>",
            "<org.codehaus.jackson.xc.DomElementJsonDeserializer: org.w3c.dom.Element deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileGenerator createJsonGenerator(java.io.OutputStream)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Double _parseDouble(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<com.turntable.gk.bean.VirtualCreditCard: void setDueDate(java.lang.String)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$DoubleBuilder: void <init>()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.weibopay.impl.RequestInfo: void setOperationType(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPayerContact()>",
            "<org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: void <init>()>",
            "<org.codehaus.jackson.node.ArrayNode: void add(double)>",
            "<org.codehaus.jackson.node.BigIntegerNode: void <init>(java.math.BigInteger)>",
            "<org.codehaus.jackson.type.JavaType: boolean isArrayType()>",
            "<org.codehaus.jackson.map.ext.DOMSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: org.codehaus.jackson.org.objectweb.asm.ByteVector putInt(int)>",
            "<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: java.lang.String getName()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$IntDeser: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.BooleanNode: double getValueAsDouble(double)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer: void <init>()>",
            "<org.codehaus.jackson.node.IntNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion valueOf(java.lang.String)>",
            "<org.codehaus.jackson.node.BigIntegerNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: void serializeAsField(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.ser.BeanPropertyWriter)>",
            "<org.codehaus.jackson.map.deser.impl.StringCollectionDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<org.codehaus.jackson.node.IntNode: int getIntValue()>",
            "<org.codehaus.jackson.node.NodeCursor: void <init>(int,org.codehaus.jackson.node.NodeCursor)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: void a(int)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$DoubleArraySerializer: void serializeContents(double[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.TestGame: void access$11(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerModifier: org.codehaus.jackson.map.JsonSerializer modifySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeFieldName(org.codehaus.jackson.SerializableString)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$IntKD: java.lang.Integer _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: java.lang.Object getEmbeddedObject()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.JsonGenerator: void disableFeature(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: java.lang.Iterable deserializers()>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: int getType()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer: int _parseInt(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.node.BaseJsonNode: org.codehaus.jackson.JsonNode findPath(java.lang.String)>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer: javax.xml.namespace.QName _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitIntInsn(int,int)>",
            "<org.codehaus.jackson.xc.DataHandlerJsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Enum findEnum(java.lang.String)>",
            "<com.turntable.gk.date.LoginRes$Body: void <init>()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonToken getLastClearedToken()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void d(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.node.ArrayNode createArrayNode()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: boolean isIgnorableMethod(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<com.turntable.gk.SelectGlod: android.webkit.WebView getWebView()>",
            "<org.codehaus.jackson.map.type.HierarchicType: void setSuperType(org.codehaus.jackson.map.type.HierarchicType)>",
            "<org.codehaus.jackson.util.CharTypes: void <init>()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeQuotedRaw(java.lang.Object)>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.type.JavaType containedType(int)>",
            "<org.codehaus.jackson.JsonGenerationException: void <init>(java.lang.String,java.lang.Throwable)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.type.TypeParser$MyTokenizer: java.lang.String getUsedInput()>",
            "<org.codehaus.jackson.JsonGenerator: void writeObjectFieldStart(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.UntypedObjectDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassGroup: java.lang.String getGroupId()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: org.codehaus.jackson.impl.JsonWriteContext getOutputContext()>",
            "<org.codehaus.jackson.JsonStreamContext: boolean inArray()>",
            "<com.turntable.gk.bean.VersionCheckRes: com.turntable.gk.bean.VersionCheckRes$Body getBody()>",
            "<com.turntable.gk.GameDubo: void shadow18(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.deser.Creator$Delegating: org.codehaus.jackson.type.JavaType getValueType()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonParser skipChildren()>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer _createAndCacheValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeStringSegment2(char[],int,int)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getRawType()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _fromClass(java.lang.Class,org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.RuntimeJsonMappingException: void <init>(org.codehaus.jackson.map.JsonMappingException)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _write7BitBinaryWithLength(byte[],int,int)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator _createJsonGenerator(java.io.Writer,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$CharKD: java.lang.Character _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item a(java.lang.String,java.lang.String,java.lang.String,boolean)>",
            "<org.codehaus.jackson.util.TextBuffer: java.math.BigDecimal contentsAsDecimal()>",
            "<com.weibopay.impl.PreparePay: void chmod(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: double getDoubleValue()>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: java.util.List _sortBeanProperties(java.util.List,java.util.List,java.lang.String[],boolean)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer: void <clinit>()>",
            "<com.turntable.gk.bean.DrawCashRes$Card: java.lang.String getCardId()>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode addAll(java.util.Collection)>",
            "<org.codehaus.jackson.node.NodeCursor$RootValue: java.lang.String getCurrentName()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void _resolveSerializer(org.codehaus.jackson.map.ResolvableSerializer)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.xc.JaxbAnnotationIntrospector$PropertyDescriptors getDescriptors(java.lang.Class)>",
            "<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType narrowBy(java.lang.Class)>",
            "<org.codehaus.jackson.io.IOContext: void setEncoding(org.codehaus.jackson.JsonEncoding)>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void serializeFields(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _fromVariable(java.lang.reflect.TypeVariable,org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.map.type.HierarchicType: org.codehaus.jackson.map.type.HierarchicType getSubType()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void _reportUnsupportedOperation()>",
            "<org.codehaus.jackson.map.deser.EnumMapDeserializer: void <init>(org.codehaus.jackson.map.deser.EnumResolver,org.codehaus.jackson.map.JsonDeserializer)>",
            "<com.turntable.gk.TestGame: android.widget.ImageView access$6(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.node.MissingNode: boolean isMissingNode()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$ByteKD: java.lang.Byte _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.TokenBuffer: void copyCurrentEvent(org.codehaus.jackson.JsonParser)>",
            "<com.turntable.gk.net.SNetworkTask: void setAsyncTaskName(java.lang.String)>",
            "<org.codehaus.jackson.map.SerializationConfig$Feature: void <init>(java.lang.String,int,boolean)>",
            "<com.turntable.gk.common.json.dao.response.Game: java.lang.String getSize()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$PropertyDescriptors: org.codehaus.jackson.xc.JaxbAnnotationIntrospector$PropertyDescriptors find(java.lang.Class)>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishBigInteger()>",
            "<org.codehaus.jackson.node.NodeCursor$Object: org.codehaus.jackson.JsonToken endToken()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.util.Collection allIntrospectors()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedInt(int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty managed(java.lang.String)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: org.codehaus.jackson.JsonStreamContext getOutputContext()>",
            "<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.Item b(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeRaw(java.lang.String,int,int)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeNumber(double)>",
            "<com.turntable.gk.TestGame: int isGun(com.turntable.gk.common.json.dao.response.Game)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Float _parseFloat(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.SerializerBase: org.codehaus.jackson.node.ObjectNode createObjectNode()>",
            "<org.codehaus.jackson.JsonParser: void enableFeature(org.codehaus.jackson.JsonParser$Feature)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setLanguage(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable fields()>",
            "<org.codehaus.jackson.smile.Tool: void <init>()>",
            "<com.turntable.gk.bean.paybean.GoodsData: void <init>(java.lang.String,java.lang.String,float)>",
            "<org.codehaus.jackson.node.NodeCursor$RootValue: org.codehaus.jackson.JsonToken endToken()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String mangleSetterName(org.codehaus.jackson.map.introspect.Annotated,java.lang.String)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getUid()>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeFieldName(org.codehaus.jackson.io.SerializedString)>",
            "<org.codehaus.jackson.map.ser.EnumSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: void <init>()>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode get(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeBoolean(boolean)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: int getModifiers()>",
            "<org.codehaus.jackson.map.type.ClassKey: int compareTo(org.codehaus.jackson.map.type.ClassKey)>",
            "<org.codehaus.jackson.node.IntNode: void <init>(int)>",
            "<org.codehaus.jackson.smile.SmileParser: java.lang.String _decodeShortUnicodeName(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonNode,java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers: java.util.HashMap getAll()>",
            "<com.turntable.gk.net.NetManage: void clean()>",
            "<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.JsonNode readTree(byte[])>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitLabel(org.codehaus.jackson.org.objectweb.asm.Label)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ShortArraySerializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: int getProperytIndex()>",
            "<org.codehaus.jackson.map.DeserializationConfig: void addMixInAnnotations(java.lang.Class,java.lang.Class)>",
            "<org.codehaus.jackson.map.type.CollectionType: int containedTypeCount()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getMerchantAcctId()>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void release()>",
            "<com.turntable.gk.GameDubo: void shadow20(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicIntegerSerializer: void serialize(java.util.concurrent.atomic.AtomicInteger,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.io.NumberOutput: java.lang.String toString(double)>",
            "<org.codehaus.jackson.map.ext.CoreXMLSerializers: java.util.Collection provide()>",
            "<org.codehaus.jackson.node.ObjectNode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$StringArraySerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode _bindAsTree(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: java.lang.String _parseFieldName(int)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
            "<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.JsonStreamContext getParent()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$FileSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.SelectGlod: void onCreate(android.os.Bundle)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeString(char[],int,int)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeBoolean(boolean)>",
            "<org.codehaus.jackson.sym.NameN: boolean equals(int)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>",
            "<org.codehaus.jackson.JsonToken: void <init>(java.lang.String,int,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: void reportUnknownProperty(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(byte[],int,int,java.lang.Class)>",
            "<org.codehaus.jackson.map.SerializationConfig: void setSerializationView(java.lang.Class)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void <init>()>",
            "<com.weibopay.impl.SdkVersionCheck: void <init>(android.content.Context)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: short getShortValue()>",
            "<org.codehaus.jackson.map.ObjectMapper$1: org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyPrettyValueWrite(java.lang.String,int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$TokenBufferDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeUTF8String(byte[],int,int)>",
            "<com.turntable.gk.UpdateAPK: void openFile(java.io.File)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: void <init>(org.codehaus.jackson.org.objectweb.asm.ClassVisitor)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: org.codehaus.jackson.org.objectweb.asm.Type a(char[],int)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void addUntouchable(java.lang.Class)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer buildObjectArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeRaw(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.DateDeserializer: void <init>()>",
            "<org.codehaus.jackson.node.BooleanNode: int getValueAsInt(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(java.io.OutputStream,java.lang.Object)>",
            "<org.codehaus.jackson.map.type.CollectionType: java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$DoubleArraySerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name find(int,int[],int)>",
            "<org.codehaus.jackson.Version: org.codehaus.jackson.Version unknownVersion()>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.Class getMapClass()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.Name addName(java.lang.String,int[],int)>",
            "<org.codehaus.jackson.map.deser.UntypedObjectDeserializer$1: void <clinit>()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writePPFieldName(java.lang.String,boolean)>",
            "<com.turntable.gk.GameDubo: void shadow24(android.graphics.Canvas)>",
            "<org.codehaus.jackson.JsonGenerator: void writeArrayFieldStart(java.lang.String)>",
            "<org.codehaus.jackson.map.util.JSONWrappedObject: void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeBoolean(boolean)>",
            "<com.turntable.gk.BackgroundThread: void access$0(com.turntable.gk.BackgroundThread)>",
            "<com.turntable.gk.common.json.dao.request.GameStartRq: void setFruits(com.turntable.gk.common.json.dao.request.Fruits)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void a(org.codehaus.jackson.org.objectweb.asm.ByteVector)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void <init>(org.codehaus.jackson.io.IOContext,int,org.codehaus.jackson.ObjectCodec,java.io.OutputStream)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeObject(java.lang.Object)>",
            "<com.turntable.gk.common.json.dao.response.BaseResponseBean: java.lang.String getJver()>",
            "<org.codehaus.jackson.type.JavaType: boolean isEnumType()>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>",
            "<org.codehaus.jackson.impl.StreamBasedParserBase: int releaseBuffered(java.io.OutputStream)>",
            "<org.codehaus.jackson.map.deser.Creator$PropertyBased: java.lang.Object build(org.codehaus.jackson.map.deser.PropertyValueBuffer)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean isDataHandler(java.lang.Class)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: void configure(org.codehaus.jackson.JsonParser$Feature,boolean)>",
            "<org.codehaus.jackson.util.CharTypes: byte[] copyHexBytes()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void rehash()>",
            "<org.codehaus.jackson.node.BinaryNode: byte[] getBinaryValue()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void unshareNames()>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void _throwUnquotedSpace(int,java.lang.String)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: byte[] finishCurrentSegment()>",
            "<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectWriter,org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers: void <init>()>",
            "<org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id[] values()>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.node.ArrayNode addArray()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser()>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: void setFrom(java.lang.Object)>",
            "<org.codehaus.jackson.smile.SmileGenerator: org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()>",
            "<org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: void registerSubtype(java.lang.Class,java.lang.String)>",
            "<org.codehaus.jackson.map.util.EnumValues: org.codehaus.jackson.map.util.EnumValues constructFromToString(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.map.util.ClassUtil: boolean isConcrete(java.lang.reflect.Member)>",
            "<org.codehaus.jackson.node.BaseJsonNode: org.codehaus.jackson.JsonNode findValue(java.lang.String)>",
            "<com.turntable.gk.TestGame: void regListener()>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: void <init>(org.codehaus.jackson.map.DeserializerFactory)>",
            "<org.codehaus.jackson.map.ser.impl.RawSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.String getClassName()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$BooleanArraySerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.JsonNode readTree(java.io.File)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$ClassSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.LongNode: java.lang.Number getNumberValue()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeEndObject()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()>",
            "<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.Base64Variant getBase64Variant()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>",
            "<org.codehaus.jackson.smile.SmileGenerator: org.codehaus.jackson.smile.SmileGenerator configure(org.codehaus.jackson.smile.SmileGenerator$Feature,boolean)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NumericNode numberNode(int)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.'annotation'.Annotation findAnnotation(java.lang.Class,org.codehaus.jackson.map.introspect.Annotated,boolean,boolean,boolean)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer)>",
            "<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$UUIDDeserializer: java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: boolean _parseBooleanPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter: void <init>()>",
            "<org.codehaus.jackson.sym.Name: java.lang.String getName()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: void <init>()>",
            "<org.codehaus.jackson.node.ObjectNode: java.lang.String toString()>",
            "<org.codehaus.jackson.smile.SmileParser: int _decodeUtf8_4(int)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: int hashCode()>",
            "<org.codehaus.jackson.map.MappingJsonFactory: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$StringFactoryKeyDeserializer: void <init>(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.JsonProcessingException: org.codehaus.jackson.JsonLocation getLocation()>",
            "<com.turntable.gk.SelectGlod: void access$4(com.turntable.gk.SelectGlod)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeQuotedInt(int)>",
            "<org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature valueOf(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: byte[] toByteArray()>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: java.text.DateFormat getDateFormat()>",
            "<com.turntable.gk.MusicPlayer: com.turntable.gk.MusicPlayer getMediaPlayer()>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void beforeArrayValues(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription: java.lang.Class getRawClass()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType specialize(org.codehaus.jackson.type.JavaType,java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: int getAnnotationCount()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver()>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: java.util.Date parseDate(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer: void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setIcon(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$FloatDeser: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.deser.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$LongArraySerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ser.SerializerBase: void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeEndArray()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: boolean a(org.codehaus.jackson.org.objectweb.asm.ClassWriter,int,int[],int)>",
            "<org.codehaus.jackson.node.MissingNode: org.codehaus.jackson.JsonToken asToken()>",
            "<com.turntable.gk.SelectGlod: void initData()>",
            "<org.codehaus.jackson.io.SerializedString: byte[] asUnquotedUTF8()>",
            "<org.codehaus.jackson.map.ObjectMapper: void <init>(org.codehaus.jackson.JsonFactory,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.DeserializerProvider)>",
            "<com.turntable.gk.date.LoginRes$CardList: void <init>()>",
            "<org.codehaus.jackson.JsonLocation: java.lang.String toString()>",
            "<com.turntable.gk.common.json.dao.request.GameStartRq: java.lang.String getUid()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser: void <init>()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: void <init>(org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.common.json.dao.request.GameGetRq: java.lang.String getUid()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.SelectGlod: void top_up_Refresh(java.lang.String)>",
            "<com.turntable.gk.net.SNetWork: java.lang.Object postRequest(java.lang.String,java.lang.String,java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitMaxs(int,int)>",
            "<org.codehaus.jackson.node.BigIntegerNode: java.math.BigInteger getBigIntegerValue()>",
            "<org.codehaus.jackson.map.SerializationConfig: void <clinit>()>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: java.io.Writer append(char)>",
            "<org.codehaus.jackson.map.ser.impl.RawSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature valueOf(java.lang.String)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.File)>",
            "<org.codehaus.jackson.map.AbstractTypeResolver: void <init>()>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.jsontype.TypeResolverBuilder getDefaultTyper(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.JsonLocation: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getParameterType(int)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.Name find(int,int,int)>",
            "<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>",
            "<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext createChildObjectContext()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$LongKD: void <init>()>",
            "<com.weibopay.impl.Tools: java.lang.String mask(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeNumber(int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.bean.paybean.SdkRes$Head: void <init>()>",
            "<org.codehaus.jackson.JsonParser: int getValueAsInt(int)>",
            "<org.codehaus.jackson.map.ser.JsonValueSerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: org.codehaus.jackson.map.TypeDeserializer buildTypeDeserializer(org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _reportInvalidOther(int)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeFieldName(org.codehaus.jackson.SerializableString)>",
            "<org.codehaus.jackson.node.ValueNode: org.codehaus.jackson.JsonNode path(int)>",
            "<com.turntable.gk.TestGame: android.view.View$OnLongClickListener getLongClickListener()>",
            "<org.codehaus.jackson.xc.DataHandlerJsonDeserializer: javax.activation.DataHandler deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$LongSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(byte[])>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader updatingReader(java.lang.Object)>",
            "<org.codehaus.jackson.util.TokenBuffer: void _reportUnsupportedOperation()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator: java.lang.Class enumTypeFor(java.util.EnumMap)>",
            "<org.codehaus.jackson.node.IntNode: java.math.BigDecimal getDecimalValue()>",
            "<org.codehaus.jackson.map.util.ClassUtil: void <init>()>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.impl.JsonParserBase: org.codehaus.jackson.JsonStreamContext getParsingContext()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase$1: void <clinit>()>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void visitClassType(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setRemitType(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$AtomicReferenceDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.weibopay.impl.PayConfig: void <init>()>",
            "<org.codehaus.jackson.impl.JsonParserBase: void <init>(org.codehaus.jackson.io.IOContext,int)>",
            "<com.turntable.gk.common.json.dao.request.Test: void <init>()>",
            "<com.turntable.gk.SelectGlod: void startHtml5Old(java.lang.String,java.lang.String)>",
            "<com.turntable.gk.GameDubo: void startInit(int,java.lang.String)>",
            "<org.codehaus.jackson.jaxrs.JsonMappingExceptionMapper: void <init>()>",
            "<com.turntable.gk.BackgroundThread: void workAdded(long)>",
            "<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: org.codehaus.jackson.JsonNode contentSchema()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$CreatorProperty: int getCreatorIndex()>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: void remove()>",
            "<org.codehaus.jackson.sym.Name: int hashCode()>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer _handleUnknownValueDeserializer(org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getRedoFlag()>",
            "<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.map.type.ArrayType withTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: boolean hasDeserializerModifiers()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeEndArray()>",
            "<org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.map.util.LRUMap: boolean removeEldestEntry(java.util.Map$Entry)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void visitOuterClass(java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.type.TypeReference: java.lang.reflect.Type getType()>",
            "<com.weibopay.impl.SdkVersionCheck: void versionCheck(android.os.Handler,int)>",
            "<org.codehaus.jackson.impl.JsonParserBase: org.codehaus.jackson.JsonLocation getCurrentLocation()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$AnnotatedProperty: java.lang.annotation.Annotation[] getAnnotations()>",
            "<com.turntable.gk.SelectGlod$3: void onClick(android.content.DialogInterface,int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$FloatDeserializer: java.lang.Float deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setProductId(java.lang.String)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: int getStars()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer: void serialize(java.lang.Double,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.net.FileTool: java.io.InputStream readFile(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setSerializerFactory(org.codehaus.jackson.map.SerializerFactory)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDefaltTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.NumericNode numberNode(byte)>",
            "<org.codehaus.jackson.impl.ReaderBasedParserBase: boolean loadMore()>",
            "<org.codehaus.jackson.util.TextBuffer: char[] _charArray(int)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<com.turntable.gk.net.SNetworkProxy$2: java.lang.Object callService()>",
            "<com.turntable.gk.common.json.dao.response.Game: com.turntable.gk.common.json.dao.response.Gun[] getGun()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializers: void add(org.codehaus.jackson.map.deser.StdKeyDeserializer)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean hasMethod(org.codehaus.jackson.annotate.JsonMethod[],org.codehaus.jackson.annotate.JsonMethod)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _skipCComment()>",
            "<com.turntable.gk.common.json.dao.request.TopUpRq: void setMoney(long)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void <init>(org.codehaus.jackson.io.IOContext,int,org.codehaus.jackson.ObjectCodec,java.io.OutputStream,byte[],int,boolean)>",
            "<org.codehaus.jackson.xc.XmlAdapterJsonDeserializer: void <init>(javax.xml.bind.'annotation'.adapters.XmlAdapter,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getSharingFlag()>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.node.ObjectNode addObject()>",
            "<org.codehaus.jackson.map.type.TypeFactory: void <clinit>()>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void a(org.codehaus.jackson.org.objectweb.asm.ClassWriter,java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator$Feature: boolean enabledByDefault()>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(org.codehaus.jackson.JsonParser)>",
            "<com.turntable.gk.TestGame: void login(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: java.lang.Number getNumberValue()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializationConfig: void fromAnnotations(java.lang.Class)>",
            "<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonStreamContext getParent()>",
            "<com.turntable.gk.R$style: void <init>()>",
            "<org.codehaus.jackson.map.util.ObjectBuffer$Node: void linkNext(org.codehaus.jackson.map.util.ObjectBuffer$Node)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder: java.lang.Object _constructArray(int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: void <init>(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.util.LinkedNode: org.codehaus.jackson.map.util.LinkedNode next()>",
            "<org.codehaus.jackson.node.BaseJsonNode: org.codehaus.jackson.JsonParser traverse()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _skipCComment()>",
            "<org.codehaus.jackson.util.TextBuffer: void resetWithEmpty()>",
            "<org.codehaus.jackson.util.BufferRecycler$CharBufferType: org.codehaus.jackson.util.BufferRecycler$CharBufferType[] values()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference,org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder: java.lang.Object appendCompletedChunk(java.lang.Object,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeRawValue(java.lang.String,int,int)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getIconPath()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void c()>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String)>",
            "<org.codehaus.jackson.JsonGenerator: void writeBooleanField(java.lang.String,boolean)>",
            "<org.codehaus.jackson.node.DecimalNode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$InetAddressDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.net.NetManage$1: java.lang.Object callService()>",
            "<com.weibopay.impl.PreparePay: android.content.pm.PackageInfo getApkInfo(android.content.Context)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setBgUrl(java.lang.String)>",
            "<org.codehaus.jackson.type.JavaType: void _assertSubclass(java.lang.Class,java.lang.Class)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.net.SNetworkTask: boolean isCancel()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations)>",
            "<com.turntable.gk.BackgroundThread$1: void run()>",
            "<org.codehaus.jackson.map.deser.Creator$PropertyBased: org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$CollectionSerializer: void serializeContentsUsing(java.util.Collection,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getCardNick()>",
            "<com.turntable.gk.SelectGlod: void setResult(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializationConfig: void clearHandlers()>",
            "<org.codehaus.jackson.map.deser.PropertyValue$Regular: void assign(java.lang.Object)>",
            "<org.codehaus.jackson.smile.SmileParser: org.codehaus.jackson.sym.Name _findDecodedFromSymbols(int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findDeserializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.introspect.Annotated: void <init>()>",
            "<org.codehaus.jackson.node.ObjectNode$NoFieldsIterator: boolean hasNext()>",
            "<com.turntable.gk.AppInstallReceiver: void <init>()>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)>",
            "<org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.node.BooleanNode getFalse()>",
            "<com.turntable.gk.UpdateAPK$1: void <init>(com.turntable.gk.UpdateAPK)>",
            "<org.codehaus.jackson.node.NodeCursor$Object: void <init>(org.codehaus.jackson.JsonNode,org.codehaus.jackson.node.NodeCursor)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeNumber(int)>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createMapDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializerProvider)>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: int calcHash(char[],int,int)>",
            "<org.codehaus.jackson.map.ser.SerializerBase: boolean isDefaultSerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer: void <clinit>()>",
            "<org.codehaus.jackson.impl.JsonWriteContext: void <init>(int,org.codehaus.jackson.impl.JsonWriteContext)>",
            "<com.weibopay.impl.PreparePay: int access$1(com.weibopay.impl.PreparePay)>",
            "<org.codehaus.jackson.map.type.TypeParser$MyTokenizer: java.lang.String getAllInput()>",
            "<org.codehaus.jackson.JsonParser$Feature: boolean enabledByDefault()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers: org.codehaus.jackson.map.JsonSerializer enumSetSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeRawValue(char[],int,int)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: java.math.BigDecimal getDecimalValue()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: void visitAttribute(org.codehaus.jackson.org.objectweb.asm.Attribute)>",
            "<com.weibopay.http.SNetworkProxy$2: java.lang.String callService()>",
            "<org.codehaus.jackson.map.ser.FilterProvider: void <init>()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: java.math.BigInteger getBigIntegerValue()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getDeviceId()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: int getItem(int)>",
            "<org.codehaus.jackson.map.ser.impl.StaticListSerializerBase: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Member getMember()>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.node.ObjectNode removeAll()>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <clinit>()>",
            "<org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()>",
            "<org.codehaus.jackson.map.ser.StdKeySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean isIndexedType(java.lang.Class)>",
            "<org.codehaus.jackson.util.TokenBuffer: void close()>",
            "<org.codehaus.jackson.map.ser.JsonValueSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.TextBuffer: void resetWithCopy(char[],int,int)>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(java.lang.Class)>",
            "<org.codehaus.jackson.map.type.ClassKey: void reset(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$IntKD: void <init>()>",
            "<com.turntable.gk.GameDubo: void shadow23(android.graphics.Canvas)>",
            "<com.turntable.gk.R$drawable: void <init>()>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: org.codehaus.jackson.map.jsontype.TypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver)>",
            "<org.codehaus.jackson.node.IntNode: long getLongValue()>",
            "<org.codehaus.jackson.smile.SmileParser: void _decodeLongAscii()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeBytes(byte[])>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.smile.SmileBufferRecycler: void releaseSeenNamesBuffer(java.lang.Object[])>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket: void <init>(java.lang.String,org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket)>",
            "<org.codehaus.jackson.smile.SmileParser: org.codehaus.jackson.sym.Name _decodeLongUnicodeName(int[],int,int)>",
            "<com.turntable.gk.date.LoginRes$Body: void setCertNo(java.lang.String)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void convertNumberToBigInteger()>",
            "<org.codehaus.jackson.type.JavaType: java.lang.String getGenericSignature()>",
            "<org.codehaus.jackson.io.NumberInput: long parseLong(char[],int,int)>",
            "<org.codehaus.jackson.smile.SmileParser: int _readUnsignedVInt()>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.io.MergedStream: int read(byte[],int,int)>",
            "<com.turntable.gk.TestGame: void access$20(com.turntable.gk.TestGame,com.turntable.gk.common.json.dao.response.Game)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type[] getParameterTypes()>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getUri()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.Name addName(java.lang.String,int,int)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: java.lang.String getDefDescLine1()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: int calcHash(int)>",
            "<org.codehaus.jackson.util.CharTypes: void <clinit>()>",
            "<com.turntable.gk.GameDubo: java.lang.String setfont(int)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPayerContact(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.DeserializationConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer: java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.GameDubo: void shadow8(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ArrayDeserializer: org.codehaus.jackson.map.deser.JsonNodeDeserializer$ArrayDeserializer getInstance()>",
            "<com.turntable.gk.date.LoginRes$CardList: void setColor(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String findSerializablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<org.codehaus.jackson.JsonNode: double getDoubleValue()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.GlobalInfo: void <init>()>",
            "<org.codehaus.jackson.map.util.ClassUtil: void unwrapAndThrowAsIAE(java.lang.Throwable)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: boolean handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$FloatBuilder getFloatBuilder()>",
            "<com.turntable.gk.common.json.dao.request.Fruits: int getBl()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: char _decodeEscaped()>",
            "<org.codehaus.jackson.map.deser.TimestampDeserializer: void <init>()>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: java.lang.String _getCharDesc(int)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRawUTF8String(byte[],int,int)>",
            "<org.codehaus.jackson.sym.Name2: boolean equals(int[],int)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$LongSerializer: void serialize(java.lang.Long,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.InternCache: java.lang.String intern(java.lang.String)>",
            "<com.turntable.gk.TestGame: boolean access$4(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: int getTextLength()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileParser _createJsonParser(java.io.InputStream,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: org.codehaus.jackson.mrbean.BeanBuilder implement(boolean)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode remove(java.lang.String)>",
            "<org.codehaus.jackson.type.JavaType: int containedTypeCount()>",
            "<org.codehaus.jackson.JsonParser$Feature: boolean enabledIn(int)>",
            "<org.codehaus.jackson.sym.Name: boolean equals(java.lang.Object)>",
            "<com.turntable.gk.App: java.io.InputStream getIs(java.lang.String)>",
            "<org.codehaus.jackson.node.NullNode: long getValueAsLong(long)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassGroup: void setGroupType(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$ByteKD: void <init>()>",
            "<org.codehaus.jackson.smile.SmileParser$Feature: int collectDefaults()>",
            "<com.turntable.gk.GameDubo: void shadow15(android.graphics.Canvas)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeRawValue(char[],int,int)>",
            "<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Short _parseShort(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitLineNumber(int,org.codehaus.jackson.org.objectweb.asm.Label)>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeString(org.codehaus.jackson.SerializableString)>",
            "<com.turntable.gk.date.LoginRes$Body: void setTrueName(java.lang.String)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: org.codehaus.jackson.map.ser.BeanSerializer createDummy(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser: void <init>()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: boolean isGroovyMetaClassSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>",
            "<org.codehaus.jackson.map.deser.PropertyValueBuffer: void bufferMapProperty(java.lang.Object,java.lang.Object)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isCreatorVisible(java.lang.reflect.Member)>",
            "<com.turntable.gk.TestGame: void checkDe()>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket: org.codehaus.jackson.sym.CharsToNameCanonicalizer$Bucket getNext()>",
            "<org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String,java.lang.Throwable)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
            "<org.codehaus.jackson.io.SerializedString: byte[] asQuotedUTF8()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: org.codehaus.jackson.JsonStreamContext getOutputContext()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.util.TokenBuffer$Segment: void <clinit>()>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: java.lang.String getFieldName()>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getCardId()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: void <init>(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.impl.ReaderBasedNumericParser: void <init>(org.codehaus.jackson.io.IOContext,int,java.io.Reader)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: void copyArrays()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: int _parseIntPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty: void <init>(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.deser.SettableBeanProperty,org.codehaus.jackson.map.util.Annotations,boolean)>",
            "<org.codehaus.jackson.map.TreeMapper: void <init>()>",
            "<com.turntable.gk.UpdateAPK$3: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void <init>(org.codehaus.jackson.sym.BytesToNameCanonicalizer,boolean)>",
            "<com.turntable.gk.net.FileTool: java.lang.String getContent(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: void <init>()>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setUid(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$SqlDateDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$StackTraceElementDeserializer: void <init>()>",
            "<org.codehaus.jackson.schema.JsonSchema: void <init>(org.codehaus.jackson.node.ObjectNode)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeRaw(char)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.'annotation'.Annotation getContextAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.annotate.JsonTypeInfo$Id: org.codehaus.jackson.annotate.JsonTypeInfo$Id valueOf(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator$SharedStringNode: void <init>(java.lang.String,int,org.codehaus.jackson.smile.SmileGenerator$SharedStringNode)>",
            "<org.codehaus.jackson.util.BufferRecycler: byte[] balloc(int)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeRawValue(char[],int,int)>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean checkUTF16(int)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void visitTypeArgument()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeRawValue(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.AnyGetterWriter: void <init>(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.ser.MapSerializer)>",
            "<org.codehaus.jackson.map.JsonMappingException: java.lang.String toString()>",
            "<org.codehaus.jackson.map.util.JSONWrappedObject: void <init>(java.lang.String,java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.node.ContainerNode$NoStringsIterator: java.lang.Object next()>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode _set(int,org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$EnumKD: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: int getModifiers()>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: org.codehaus.jackson.JsonToken reset(boolean,int,int,int)>",
            "<org.codehaus.jackson.type.JavaType: boolean isFinal()>",
            "<com.turntable.gk.net.FileTool: java.io.InputStream getIs(android.content.Context,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer: org.codehaus.jackson.map.JsonDeserializer getDeserializer(java.lang.Class)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _releaseBuffers()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.Deserializers[] access$000()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Type getGenericType()>",
            "<org.codehaus.jackson.node.ArrayNode: boolean _sameChildren(java.util.ArrayList)>",
            "<com.turntable.gk.date.LoginRes$Body: void setBindedMobilePhoneNo(java.lang.String)>",
            "<com.turntable.gk.SelectGlod: void methodOfPayment(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>",
            "<org.codehaus.jackson.io.SerializedString: char[] asQuotedChars()>",
            "<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.map.ser.impl.JsonSerializerMap: org.codehaus.jackson.map.JsonSerializer find(org.codehaus.jackson.map.ser.SerializerCache$TypeKey)>",
            "<org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,org.codehaus.jackson.map.JsonMappingException$Reference)>",
            "<org.codehaus.jackson.map.util.ClassUtil: boolean isCollectionMapOrArray(java.lang.Class)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.JsonToken _nextAfterName()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addMixOvers(java.lang.reflect.Constructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,boolean)>",
            "<com.turntable.gk.net.RequestInfo: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.node.ObjectNode: void put(java.lang.String,float)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void a(org.codehaus.jackson.org.objectweb.asm.Label,org.codehaus.jackson.org.objectweb.asm.Label[])>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>",
            "<com.turntable.gk.SelectGlod: void onPause()>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$StringSerializer: void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.TreeMapper: org.codehaus.jackson.JsonNode readTree(java.net.URL)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String getName()>",
            "<org.codehaus.jackson.node.NumericNode: int getValueAsInt(int)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider disable(org.codehaus.jackson.JsonParser$Feature,boolean)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void _reportUnexpectedChar(int,java.lang.String)>",
            "<com.weibopay.impl.Tools: java.lang.String getLocalMacAddress(android.content.Context)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setCardNum(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void writeEndObject(org.codehaus.jackson.JsonGenerator,int)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: void mergeChild(org.codehaus.jackson.sym.CharsToNameCanonicalizer)>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: org.codehaus.jackson.org.objectweb.asm.ByteVector b(int,int)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: void resetUntyped(java.lang.Class)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void addSign(java.lang.String)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: void setDesc(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>",
            "<org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer: void <init>()>",
            "<org.codehaus.jackson.smile.SmileParser: char[] getTextCharacters()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.util.JSONPObject: void <init>(java.lang.String,java.lang.Object,java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: org.codehaus.jackson.org.objectweb.asm.Attribute a(org.codehaus.jackson.org.objectweb.asm.Attribute[],java.lang.String,int,int,char[],int,org.codehaus.jackson.org.objectweb.asm.Label[])>",
            "<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object getNullValue()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$PropertyDescriptors: java.util.Map _processReadMethod(java.util.Map,java.lang.reflect.Method,java.lang.String,java.util.List)>",
            "<org.codehaus.jackson.map.deser.PropertyValue$Regular: void <init>(org.codehaus.jackson.map.deser.PropertyValue,java.lang.Object,org.codehaus.jackson.map.deser.SettableBeanProperty)>",
            "<org.codehaus.jackson.node.ArrayNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.type.TypeParser: java.util.List parseTypes(org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig copyDeserializationConfig()>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: void configure(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode get(int)>",
            "<org.codehaus.jackson.map.deser.BaseNodeDeserializer: org.codehaus.jackson.JsonNode deserializeAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeFieldName(java.lang.String)>",
            "<org.codehaus.jackson.node.TextNode: java.lang.String getTextValue()>",
            "<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext createChildArrayContext(int,int)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeStartArray()>",
            "<org.codehaus.jackson.map.ser.NullSerializer: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: boolean hasAsValueAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>",
            "<com.turntable.gk.SelectGlod$6: void onProgressChanged(android.webkit.WebView,int)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeRawValue(java.lang.String,int,int)>",
            "<org.codehaus.jackson.map.introspect.MemberKey: java.lang.String toString()>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode path(int)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getCertNo()>",
            "<org.codehaus.jackson.io.UTF32Reader: void close()>",
            "<com.turntable.gk.bean.RequestInfo: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.io.NumberOutput: int outputLong(long,char[],int)>",
            "<org.codehaus.jackson.map.deser.UntypedObjectDeserializer: java.util.Map mapObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getOrderAmount()>",
            "<com.turntable.gk.bean.DrawCashRes$Body: java.lang.String getMinQuota()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$UUIDDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer: java.math.BigDecimal deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void <clinit>()>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.text.DateFormat getISO8601Format(java.util.TimeZone)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: void addOrOverride(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.smile.SmileFactory: void <init>(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<org.codehaus.jackson.sym.Name3: boolean equals(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.TextBuffer: char[] emptyAndGetCurrentSegment()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addConstructorMixIns(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: void <init>(org.codehaus.jackson.map.deser.impl.BeanPropertyMap$Bucket[])>",
            "<org.codehaus.jackson.util.BufferRecycler: char[] allocCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType)>",
            "<org.codehaus.jackson.map.TypeSerializer: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: java.lang.String getClassName()>",
            "<com.turntable.gk.SelectGlod$11: void executeWork()>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: java.lang.Class materializeClass(java.lang.Class)>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.CustomDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config)>",
            "<org.codehaus.jackson.JsonEncoding: boolean isBigEndian()>",
            "<org.codehaus.jackson.Version: void <init>(int,int,int,java.lang.String)>",
            "<com.turntable.gk.SelectGlod: java.lang.String mask(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.Base64: boolean isWhiteSpace(char)>",
            "<com.turntable.gk.GameDubo: void startSingleGun(int,java.lang.String)>",
            "<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType _narrow(java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addMixUnders(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<com.turntable.gk.bean.VirtualCreditCard: void <init>()>",
            "<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withFilters(org.codehaus.jackson.map.ser.FilterProvider)>",
            "<org.codehaus.jackson.node.LongNode: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<org.codehaus.jackson.JsonParser$NumberType: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Class getEnumClass()>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int size()>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.util.JsonParserSequence: void addFlattenedActiveParsers(java.util.List)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeNumber(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getSubmitType()>",
            "<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: int getIntValue()>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeNumber(float)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeStartArray()>",
            "<org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder: void <init>(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: int getSs()>",
            "<com.turntable.gk.TestGame$3: void <init>(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.smile.SmileGenerator: int _shortUTF8Encode(char[],int,int)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$IntDeser: int[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.type.SimpleType: boolean isContainerType()>",
            "<org.codehaus.jackson.map.deser.CustomDeserializerFactory: void addSpecificMapping(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>",
            "<org.codehaus.jackson.map.ObjectReader: void <init>(org.codehaus.jackson.map.ObjectReader,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,java.lang.Object)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeNumber(long)>",
            "<org.codehaus.jackson.util.JsonParserSequence: void <init>(org.codehaus.jackson.JsonParser[])>",
            "<org.codehaus.jackson.node.TreeTraversingParser: long getLongValue()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPageUrl(java.lang.String)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: java.lang.String getReason()>",
            "<org.codehaus.jackson.util.TextBuffer: void resetWithShared(char[],int,int)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializerBase: void <init>(java.lang.Class,boolean)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Boolean findSerializationSortAlphabetically(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: void assignIndexes()>",
            "<com.turntable.gk.UpdateAPK$2: void <init>(com.turntable.gk.UpdateAPK,java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeRaw(java.lang.String,int,int)>",
            "<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonToken nextValue()>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValueUsingView(org.codehaus.jackson.JsonGenerator,java.lang.Object,java.lang.Class)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)>",
            "<org.codehaus.jackson.map.ser.ScalarSerializerBase: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name findName(int[],int,int,int)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter filteredWriter(org.codehaus.jackson.map.ser.FilterProvider)>",
            "<com.turntable.gk.R$bool: void <init>()>",
            "<com.turntable.gk.AlertDialogView$2: void <init>(com.turntable.gk.AlertDialogView,android.app.AlertDialog)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addFactoryMixIns(java.lang.Class)>",
            "<org.codehaus.jackson.node.ArrayNode: java.util.Iterator getElements()>",
            "<org.codehaus.jackson.map.SerializerFactory: void <init>()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: int findBestBucket()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.deser.SettableBeanProperty findBackReference(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>",
            "<org.codehaus.jackson.JsonToken: boolean isNumeric()>",
            "<org.codehaus.jackson.util.TextBuffer: java.lang.String contentsAsString()>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView: org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: boolean isHandled(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.JsonGenerator: void writeStringField(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishString()>",
            "<org.codehaus.jackson.node.ArrayNode: java.util.List findParents(java.lang.String,java.util.List)>",
            "<org.codehaus.jackson.map.TreeMapper: void writeTree(org.codehaus.jackson.JsonNode,java.io.OutputStream)>",
            "<org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.type.JavaType _narrow(java.lang.Class)>",
            "<org.codehaus.jackson.io.IOContext: boolean isResourceManaged()>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.ObjectNode objectNode()>",
            "<org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.type.JavaType withTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable memberMethods()>",
            "<org.codehaus.jackson.map.annotate.JsonSerialize$Typing: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileParser: java.lang.String getCurrentName()>",
            "<com.turntable.gk.net.NetManage$1: void <init>(com.turntable.gk.net.NetManage,java.lang.String,com.turntable.gk.net.SNetworkCallBack,java.lang.String,java.lang.String,java.lang.Class)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$CreatorProperty: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void resolveCreators(boolean)>",
            "<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String getName()>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: void <init>(int)>",
            "<com.turntable.gk.TestGame: com.turntable.gk.common.json.dao.response.Gun[] getGun()>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: long getValueAsLong(long)>",
            "<org.codehaus.jackson.JsonGenerator: void writeNullField(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.Attribute: boolean isCodeAttribute()>",
            "<org.codehaus.jackson.map.ObjectMapper$1: void addBeanDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setIdx(java.lang.String)>",
            "<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonNode readValueAsTree()>",
            "<org.codehaus.jackson.map.DeserializationProblemHandler: boolean handleUnknownProperty(org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.JsonDeserializer,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type getType()>",
            "<com.turntable.gk.bean.DrawCashRes$Body: java.lang.String getQuota()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.TypeReference)>",
            "<com.turntable.gk.TestGame: void checkAdd()>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$1: void <clinit>()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: boolean isHandled(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator: void remove()>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: boolean isThereAreAsyncTask(java.lang.String)>",
            "<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object)>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(java.lang.Class)>",
            "<org.codehaus.jackson.node.NullNode: org.codehaus.jackson.node.NullNode getInstance()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.type.JavaType getContentType()>",
            "<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.util.TokenBuffer: boolean isClosed()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String getPropertyName()>",
            "<com.turntable.gk.BaseActivity: void <init>()>",
            "<org.codehaus.jackson.JsonNode: double getValueAsDouble()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void <init>(org.codehaus.jackson.jaxrs.Annotations[])>",
            "<org.codehaus.jackson.impl.JsonParserBase: int getTokenLineNr()>",
            "<org.codehaus.jackson.JsonNode: java.util.List findValuesAsText(java.lang.String)>",
            "<org.codehaus.jackson.node.ArrayNode: void _add(org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: void _reset()>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void writeStartObject(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.JsonParser asParser(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.DeserializerProvider withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void indentArraysWith(org.codehaus.jackson.impl.Indenter)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _constructDeserializer(org.codehaus.jackson.map.DeserializationConfig,java.lang.Object)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void _writeEndObject()>",
            "<org.codehaus.jackson.JsonNode: boolean isDouble()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getFullName()>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void reset()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void _reportError(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>",
            "<com.turntable.gk.common.util.payTools.PartnerConfig: java.lang.String getPid(int)>",
            "<org.codehaus.jackson.annotate.JsonTypeInfo$As: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromNumber(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.smile.SmileParser: void _skipIncomplete()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitAttribute(org.codehaus.jackson.org.objectweb.asm.Attribute)>",
            "<org.codehaus.jackson.node.BigIntegerNode: boolean isIntegralNumber()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeRawUTF8String(byte[],int,int)>",
            "<org.codehaus.jackson.smile.SmileParser: void _reportInvalidSharedName(int)>",
            "<org.codehaus.jackson.smile.SmileParser: boolean mayContainRawBinary()>",
            "<org.codehaus.jackson.smile.SmileGenerator: org.codehaus.jackson.smile.SmileBufferRecycler _smileBufferRecycler()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper setDeserializationConfig(org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer: void <init>()>",
            "<com.turntable.gk.GameDubo: void initGoodLuck()>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter: void <clinit>()>",
            "<org.codehaus.jackson.node.BigIntegerNode: java.lang.Number getNumberValue()>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature: void <init>(java.lang.String,int,boolean)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializers: java.util.HashMap constructAll()>",
            "<com.turntable.gk.SelectGlod$10: void onclick()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer: void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<com.turntable.gk.UpdateAPK: void access$5(com.turntable.gk.UpdateAPK,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BigIntegerDeserializer: java.math.BigInteger deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonNode: boolean isNumber()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getRemitCode()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object _deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setExt1(java.lang.String)>",
            "<org.codehaus.jackson.JsonGenerator$Feature: void <init>(java.lang.String,int,boolean)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void close()>",
            "<com.turntable.gk.SelectGlod: android.view.View$OnClickListener getPopOnClickListener(android.widget.PopupWindow,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$TokenBufferSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: int getOffset()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: long getLongValue()>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: void serializeContentsUsing(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeBytes(byte[],int,int)>",
            "<org.codehaus.jackson.node.NullNode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.ext.OptionalHandlerFactory: boolean hasInterfaceStartingWith(java.lang.Class,java.lang.String)>",
            "<org.codehaus.jackson.node.ContainerNode$NoNodesIterator: boolean hasNext()>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: java.util.Map _deserializeUsingCreator(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedClass construct(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$AtomicReferenceDeserializer: java.util.concurrent.atomic.AtomicReference deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.MissingNode: double getValueAsDouble(double)>",
            "<org.codehaus.jackson.map.deser.impl.BeanPropertyMap$IteratorImpl: java.lang.Object next()>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.reflect.AnnotatedElement getAnnotated()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: boolean hasTextCharacters()>",
            "<org.codehaus.jackson.map.type.TypeBase: org.codehaus.jackson.type.JavaType copyHandlers(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,java.lang.Class[])>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValueUsingView(java.io.Writer,java.lang.Object,java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPlatformSignMsg()>",
            "<org.codehaus.jackson.smile.SmileParser: void _finishToken()>",
            "<org.codehaus.jackson.smile.SmileParser: java.lang.String[] _expandSeenNames(java.lang.String[])>",
            "<com.turntable.gk.date.LoginRes: void <init>()>",
            "<org.codehaus.jackson.node.NullNode: double getValueAsDouble(double)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: java.lang.String _parseUnusualFieldName2(int,int,int[])>",
            "<org.codehaus.jackson.mrbean.BeanUtil: java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object deserializeTypedFromAny(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()>",
            "<org.codehaus.jackson.util.TokenBuffer: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: void a(int,java.lang.String,char[],boolean,org.codehaus.jackson.org.objectweb.asm.MethodVisitor)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void close()>",
            "<org.codehaus.jackson.JsonNode: byte[] getBinaryValue()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>",
            "<org.codehaus.jackson.io.NumberOutput: int calcLongStrLength(long)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void close()>",
            "<org.codehaus.jackson.node.BaseJsonNode: void <init>()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<org.codehaus.jackson.map.Deserializers$None: org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ObjectMapper$DefaultTyping: org.codehaus.jackson.map.ObjectMapper$DefaultTyping[] values()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: java.lang.String getText()>",
            "<org.codehaus.jackson.map.type.TypeBindings: int getBindingCount()>",
            "<org.codehaus.jackson.JsonFactory: void setGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean)>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: java.lang.String getNewestVersion()>",
            "<com.turntable.gk.GameDubo: void shadow2(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi: void <init>(org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer[])>",
            "<org.codehaus.jackson.node.MissingNode: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: void setAnyGetter(org.codehaus.jackson.map.ser.AnyGetterWriter)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void copyCurrentEvent(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.node.NodeCursor$Array: boolean currentHasChildren()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: java.util.List getProperties()>",
            "<com.turntable.gk.bean.VirtualCreditCard: java.lang.String getLimit()>",
            "<org.codehaus.jackson.map.DeserializationConfig: void setNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)>",
            "<com.turntable.gk.SelectGlod: void startSdk()>",
            "<org.codehaus.jackson.JsonGenerator: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.node.LongNode: double getDoubleValue()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean isPropertiesAccessible(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext createChildArrayContext()>",
            "<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _reportInvalidToken(java.lang.String)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType fromClass(java.lang.Class)>",
            "<org.codehaus.jackson.smile.SmileUtil: int zigzagDecode(int)>",
            "<com.turntable.gk.SelectGlod: void access$20(com.turntable.gk.SelectGlod,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$IntKD: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$CharArraySerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.org.objectweb.asm.Attribute: int a()>",
            "<org.codehaus.jackson.JsonParser: byte getByteValue()>",
            "<org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap: org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: org.codehaus.jackson.org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.map.DeserializationConfig$Feature: int getMask()>",
            "<org.codehaus.jackson.smile.SmileParser: void _decodeShortAsciiValue(int)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer$1: void <clinit>()>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<com.turntable.gk.net.FileTool: void <init>()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void <clinit>()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getRemitType()>",
            "<com.turntable.gk.AlertDialogView: void <init>(android.content.Context,android.app.AlertDialog,java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void <init>()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeIdResolverBase: void <init>(org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.GameDubo: void musicPlayer()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.DeserializationConfig$Feature: void <clinit>()>",
            "<com.turntable.gk.date.LoginRes$Body: void setFrozenBalance(java.lang.String)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: java.lang.String _handleUnusualFieldName(int)>",
            "<com.turntable.gk.common.json.dao.request.GameStartRq: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitLdcInsn(java.lang.Object)>",
            "<com.turntable.gk.common.json.dao.response.Game: java.lang.String getOrderId()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder: void <init>()>",
            "<org.codehaus.jackson.Version: boolean isUknownVersion()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser: boolean[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitAttribute(org.codehaus.jackson.org.objectweb.asm.Attribute)>",
            "<org.codehaus.jackson.map.module.SimpleDeserializers: org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void a(int,int,int)>",
            "<org.codehaus.jackson.map.ObjectWriter: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer: void <init>()>",
            "<com.turntable.gk.TestGame: android.widget.TextView access$1(com.turntable.gk.TestGame)>",
            "<com.turntable.gk.GameDubo: void shadow10(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.module.SimpleSerializers: org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void addLongFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.Base64Variant: void <init>(org.codehaus.jackson.Base64Variant,java.lang.String,int)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer buildEnumMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List)>",
            "<com.turntable.gk.common.json.dao.response.Gun: void setGl(int)>",
            "<org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter: org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.util.Set)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type[] values()>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.node.ArrayNode: void insert(int,long)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$AtomicReferenceDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.NodeCursor$RootValue: org.codehaus.jackson.JsonToken nextToken()>",
            "<org.codehaus.jackson.io.JsonStringEncoder: byte[] quoteAsUTF8(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.introspect.BasicBeanDescription forDeserialization(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: void setIndex(int)>",
            "<com.turntable.gk.GameDubo: void thanSizeCanvas(android.graphics.Canvas,int)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: java.lang.String _calcName(java.lang.Class)>",
            "<org.codehaus.jackson.node.ArrayNode: void add(java.math.BigDecimal)>",
            "<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: java.lang.String printLocalDate(org.joda.time.ReadablePartial)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeSharedNameReference(int)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.beans.PropertyDescriptor findPropertyDescriptor(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BigIntegerDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: java.lang.Class getValueClass()>",
            "<org.codehaus.jackson.Version: int compareTo(org.codehaus.jackson.Version)>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.util.EnumValues,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.smile.SmileParserBootstrapper: org.codehaus.jackson.smile.SmileParser constructParser(int,int,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeString(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: boolean a(org.codehaus.jackson.org.objectweb.asm.ClassWriter,org.codehaus.jackson.org.objectweb.asm.Frame,int)>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers: void <clinit>()>",
            "<org.codehaus.jackson.Base64Variant: java.lang.String encode(byte[],boolean)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonToken _initForReading(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String findTypeName(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.util.TextBuffer: char[] getTextBuffer()>",
            "<com.turntable.gk.UpgradeActivity$1: void handleMessage(android.os.Message)>",
            "<com.turntable.gk.bean.VirtualCreditCard: java.lang.String getUsed()>",
            "<org.codehaus.jackson.node.POJONode: long getValueAsLong(long)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Class findDeserializationType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<com.turntable.gk.common.json.dao.request.GameLoginRq: java.lang.String getToken()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeNonShortFieldName(java.lang.String,int)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer: void <init>()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.TestGame: void access$19(com.turntable.gk.TestGame)>",
            "<com.turntable.gk.TestGame: void music()>",
            "<com.turntable.gk.bean.BaseResult: void <init>()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase: java.lang.String getPropertyName()>",
            "<org.codehaus.jackson.JsonGenerator: void writeString(org.codehaus.jackson.SerializableString)>",
            "<com.turntable.gk.UpgradeActivity: void <init>()>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean)>",
            "<org.codehaus.jackson.map.ser.impl.JsonSerializerMap: void <init>(java.util.Map)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[])>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializers: void <init>()>",
            "<org.codehaus.jackson.smile.SmileParser: void <init>(org.codehaus.jackson.io.IOContext,int,int,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer,java.io.InputStream,byte[],int,int,boolean)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker withGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.POJONode POJONode(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$CharArraySerializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer findCustomSerializer(java.lang.Class,org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.smile.Tool: java.io.InputStream inputStream(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ShortArraySerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.annotate.JsonSerialize$Typing: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: void <init>(org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.JsonToken: char[] asCharArray()>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector$GetterMethodFilter: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$TokenBufferDeserializer: void <init>()>",
            "<com.turntable.gk.bean.DrawCashRes$Card: java.lang.String getLast()>",
            "<com.turntable.gk.common.util.NewcoJsonUtil: java.lang.Object json2Object(java.lang.String,java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.introspect.MethodFilter getDeserializationMethodFilter(org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: org.codehaus.jackson.org.objectweb.asm.Type getObjectType(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers: org.codehaus.jackson.map.ser.ContainerSerializerBase collectionSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer: void serialize(java.lang.Boolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.exc.UnrecognizedPropertyException: java.lang.Class getReferringClass()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: int getTextOffset()>",
            "<org.codehaus.jackson.JsonParser$Feature: org.codehaus.jackson.JsonParser$Feature valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.util.JSONWrappedObject: org.codehaus.jackson.type.JavaType getSerializationType()>",
            "<org.codehaus.jackson.node.ArrayNode: int hashCode()>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String findEnumValue(java.lang.Enum)>",
            "<com.games.AdReciver: void <init>()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.Object instantiateBean(boolean)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: boolean a(org.codehaus.jackson.org.objectweb.asm.MethodWriter,int,byte[])>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _reportInvalidInitial(int)>",
            "<org.codehaus.jackson.node.ArrayNode: void insertPOJO(int,java.lang.Object)>",
            "<org.codehaus.jackson.Version: int hashCode()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)>",
            "<org.codehaus.jackson.JsonFactory: void setParserFeature(org.codehaus.jackson.JsonParser$Feature,boolean)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeUTF8Segments(byte[],int,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureReader: void accept(org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeFieldName(org.codehaus.jackson.SerializableString)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader()>",
            "<org.codehaus.jackson.smile.SmileFactory: void <init>()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setSharingData(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.type.JavaType getContentType()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPayerName(java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectWriter: java.lang.String writeValueAsString(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: void <init>(java.lang.Class,boolean)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.jsontype.NamedType: int hashCode()>",
            "<org.codehaus.jackson.map.module.SimpleSerializers: void <init>()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void _throwInvalidSpace(int)>",
            "<org.codehaus.jackson.JsonLocation: long getCharOffset()>",
            "<org.codehaus.jackson.node.NodeCursor$Array: void <init>(org.codehaus.jackson.JsonNode,org.codehaus.jackson.node.NodeCursor)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int[] growArrayBy(int[],int)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _unknownType()>",
            "<com.turntable.gk.date.LoginRes$Body: void setWbNickName(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer getContentDeserializer()>",
            "<org.codehaus.jackson.map.type.TypeBindings: void _addPlaceholder(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.PropertyValue$Map: void assign(java.lang.Object)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)>",
            "<com.turntable.gk.GlobalInfo$1: void runRefresh()>",
            "<com.weibopay.impl.PreparePay: boolean access$8(com.weibopay.impl.PreparePay,android.content.Context,java.lang.String)>",
            "<com.turntable.gk.TestGame: void withdrawal()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void <clinit>()>",
            "<org.codehaus.jackson.map.Deserializers$None: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$CharacterDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: void b()>",
            "<org.codehaus.jackson.map.deser.Creator$StringBased: void <init>(java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.node.BaseJsonNode: java.util.List findValues(java.lang.String,java.util.List)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeNumber(java.lang.String)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$ArrayDeser: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.impl.JsonParserBase: int getTokenColumnNr()>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.jsontype.TypeResolverBuilder getDefaultTyper(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.JsonNode: boolean isBoolean()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$BigIntegerDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: int getModifiers()>",
            "<com.turntable.gk.date.UploadLogRes$Body: java.lang.String getName()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _skipCppComment()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.lang.String baseTypeName()>",
            "<org.codehaus.jackson.node.ObjectNode: java.util.List findValues(java.lang.String,java.util.List)>",
            "<com.turntable.gk.common.util.payTools.RequestParameterUtil: java.lang.String getMD5(byte[])>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String toString()>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.KeyDeserializer findKeyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.JsonDeserializer _findRootDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.type.TypeBindings: void _resolve()>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: java.lang.reflect.Method getGetter()>",
            "<org.codehaus.jackson.map.type.CollectionType: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.util.TokenBuffer$Segment: void set(int,org.codehaus.jackson.JsonToken)>",
            "<com.turntable.gk.SelectGlod: java.lang.String createMerchantOrderTime()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int _decodeUtf8_2(int)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerModifier: java.util.List orderProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double: void <init>(java.lang.Class,org.codehaus.jackson.map.JsonSerializer,java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$CreatorProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<com.weibopay.impl.PreparePay: boolean retrieveApkFromAssets(android.content.Context,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.impl.InetAddressSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeLongString(char[],int,int)>",
            "<org.codehaus.jackson.node.BigIntegerNode: int getIntValue()>",
            "<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext createChildObjectContext(int,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitFieldInsn(int,java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[])>",
            "<com.turntable.gk.date.LoginRes$Body: void setMemberId(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$CollectionSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: void <init>(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _throwIllegalSurrogate(int)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: org.codehaus.jackson.jaxrs.JacksonJsonProvider disable(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.map.DeserializerFactory: void <init>()>",
            "<com.turntable.gk.UpdateAPK: void downloadTheFile(java.lang.String)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: void <init>()>",
            "<org.codehaus.jackson.node.DecimalNode: int hashCode()>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>",
            "<org.codehaus.jackson.map.ser.PropertyBuilder: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>",
            "<org.codehaus.jackson.JsonGenerator: void writeFieldName(org.codehaus.jackson.io.SerializedString)>",
            "<org.codehaus.jackson.map.deser.PropertyValue$Map: void <init>(org.codehaus.jackson.map.deser.PropertyValue,java.lang.Object,java.lang.Object)>",
            "<org.codehaus.jackson.map.SerializationConfig: java.lang.Class findMixInClassFor(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeFromString(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.impl.TimeZoneSerializer: void serialize(java.util.TimeZone,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer: org.codehaus.jackson.JsonNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.JsonMappingException: java.lang.String getMessage()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: void setPkPassType(int)>",
            "<com.turntable.gk.common.json.dao.response.Gun: void <init>()>",
            "<com.turntable.gk.TestGame: long access$7(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.DeserializerFactory withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers)>",
            "<com.turntable.gk.R$string: void <init>()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object deserializeUsingCreator(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.util.TokenBuffer$Segment: org.codehaus.jackson.JsonToken type(int)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,org.codehaus.jackson.type.JavaType[])>",
            "<com.turntable.gk.SelectGlod: java.lang.String getLocalMacAddress()>",
            "<com.turntable.gk.bean.paybean.HtmlPayData: void <init>()>",
            "<com.turntable.gk.bean.DrawCashRes$Card: void setCardId(java.lang.String)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: void set(org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature,boolean)>",
            "<com.turntable.gk.date.LoginRes$Body: int getSkipPayPassType()>",
            "<org.codehaus.jackson.io.IOContext: void releaseConcatBuffer(char[])>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$DoubleDeser: double[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Class getAnnotated()>",
            "<org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder: org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder init(org.codehaus.jackson.annotate.JsonTypeInfo$Id,org.codehaus.jackson.map.jsontype.TypeIdResolver)>",
            "<org.codehaus.jackson.map.ser.CustomSerializerFactory: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$CharKD: java.lang.Object _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: void addOrOverride(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: void generateDefaultConstructor(org.codehaus.jackson.org.objectweb.asm.ClassWriter,java.lang.String)>",
            "<com.turntable.gk.SelectGlod: void access$14(com.turntable.gk.SelectGlod,java.lang.String)>",
            "<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeField(java.lang.String,java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode put(java.lang.String,org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: void close()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeNumber(java.math.BigDecimal)>",
            "<org.codehaus.jackson.JsonGenerator: void writeNumberField(java.lang.String,double)>",
            "<com.turntable.gk.App: void saveCookies()>",
            "<org.codehaus.jackson.smile.SmileParser: java.lang.String _addDecodedToSymbols(int,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode _bindAndCloseAsTree(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.map.exc.UnrecognizedPropertyException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Class,java.lang.String)>",
            "<org.codehaus.jackson.node.POJONode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.map.Module: void <init>()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: boolean hasConcreteSetter()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$NullProvider: void <init>(org.codehaus.jackson.type.JavaType,java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: org.codehaus.jackson.type.JavaType getValueType()>",
            "<com.turntable.gk.common.json.dao.request.ThanSizeRq: void setUid(java.lang.String)>",
            "<org.codehaus.jackson.impl.JsonParserBase$1: void <clinit>()>",
            "<com.turntable.gk.common.json.dao.request.Fruits: void setTe(int)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeString(java.lang.String)>",
            "<org.codehaus.jackson.io.JsonStringEncoder: void <clinit>()>",
            "<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.type.JavaType _narrow(java.lang.Class)>",
            "<org.codehaus.jackson.JsonStreamContext: boolean inObject()>",
            "<com.turntable.gk.BuildConfig: void <init>()>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode remove(int)>",
            "<com.turntable.gk.TestGame: void onActivityResult(int,int,android.content.Intent)>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureReader: void acceptType(org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor)>",
            "<com.turntable.gk.common.util.payTools.PartnerConfig: java.lang.String getSharePid(int)>",
            "<org.codehaus.jackson.map.type.TypeParser$MyTokenizer: java.lang.String nextToken()>",
            "<org.codehaus.jackson.node.ValueNode: java.lang.String toString()>",
            "<org.codehaus.jackson.Version: int getPatchLevel()>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getBarcode()>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: void setDefaultConstructor(java.lang.reflect.Constructor)>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.text.DateFormat getRFC1123Format(java.util.TimeZone)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$NumberDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>",
            "<org.codehaus.jackson.map.DeserializerFactory: org.codehaus.jackson.map.DeserializerFactory withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.NumericNode numberNode(float)>",
            "<org.codehaus.jackson.map.type.ArrayType: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.KeyDeserializer: void <init>()>",
            "<org.codehaus.jackson.smile.SmileParser$Feature: org.codehaus.jackson.smile.SmileParser$Feature valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer: java.lang.Double deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.map.util.JSONPObject: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileParser: org.codehaus.jackson.JsonToken _handleSharedString(int)>",
            "<org.codehaus.jackson.node.TextNode: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: int newNameType(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withValueToUpdate(java.lang.Object)>",
            "<org.codehaus.jackson.JsonNode: boolean getBooleanValue()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String descFor(java.lang.reflect.AnnotatedElement)>",
            "<org.codehaus.jackson.node.NodeCursor$Object: org.codehaus.jackson.JsonToken nextToken()>",
            "<org.codehaus.jackson.node.BooleanNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.reflect.Type getGenericType()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: java.lang.String getFgColor()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$DoubleArraySerializer: void <init>()>",
            "<com.turntable.gk.GameDubo: void <clinit>()>",
            "<com.turntable.gk.TestGame$ExitListenerReceiver: void <init>(com.turntable.gk.TestGame)>",
            "<com.turntable.gk.SelectGlod: void <init>()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.Reader,java.lang.Class)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: void <init>(org.codehaus.jackson.util.BufferRecycler)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setSignType(java.lang.String)>",
            "<com.weibopay.impl.Tools: java.lang.String toJson(java.lang.Object)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeNumber(java.lang.String)>",
            "<org.codehaus.jackson.node.DecimalNode: int getIntValue()>",
            "<com.turntable.gk.MusicPlayer: void playMusic(int,boolean)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileGenerator _createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.io.IOContext)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int _decodeCharForError(int)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _reportInvalidToken(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>",
            "<com.turntable.gk.App: void <init>()>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: int getTextOffset()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _verifyValueWrite(java.lang.String)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>",
            "<org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getProductName()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][])>",
            "<com.turntable.gk.bean.VersionCheckRes: void <init>()>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: boolean usesStaticTyping(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.io.JsonStringEncoder: int _appendByteEscape(int,org.codehaus.jackson.util.ByteArrayBuilder,int)>",
            "<com.turntable.gk.R$id: void <init>()>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getMerchantIdentity()>",
            "<org.codehaus.jackson.map.ser.SerializerBase: void <init>(java.lang.Class,boolean)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode findValue(java.lang.String)>",
            "<com.turntable.gk.SelectGlod: void access$16(com.turntable.gk.SelectGlod,java.lang.String)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _typeResolverFromXmlElements(org.codehaus.jackson.map.introspect.AnnotatedMember)>",
            "<org.codehaus.jackson.node.TreeTraversingParser$1: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedMethod _constructCreatorMethod(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeNumber(java.math.BigInteger)>",
            "<org.codehaus.jackson.map.SerializationConfig: void <init>(org.codehaus.jackson.map.SerializationConfig,java.util.HashMap,org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.ser.FilterProvider)>",
            "<com.turntable.gk.bean.DrawCashRes$Body: void <init>()>",
            "<com.turntable.gk.SelectGlod$7: void <init>(com.turntable.gk.SelectGlod)>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: void add(com.turntable.gk.net.SNetworkTask)>",
            "<com.turntable.gk.GlobalInfo: void setGlodCoins(java.lang.String,long)>",
            "<org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature[] values()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.String toString()>",
            "<org.codehaus.jackson.org.objectweb.asm.FieldWriter: void a(org.codehaus.jackson.org.objectweb.asm.ByteVector)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable ignoredMemberMethods()>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.introspect.BasicBeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.util.TextBuffer: void <clinit>()>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void writeStartArray(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void <init>(org.codehaus.jackson.org.objectweb.asm.ClassWriter,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: void <init>(byte[])>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.util.List findSubtypes(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findEnumType(java.lang.Enum)>",
            "<org.codehaus.jackson.map.deser.BaseNodeDeserializer$1: void <clinit>()>",
            "<org.codehaus.jackson.map.ObjectMapper: void registerSubtypes(java.lang.Class[])>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object getInternalSetting(java.lang.Object)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType arrayType(java.lang.Class)>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: void setType(int)>",
            "<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String toString()>",
            "<org.codehaus.jackson.node.BigIntegerNode: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<com.turntable.gk.common.json.dao.request.TopUpRq: void setUid(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: org.codehaus.jackson.org.objectweb.asm.Type getType(java.lang.Class)>",
            "<org.codehaus.jackson.JsonFactory: void disableParserFeature(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.smile.SmileGenerator: boolean isEnabled(org.codehaus.jackson.smile.SmileGenerator$Feature)>",
            "<com.weibopay.http.SNetWork: java.lang.Object postRequest(java.lang.String,java.util.HashMap,java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.impl.JsonSerializerMap: int size()>",
            "<org.codehaus.jackson.map.util.RootNameLookup: void <init>()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.type.ClassKey: void <init>()>",
            "<org.codehaus.jackson.map.ser.impl.SimpleFilterProvider: org.codehaus.jackson.map.ser.impl.SimpleFilterProvider addFilter(java.lang.String,org.codehaus.jackson.map.ser.BeanPropertyFilter)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void setNullKeySerializer(org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.util.TextBuffer: char[] buildResultArray()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket: int length()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers: void <init>()>",
            "<org.codehaus.jackson.node.DecimalNode: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<com.turntable.gk.TestGame: com.turntable.gk.common.json.dao.response.Game access$23(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.Object defaultValue(java.lang.Class)>",
            "<org.codehaus.jackson.map.SerializationConfig: void setMixInAnnotations(java.util.Map)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.HierarchicType _findSuperClassChain(java.lang.reflect.Type,java.lang.Class)>",
            "<org.codehaus.jackson.annotate.JsonMethod: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.smile.SmileConstants: void <init>()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.JavaType)>",
            "<com.turntable.gk.UpgradeActivity: void startUpgrade(java.lang.String)>",
            "<org.codehaus.jackson.node.TextNode: void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String)>",
            "<org.codehaus.jackson.map.SerializationConfig: void enable(org.codehaus.jackson.map.SerializationConfig$Feature)>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)>",
            "<com.turntable.gk.common.net.MyX509TrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: org.codehaus.jackson.map.ObjectMapper getConfiguredMapper()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.TypeSerializer findPropertyContentTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeNumber(double)>",
            "<org.codehaus.jackson.node.BigIntegerNode: long getLongValue()>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: java.lang.String getInternalName()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializer: void <init>(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.JsonDeserializer,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _flushBuffer()>",
            "<org.codehaus.jackson.map.ser.JsonValueSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.smile.SmileGenerator: int _findSeenName(java.lang.String)>",
            "<org.codehaus.jackson.JsonNode: int getValueAsInt()>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.map.DeserializationConfig: void <clinit>()>",
            "<com.turntable.gk.GameDubo: void shadow6(android.graphics.Canvas)>",
            "<org.codehaus.jackson.JsonToken: boolean isScalarValue()>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileParser createJsonParser(byte[])>",
            "<org.codehaus.jackson.node.ArrayNode: void add(java.lang.String)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode set(int,org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.smile.SmileParser: byte[] _decodeBase64(org.codehaus.jackson.Base64Variant)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: int _decodeUtf8_4(int)>",
            "<com.turntable.gk.net.SNetworkProxy$2: void <init>(com.turntable.gk.net.SNetworkProxy,java.lang.String,com.turntable.gk.net.SNetworkCallBack,java.lang.String)>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers: java.util.Collection provide()>",
            "<org.codehaus.jackson.map.deser.UntypedObjectDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.type.MapType: java.lang.String toString()>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: org.codehaus.jackson.org.objectweb.asm.ByteVector putLong(long)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer buildIndexedListSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: int getPropertyCount()>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.node.ContainerNode removeAll()>",
            "<org.codehaus.jackson.map.SerializerFactory: org.codehaus.jackson.map.SerializerFactory withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier)>",
            "<org.codehaus.jackson.node.TextNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.sym.Name1: void <clinit>()>",
            "<org.codehaus.jackson.JsonFactory: boolean isParserFeatureEnabled(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.JsonNode: long getValueAsLong()>",
            "<com.turntable.gk.net.RequestInfo: com.turntable.gk.net.RequestInfo valueOf(java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.Attribute: org.codehaus.jackson.org.objectweb.asm.Label[] getLabels()>",
            "<com.turntable.gk.SelectGlod: void startSdk(com.weibopay.impl.OrderInfo)>",
            "<org.codehaus.jackson.map.type.ArrayType: void <init>(org.codehaus.jackson.type.JavaType,java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void serializeTypedFields(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.SelectGlod: void startHtml5(java.lang.String,java.lang.String)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: void <init>()>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter: void writeIndentation(org.codehaus.jackson.JsonGenerator,int)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.String getManagedReferenceName()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$ByteArraySerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicIntegerSerializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$LongSerializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$IntegerDeserializer: void <init>(java.lang.Class,java.lang.Integer)>",
            "<com.turntable.gk.GlobalInfo: int getsaveSdk(java.lang.String)>",
            "<com.turntable.gk.common.util.NewcoJsonUtil: java.lang.String object2Json(java.lang.Object)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void <init>(int)>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void writeEndObject(org.codehaus.jackson.JsonGenerator,int)>",
            "<com.turntable.gk.App: java.lang.String getLocalMacAddress()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: boolean isEnabled(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassAdapter: void visitEnd()>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$FileSerializer: void serialize(java.io.File,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$FileSerializer: void <init>()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType fastSimpleType(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.impl.JsonParserBase: boolean isClosed()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeNumber(float)>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: java.lang.String toString()>",
            "<org.codehaus.jackson.jaxrs.JsonParseExceptionMapper: javax.ws.rs.core.Response toResponse(org.codehaus.jackson.JsonParseException)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: int a(byte[],int)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: boolean hasSerializer()>",
            "<org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: java.util.Collection _collectAndResolve(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector,java.util.Collection)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers: void add(java.lang.Class,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.map.Deserializers$None: org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: int access$000(org.codehaus.jackson.util.BufferRecycler$ByteBufferType)>",
            "<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeBytes(byte[],int,int)>",
            "<org.codehaus.jackson.map.deser.impl.StringCollectionDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.org.objectweb.asm.FieldWriter: int a()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class)>",
            "<org.codehaus.jackson.io.UTF8Writer: void write(char[])>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: boolean isGroovyMetaClassGetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassStatusType: void <clinit>()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[])>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: short b(byte[],int)>",
            "<org.codehaus.jackson.map.deser.Creator$PropertyBased: void <init>(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.deser.SettableBeanProperty[],org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.deser.SettableBeanProperty[])>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: void setFilterId(java.lang.Object)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.common.json.dao.request.ThanSizeRq: void setThanS(com.turntable.gk.common.json.dao.request.ThanSize)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.type.TypeBindings: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerModifier: org.codehaus.jackson.map.ser.BeanSerializerBuilder updateBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.ser.BeanSerializerBuilder)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getOrderTime()>",
            "<org.codehaus.jackson.map.deser.BaseNodeDeserializer: org.codehaus.jackson.node.ObjectNode deserializeObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: int getSize()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Class findDeserializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.lang.String getPropertyName()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: int readByte(int)>",
            "<org.codehaus.jackson.map.deser.ThrowableDeserializer: java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$PropertyDescriptors: java.beans.PropertyDescriptor findByMethodName(java.lang.String)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector$Pair: java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.DeserializationContext: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: java.lang.String getDesc()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeLongString(java.lang.String)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeNumber(int)>",
            "<com.turntable.gk.common.net.MyX509TrustManager: void <init>()>",
            "<org.codehaus.jackson.io.JsonStringEncoder: org.codehaus.jackson.io.JsonStringEncoder getInstance()>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer getNullSerializer()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: java.lang.Number getNumberValue()>",
            "<com.turntable.gk.SelectGlod: java.lang.String access$0(com.turntable.gk.SelectGlod)>",
            "<org.codehaus.jackson.JsonLocation: long getByteOffset()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerModifier: java.util.List changeProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription selectType()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _finishString()>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.map.deser.EnumResolver: org.codehaus.jackson.map.deser.EnumResolver constructUnsafe(java.lang.Class,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<com.turntable.gk.common.json.dao.response.Game: java.lang.String getWin()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])>",
            "<com.turntable.gk.App: void onCreate()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: void setBgColor(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethodMap: int size()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: float _parseFloatPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(java.io.Writer,java.lang.Object)>",
            "<org.codehaus.jackson.map.util.JSONWrappedObject: void <init>(java.lang.String,java.lang.String,java.lang.Object,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer: void serialize(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.util.StdDateFormat: void <clinit>()>",
            "<org.codehaus.jackson.JsonGenerator: void enableFeature(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$PrimitiveOrWrapperDeserializer: java.lang.Object getNullValue()>",
            "<org.codehaus.jackson.node.BigIntegerNode: double getDoubleValue()>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeObject(java.lang.Object)>",
            "<org.codehaus.jackson.util.TokenBuffer$Segment: org.codehaus.jackson.util.TokenBuffer$Segment next()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: java.util.Date _parseDate(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.node.ArrayNode removeAll()>",
            "<com.turntable.gk.common.json.dao.request.Fruits: void setBl(int)>",
            "<org.codehaus.jackson.io.MergedStream: void freeMergedBuffer()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void setAnnotationsToUse(org.codehaus.jackson.jaxrs.Annotations[])>",
            "<com.turntable.gk.TestGame: void setListener()>",
            "<org.codehaus.jackson.util.InternCache: boolean removeEldestEntry(java.util.Map$Entry)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitInsn(int)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isIsGetterVisible(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicBooleanSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeString(char[],int,int)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Object handleUnknownProperties(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializerProvider)>",
            "<com.turntable.gk.common.util.payTools.RequestParameterUtil: java.lang.String sign(java.lang.String,java.lang.String,java.security.PrivateKey)>",
            "<org.codehaus.jackson.io.UTF32Reader: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream,byte[],int,int,boolean)>",
            "<org.codehaus.jackson.map.DeserializationConfig: void setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectReader reader(java.lang.Class)>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.type.JavaType getKeyType()>",
            "<org.codehaus.jackson.map.ser.BeanSerializerModifier: void <init>()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicBooleanSerializer: void serialize(java.util.concurrent.atomic.AtomicBoolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeRawUTF8String(byte[],int,int)>",
            "<org.codehaus.jackson.map.type.ClassKey: int hashCode()>",
            "<org.codehaus.jackson.node.MissingNode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$FloatArraySerializer: void <init>()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$LongDeserializer: java.lang.Long deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeStartObject()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPayType(java.lang.String)>",
            "<org.codehaus.jackson.map.JsonMappingException: void prependPath(org.codehaus.jackson.map.JsonMappingException$Reference)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void setCurrentSegmentLength(int)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterMethodFilter: void <clinit>()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean isIgnorableConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: void setUrl(java.lang.String)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: java.lang.String getPkPassVersion()>",
            "<org.codehaus.jackson.JsonNode: long getValueAsLong(long)>",
            "<com.turntable.gk.common.util.payTools.PartnerConfig: java.lang.String getShareAcctId(int)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.JsonLocation getStartLocation(java.lang.Object)>",
            "<org.codehaus.jackson.node.ArrayNode: void insert(int,int)>",
            "<org.codehaus.jackson.util.VersionUtil: void <init>()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeStartArray()>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: void addGetter(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.io.NumberInput: boolean inLongRange(java.lang.String,boolean)>",
            "<com.turntable.gk.TestGame: com.turntable.gk.GameDubo addHeadView()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig getSerializationConfig()>",
            "<org.codehaus.jackson.map.util.ObjectBuffer$Node: org.codehaus.jackson.map.util.ObjectBuffer$Node next()>",
            "<org.codehaus.jackson.JsonGenerator: void writeBinary(byte[])>",
            "<org.codehaus.jackson.map.deser.impl.StringCollectionDeserializer: java.util.Collection deserializeUsingCustom(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Collection)>",
            "<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonToken nextToken()>",
            "<org.codehaus.jackson.node.ContainerNode$NoNodesIterator: void <clinit>()>",
            "<org.codehaus.jackson.node.LongNode: boolean isIntegralNumber()>",
            "<org.codehaus.jackson.JsonNode: boolean isBigInteger()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: java.lang.String _getText2(org.codehaus.jackson.JsonToken)>",
            "<org.codehaus.jackson.node.DoubleNode: java.math.BigDecimal getDecimalValue()>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: java.lang.Object getFrom()>",
            "<org.codehaus.jackson.impl.ReaderBasedParserBase: void <init>(org.codehaus.jackson.io.IOContext,int,java.io.Reader)>",
            "<org.codehaus.jackson.map.deser.PropertyValueBuffer: void <init>(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,int)>",
            "<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType narrowContentsBy(java.lang.Class)>",
            "<com.turntable.gk.common.json.dao.response.Game: java.lang.String getgA()>",
            "<org.codehaus.jackson.JsonNode: void <init>()>",
            "<org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer: void <init>()>",
            "<com.turntable.gk.BackgroundThread$1: void <init>(com.turntable.gk.BackgroundThread)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: org.codehaus.jackson.org.objectweb.asm.Type getType(java.lang.String)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: void write(int)>",
            "<org.codehaus.jackson.map.type.SimpleType: org.codehaus.jackson.map.type.SimpleType construct(java.lang.Class)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: int getTe()>",
            "<org.codehaus.jackson.org.objectweb.asm.signature.SignatureWriter: org.codehaus.jackson.org.objectweb.asm.signature.SignatureVisitor visitTypeArgument(char)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getProductNum()>",
            "<org.codehaus.jackson.sym.Name3: boolean equals(int,int)>",
            "<org.codehaus.jackson.map.deser.EnumDeserializer$FactoryBasedDeserializer: void <init>(java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.smile.SmileParser: org.codehaus.jackson.JsonToken _handleFieldName()>",
            "<org.codehaus.jackson.map.ObjectWriter: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: com.turntable.gk.common.util.payTools.ThreadStack getMyLinkedList()>",
            "<org.codehaus.jackson.JsonNode: java.math.BigInteger getBigIntegerValue()>",
            "<org.codehaus.jackson.JsonParser: double getValueAsDouble(double)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitVarInsn(int,int)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: java.lang.IllegalArgumentException reportInvalidChar(org.codehaus.jackson.Base64Variant,char,int,java.lang.String)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setName(java.lang.String)>",
            "<com.turntable.gk.SelectGlod: void access$23(com.turntable.gk.SelectGlod,java.lang.String)>",
            "<org.codehaus.jackson.JsonGenerator: org.codehaus.jackson.JsonGenerator configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)>",
            "<com.turntable.gk.common.json.dao.response.GameStartRp: com.turntable.gk.common.json.dao.response.Game getGame()>",
            "<com.weibopay.impl.PreparePay: boolean checkSdkInst(android.content.Context)>",
            "<com.turntable.gk.bean.VirtualCreditCard: int getActivated()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void release()>",
            "<org.codehaus.jackson.jaxrs.Annotations: void <clinit>()>",
            "<org.codehaus.jackson.impl.ReaderBasedParserBase: char getNextChar(java.lang.String)>",
            "<org.codehaus.jackson.node.IntNode: boolean equals(java.lang.Object)>",
            "<com.turntable.gk.UpdateAPK: long getSDSize()>",
            "<org.codehaus.jackson.node.IntNode: boolean isInt()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: void <clinit>()>",
            "<org.codehaus.jackson.type.JavaType: java.lang.Object getValueHandler()>",
            "<org.codehaus.jackson.map.DeserializationConfig: void setSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<org.codehaus.jackson.map.SerializerProvider: java.lang.Class getSerializationView()>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object _bindAndClose(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.map.SerializationConfig: void setSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$DoubleKD: void <init>()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$1: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.turntable.gk.common.json.dao.request.GameGetRq: void <init>()>",
            "<com.weibopay.impl.PreparePay: void install()>",
            "<org.codehaus.jackson.node.DecimalNode: org.codehaus.jackson.JsonToken asToken()>",
            "<com.turntable.gk.TestGame: void access$28(com.turntable.gk.TestGame,int)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.JsonToken _nextTokenNotInObject(int)>",
            "<org.codehaus.jackson.util.BufferRecycler: void <init>()>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.JsonDeserializer _createDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: java.util.Collection collectAndResolveSubtypes(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<com.turntable.gk.common.util.payTools.Base64: void <clinit>()>",
            "<org.codehaus.jackson.node.TextNode: void <clinit>()>",
            "<org.codehaus.jackson.map.type.ArrayType: boolean isContainerType()>",
            "<org.codehaus.jackson.map.jsontype.NamedType: void setName(java.lang.String)>",
            "<org.codehaus.jackson.io.BaseReader: void freeBuffers()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String findEnumValue(java.lang.Enum)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _appendSingleEscape(int,char[],int)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$IntArraySerializer: void <init>()>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getMemberId()>",
            "<com.turntable.gk.MusicPlayer: void <clinit>()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty: void set(java.lang.Object,java.lang.Object)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeEndArray()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.JsonNode: boolean has(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.CollectionDeserializer: org.codehaus.jackson.map.JsonDeserializer getContentDeserializer()>",
            "<org.codehaus.jackson.map.deser.StdDeserializers: java.util.HashMap constructAll()>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.Class findDeserializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: void serializeContentsUsing(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeStringField(java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void appendTwoBytes(int)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeNumber(float)>",
            "<org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter: org.codehaus.jackson.map.ser.BeanPropertyWriter constructViewBased(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[])>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.impl.TimeZoneSerializer: void <init>()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter prettyPrintingWriter(org.codehaus.jackson.PrettyPrinter)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: void <clinit>()>",
            "<org.codehaus.jackson.Base64Variant: void <init>(org.codehaus.jackson.Base64Variant,java.lang.String,boolean,char,int)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: org.codehaus.jackson.map.introspect.AnnotatedMember getMember()>",
            "<org.codehaus.jackson.io.MergedStream: void reset()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer: java.lang.Class handledType()>",
            "<org.codehaus.jackson.map.ObjectMapper: boolean canSerialize(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: void <init>(org.codehaus.jackson.map.ser.BeanSerializerBuilder)>",
            "<org.codehaus.jackson.type.JavaType: boolean hasRawClass(java.lang.Class)>",
            "<com.turntable.gk.GameDubo: void sleep(int,int,int)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer: void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.DeserializationConfig$Feature: int collectDefaults()>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase: void <init>(org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ser.JsonValueSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void initTables(int)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty: org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.deser.AbstractDeserializer: void <init>(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.deser.Creator$Delegating: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.common.json.dao.request.Fruits: int getAp()>",
            "<org.codehaus.jackson.node.LongNode: boolean equals(java.lang.Object)>",
            "<com.turntable.gk.date.UploadLogRes$Body: void setName(java.lang.String)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: int size()>",
            "<org.codehaus.jackson.node.ArrayNode: void insertNull(int)>",
            "<com.turntable.gk.bean.DrawCashRes$Card: void setBalance(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getSignContent()>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void flushCachedSerializers()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: float getFloatValue()>",
            "<org.codehaus.jackson.node.BinaryNode: boolean isBinary()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$DoubleDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.weibopay.impl.RequestInfo: void <init>(java.lang.String,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap: org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: void serialize(java.util.EnumMap,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.Testdd: void <init>()>",
            "<org.codehaus.jackson.util.MinimalPrettyPrinter: void beforeObjectEntries(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: java.lang.String getBgColor()>",
            "<org.codehaus.jackson.org.objectweb.asm.Frame: void c(int)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl: void <init>(org.codehaus.jackson.map.Serializers[],org.codehaus.jackson.map.ser.BeanSerializerModifier[])>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeFieldName(java.lang.String,boolean)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: void setNonTrivialBaseType(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: org.codehaus.jackson.map.JsonSerializer build()>",
            "<com.turntable.gk.net.SNetworkProxy: void postRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.Class)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _skipComment()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitTryCatchBlock(org.codehaus.jackson.org.objectweb.asm.Label,org.codehaus.jackson.org.objectweb.asm.Label,org.codehaus.jackson.org.objectweb.asm.Label,java.lang.String)>",
            "<org.codehaus.jackson.xc.DataHandlerJsonDeserializer$1: java.lang.String getContentType()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedParameter: java.lang.reflect.Type getParameterType()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicLongSerializer: void serialize(java.util.concurrent.atomic.AtomicLong,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.turntable.gk.bean.Head: java.lang.String getMsg()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getVersion()>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void <init>(org.codehaus.jackson.map.ser.BeanSerializer)>",
            "<com.turntable.gk.GameDubo: void shadow9(android.graphics.Canvas)>",
            "<org.codehaus.jackson.node.DoubleNode: java.lang.Number getNumberValue()>",
            "<org.codehaus.jackson.node.ArrayNode: void addPOJO(java.lang.Object)>",
            "<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setNeedDyDesc(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.JsonValueSerializer: boolean isNaturalTypeWithStdHandling(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: org.codehaus.jackson.sym.CharsToNameCanonicalizer createRoot()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeEndArray()>",
            "<com.turntable.gk.UpdateAPK: void deleteAllFile(java.lang.String)>",
            "<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findPropertyTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.io.MergedStream: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream,byte[],int,int)>",
            "<org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>",
            "<org.codehaus.jackson.util.CharTypes: char[] copyHexChars()>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void <init>(org.codehaus.jackson.util.BufferRecycler)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: org.codehaus.jackson.map.introspect.BasicBeanDescription getBeanDescription()>",
            "<com.turntable.gk.bean.DrawCashRes$Card: void setBankCode(java.lang.String)>",
            "<org.codehaus.jackson.map.util.ClassUtil: boolean isConcrete(java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$1: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: void <clinit>()>",
            "<org.codehaus.jackson.JsonNode: org.codehaus.jackson.JsonNode get(java.lang.String)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void spacesInObjectEntries(boolean)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: org.codehaus.jackson.JsonParser skipChildren()>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: void setIgnorableProperties(java.lang.String[])>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void writeStartArray(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$IntBuilder getIntBuilder()>",
            "<com.turntable.gk.bean.VirtualCreditCard: java.lang.String getBalance()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: boolean hasDeserializers()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMember: void fixAccess()>",
            "<org.codehaus.jackson.smile.SmileParser: void _reportInvalidSharedStringValue(int)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _releaseBuffers()>",
            "<org.codehaus.jackson.io.NumberInput: int parseInt(char[],int,int)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRawLong(java.lang.String)>",
            "<org.codehaus.jackson.node.IntNode: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()>",
            "<org.codehaus.jackson.io.MergedStream: int available()>",
            "<org.codehaus.jackson.io.UTF32Reader: void reportUnexpectedEOF(int,int)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean)>",
            "<org.codehaus.jackson.map.deser.Creator$NumberBased: void <init>(java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.TypeReference)>",
            "<com.turntable.gk.bean.RequestInfo: com.turntable.gk.bean.RequestInfo valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType withContentTypeHandler(java.lang.Object)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void <init>()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void resolveFields(boolean)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer buildCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.smile.SmileParser: void <clinit>()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _addSeenStringValue(java.lang.String)>",
            "<com.weibopay.impl.PreparePay: void access$0(com.weibopay.impl.PreparePay,int)>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: int initialCapacity()>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: void _resolveDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.ResolvableDeserializer)>",
            "<org.codehaus.jackson.node.TextNode: int hashCode()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: org.codehaus.jackson.JsonLocation getCurrentLocation()>",
            "<org.codehaus.jackson.map.type.TypeBindings: void <init>(org.codehaus.jackson.map.type.TypeBindings,java.lang.Class,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: org.codehaus.jackson.org.objectweb.asm.ByteVector putUTF8(java.lang.String)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType arrayType(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single: org.codehaus.jackson.map.ser.impl.PropertySerializerMap newWith(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicLongSerializer: void <init>()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void <init>(org.codehaus.jackson.io.IOContext,int,int,org.codehaus.jackson.ObjectCodec,java.io.OutputStream)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer findSerializerFromAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.type.ArrayType: boolean hasGenericTypes()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$LongArraySerializer: void <init>()>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty: void <init>()>",
            "<org.codehaus.jackson.util.TokenBuffer$Segment: void <init>()>",
            "<org.codehaus.jackson.JsonNode: boolean has(int)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: byte getByteValue()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: boolean hasProperty(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.AnyGetterWriter: void resolve(org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.type.TypeBindings: void addBinding(java.lang.String,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerFactory: java.util.List sortBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)>",
            "<org.codehaus.jackson.node.IntNode: void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>",
            "<com.turntable.gk.date.LoginRes$Body: void setWbImg(java.lang.String)>",
            "<com.weibopay.impl.PreparePay: void access$4(com.weibopay.impl.PreparePay)>",
            "<com.turntable.gk.GameDubo: void thanSizeSpeed(int,android.graphics.Canvas)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getBankId()>",
            "<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.BytesToNameCanonicalizer createRoot()>",
            "<org.codehaus.jackson.node.BaseJsonNode: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.deser.Creator$PropertyBased: java.util.Collection properties()>",
            "<com.turntable.gk.date.LoginRes$Body: void setWbId(java.lang.String)>",
            "<org.codehaus.jackson.util.TextBuffer: void unshare(int)>",
            "<org.codehaus.jackson.node.ContainerNode: org.codehaus.jackson.node.BinaryNode binaryNode(byte[])>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.Name findName(int[],int)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: byte[] build(java.lang.String)>",
            "<com.turntable.gk.net.NetManage: com.turntable.gk.net.NetManage getNetManage()>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeNull()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: java.lang.String getSuperName()>",
            "<com.turntable.gk.GameDubo: void init()>",
            "<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Enum getEnum(int)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: javax.xml.bind.'annotation'.adapters.XmlAdapter findAdapter(org.codehaus.jackson.map.introspect.Annotated,boolean)>",
            "<com.turntable.gk.BaseActivity: void sessionTimeOut(java.lang.String)>",
            "<org.codehaus.jackson.map.type.HierarchicType: void <init>(java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$ShortDeser: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.type.TypeParser: org.codehaus.jackson.type.JavaType parse(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileFactory configure(org.codehaus.jackson.smile.SmileParser$Feature,boolean)>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: boolean a(org.codehaus.jackson.org.objectweb.asm.Label)>",
            "<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.map.type.ArrayType construct(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.sym.Name parseFieldName(int,int,int)>",
            "<com.turntable.gk.bean.paybean.SharingData$Body: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: java.lang.String getMethodDescriptor(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List findCreatorPropertyNames()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: org.codehaus.jackson.org.objectweb.asm.Label a()>",
            "<org.codehaus.jackson.smile.SmileParser: java.lang.String getText()>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: org.codehaus.jackson.JsonParser skipChildren()>",
            "<org.codehaus.jackson.map.deser.EnumMapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.UpdateAPK: long access$1(com.turntable.gk.UpdateAPK)>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: org.codehaus.jackson.org.objectweb.asm.ByteVector a(int,int)>",
            "<org.codehaus.jackson.xc.DomElementJsonSerializer: void <init>()>",
            "<com.turntable.gk.TestGame: boolean access$10(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: void writeIndentation(org.codehaus.jackson.JsonGenerator,int)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$CharArraySerializer: void serializeWithType(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.node.DoubleNode: void <init>(double)>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedField)>",
            "<com.turntable.gk.BaseActivity: void onPause()>",
            "<org.codehaus.jackson.util.TextBuffer: char[] expandCurrentSegment()>",
            "<org.codehaus.jackson.sym.Name2: void <init>(java.lang.String,int,int,int)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _mapType(java.lang.Class)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: byte[] toByteArray()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$InetAddressDeserializer: void <init>()>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.BinaryNode binaryNode(byte[])>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.AnyGetterWriter,java.lang.Object)>",
            "<com.turntable.gk.common.util.payTools.ThreadRefresh: void run()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer: java.lang.Object deserializeTypedFromScalar(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.Deserializers$None: org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: void <init>(org.codehaus.jackson.type.JavaType,java.lang.reflect.Constructor,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.JsonDeserializer,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(char)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>()>",
            "<com.turntable.gk.common.json.dao.request.Fruits: void setWa(int)>",
            "<com.turntable.gk.TestGame: void requestStart()>",
            "<org.codehaus.jackson.org.objectweb.asm.ByteVector: org.codehaus.jackson.org.objectweb.asm.ByteVector putByte(int)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$LongDeser: long[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$Property: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$CharacterDeserializer: void <init>(java.lang.Class,java.lang.Character)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: org.joda.time.LocalDateTime deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.org.objectweb.asm.FieldWriter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,boolean)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.type.JavaType getValueType()>",
            "<org.codehaus.jackson.JsonNode: java.lang.String getTextValue()>",
            "<org.codehaus.jackson.node.NodeCursor: org.codehaus.jackson.node.NodeCursor iterateChildren()>",
            "<org.codehaus.jackson.node.ContainerNode$NoStringsIterator: void <init>()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.map.JsonDeserializer getContentDeserializer()>",
            "<org.codehaus.jackson.map.ser.SerializerBase: java.lang.Class handledType()>",
            "<org.codehaus.jackson.map.annotate.JsonSerialize$Typing: org.codehaus.jackson.map.annotate.JsonSerialize$Typing valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer)>",
            "<com.weibopay.http.SNetworkTask: java.lang.Object doInBackground(java.lang.Object[])>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeRaw(java.lang.String)>",
            "<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: void <clinit>()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: int _skipWSOrEnd()>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: java.math.BigDecimal getDecimalValue()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[])>",
            "<org.codehaus.jackson.map.ObjectMapper$1: void addBeanSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createCollectionDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext createRootContext(int,int)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: void <init>(java.lang.reflect.Method,org.codehaus.jackson.map.introspect.AnnotationMap,org.codehaus.jackson.map.introspect.AnnotationMap[])>",
            "<org.codehaus.jackson.util.JsonParserDelegate: int getIntValue()>",
            "<org.codehaus.jackson.xc.XmlAdapterJsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.TestGame$1: void <init>(com.turntable.gk.TestGame)>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _skipLF()>",
            "<org.codehaus.jackson.node.TextNode: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder: boolean useForType(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedConstructor: int getModifiers()>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: void reportWeirdUCS4(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: boolean _isIgnorable(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers: void <init>()>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType forcedNarrowBy(java.lang.Class)>",
            "<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class)>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.node.ArrayNode putArray(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$CollectionSerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: void enable(org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer$FloatKD: java.lang.Float _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.weibopay.impl.SdkMinRes$Head: int getCode()>",
            "<com.games.b: java.lang.String a()>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void _throwInternal()>",
            "<com.turntable.gk.bean.VirtualCreditCard: void setBalance(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isIsGetterVisible(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: org.codehaus.jackson.map.JsonDeserializer _findSubclassDeserializer(org.codehaus.jackson.map.DeserializationContext,java.lang.Object,org.codehaus.jackson.util.TokenBuffer)>",
            "<com.turntable.gk.TestGame: void touch_start(float,float)>",
            "<org.codehaus.jackson.node.DecimalNode: long getLongValue()>",
            "<org.codehaus.jackson.util.CharTypes: int[] getInputCodeLatin1()>",
            "<org.codehaus.jackson.io.BaseReader: int read()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeString(char[],int,int)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: double getValueAsDouble(double)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer: void serializeWithType(org.codehaus.jackson.map.JsonSerializable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspectForCreation(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.ser.StdKeySerializer: void <init>()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findSettablePropertyName(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<org.codehaus.jackson.impl.DefaultPrettyPrinter: void <init>()>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer: void <init>()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.deser.CreatorContainer,org.codehaus.jackson.map.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,org.codehaus.jackson.map.deser.SettableAnyProperty)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void _parseNumericValue(int)>",
            "<com.turntable.gk.GameDubo$2: void <init>(com.turntable.gk.GameDubo,int[],int[],boolean[])>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void append(int)>",
            "<org.codehaus.jackson.JsonFactory: java.io.InputStream _optimizedStreamFromURL(java.net.URL)>",
            "<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.JsonParser: boolean getValueAsBoolean(boolean)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void <init>(org.codehaus.jackson.io.IOContext,int,int,org.codehaus.jackson.ObjectCodec,java.io.OutputStream,byte[],int,boolean)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String mangleGetterName(org.codehaus.jackson.map.introspect.Annotated,java.lang.String)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$TimeZoneDeserializer: java.util.TimeZone _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.net.RequestInfo: com.turntable.gk.net.RequestInfo[] values()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: char[] getTextCharacters()>",
            "<org.codehaus.jackson.map.RuntimeJsonMappingException: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer: void <init>(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addFields(java.util.Map,java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.type.TypeParser: org.codehaus.jackson.type.JavaType parseType(org.codehaus.jackson.map.type.TypeParser$MyTokenizer)>",
            "<com.turntable.gk.TestGame: int access$27(com.turntable.gk.TestGame)>",
            "<com.turntable.gk.TestGame: java.lang.String getLocalMacAddress()>",
            "<com.turntable.gk.bean.VirtualCreditCard: java.lang.String getDept()>",
            "<org.codehaus.jackson.map.ser.impl.SimpleFilterProvider: void <init>()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitIincInsn(int,int)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer: void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: int readInt(int)>",
            "<org.codehaus.jackson.xc.DomElementJsonDeserializer: void <init>()>",
            "<com.turntable.gk.GameDubo: void shadow19(android.graphics.Canvas)>",
            "<org.codehaus.jackson.map.module.SimpleSerializers: org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: void _handleEOF()>",
            "<org.codehaus.jackson.node.DecimalNode: double getDoubleValue()>",
            "<org.codehaus.jackson.xc.DomElementJsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.SerializerCache: void addTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: org.codehaus.jackson.map.BeanDescription forCreation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: boolean isFieldVisible(java.lang.reflect.Field)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setAnySetter(org.codehaus.jackson.map.deser.SettableAnyProperty)>",
            "<org.codehaus.jackson.org.objectweb.asm.FieldWriter: void visitAttribute(org.codehaus.jackson.org.objectweb.asm.Attribute)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: org.codehaus.jackson.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int,java.lang.String,boolean)>",
            "<org.codehaus.jackson.impl.ReaderBasedNumericParser: org.codehaus.jackson.JsonToken parseNumberText(int)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setSharingFlag(java.lang.String)>",
            "<org.codehaus.jackson.jaxrs.MapperConfigurator: void <init>(org.codehaus.jackson.map.ObjectMapper,org.codehaus.jackson.jaxrs.Annotations[])>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.JsonNode readTree(java.lang.String)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: java.lang.IllegalArgumentException reportInvalidChar(org.codehaus.jackson.Base64Variant,int,int,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.MapSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.weibopay.impl.PreparePay: int access$2(com.weibopay.impl.PreparePay)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _reportInvalidOther(int,int)>",
            "<org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding[] values()>",
            "<com.weibopay.impl.RequestInfo: com.weibopay.impl.RequestInfo[] values()>",
            "<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.node.ObjectNode putObject(java.lang.String)>",
            "<org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver: void <init>(org.codehaus.jackson.type.JavaType,java.util.HashMap,java.util.HashMap)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean hasAnySetterAnnotation(org.codehaus.jackson.map.introspect.AnnotatedMethod)>",
            "<com.turntable.gk.bean.VersionCheckRes$Body: java.lang.String getReleaseNotes()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writeSegmentedRaw(char[],int,int)>",
            "<org.codehaus.jackson.map.type.HierarchicType: java.lang.reflect.ParameterizedType asGeneric()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void flush()>",
            "<com.weibopay.http.RequestInfo: void setName(java.lang.String)>",
            "<org.codehaus.jackson.node.NodeCursor$Array: java.lang.String getCurrentName()>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType getSerializationType()>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory$SerializerMarker: void <init>(org.codehaus.jackson.map.ser.BasicSerializerFactory$1)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: void _skipUtf8_3(int)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeSignedVInt(int)>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector: void <init>()>",
            "<org.codehaus.jackson.impl.JsonParserBase: org.codehaus.jackson.impl.JsonReadContext getParsingContext()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String[] findSerializationPropertyOrder(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.ext.CoreXMLSerializers: void <clinit>()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitTableSwitchInsn(int,int,org.codehaus.jackson.org.objectweb.asm.Label,org.codehaus.jackson.org.objectweb.asm.Label[])>",
            "<org.codehaus.jackson.map.deser.AbstractDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeRaw(char[],int,int)>",
            "<org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector: java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: java.lang.String getFieldName()>",
            "<org.codehaus.jackson.org.objectweb.asm.AnnotationWriter: int a()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$IndexedListSerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void serializeWithType(java.util.Map,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: int hash(org.codehaus.jackson.type.JavaType,boolean)>",
            "<org.codehaus.jackson.util.BufferRecycler: void releaseByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType,byte[])>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<com.turntable.gk.common.util.payTools.PartnerConfig: java.lang.String getAcctId(int)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder: long[] _constructArray(int)>",
            "<org.codehaus.jackson.node.ArrayNode: void insert(int,java.math.BigDecimal)>",
            "<com.turntable.gk.common.json.dao.request.TopUpRq: void setPayType(java.lang.String)>",
            "<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.smile.SmileParser$Feature: void <init>(java.lang.String,int,boolean)>",
            "<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext createRootContext()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void copyCurrentStructure(org.codehaus.jackson.JsonParser)>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.POJONode POJONode(java.lang.Object)>",
            "<com.turntable.gk.App: com.turntable.gk.App instance()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$StringArraySerializer: void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.Class findContentDeserializer(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.map.deser.StdKeyDeserializer: double _parseDouble(java.lang.String)>",
            "<org.codehaus.jackson.map.DeserializationConfig: void setDateFormat(java.text.DateFormat)>",
            "<org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver: void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[])>",
            "<com.turntable.gk.TestGame: com.turntable.gk.GameDubo access$5(com.turntable.gk.TestGame)>",
            "<com.turntable.gk.bean.OrderInfo: void <init>()>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object get(java.lang.Object)>",
            "<org.codehaus.jackson.JsonNode: boolean isBinary()>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void write(int)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileParser createJsonParser(java.io.InputStream)>",
            "<com.turntable.gk.bean.RequestDepositRes: com.turntable.gk.bean.RequestDepositRes$Body getBody()>",
            "<org.codehaus.jackson.xc.DataHandlerJsonSerializer: void serialize(javax.activation.DataHandler,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>",
            "<org.codehaus.jackson.JsonLocation: int hashCode()>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void writeTree(org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType fromCanonical(java.lang.String)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: boolean isReadable(java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType)>",
            "<org.codehaus.jackson.map.introspect.AnnotationMap: void <init>()>",
            "<org.codehaus.jackson.map.Deserializers$None: org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: org.codehaus.jackson.org.objectweb.asm.Type[] getArgumentTypes(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion getSerializationInclusion()>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter: void beforeObjectEntries(org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.node.BooleanNode: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.impl.InetAddressSerializer: void serialize(java.net.InetAddress,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: org.codehaus.jackson.JsonStreamContext getParsingContext()>",
            "<org.codehaus.jackson.Base64Variant: boolean usesPaddingChar(int)>",
            "<org.codehaus.jackson.node.NodeCursor$RootValue: boolean currentHasChildren()>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer: void disable(org.codehaus.jackson.mrbean.AbstractTypeMaterializer$Feature)>",
            "<com.turntable.gk.GameDubo: int getThansizeChecked()>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer: java.lang.String getPropertyName()>",
            "<org.codehaus.jackson.Base64Variant: int encodeBase64Chunk(int,byte[],int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.org.objectweb.asm.Label: void a(org.codehaus.jackson.org.objectweb.asm.MethodWriter,org.codehaus.jackson.org.objectweb.asm.ByteVector,int,boolean)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitVarInsn(int,int)>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getCardChannel()>",
            "<org.codehaus.jackson.sym.BytesToNameCanonicalizer: void unshareCollision()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: void _addClassMixIns(org.codehaus.jackson.map.introspect.AnnotationMap,java.lang.Class,java.lang.Class)>",
            "<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty: void <clinit>()>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: void checkCanSerialize(boolean)>",
            "<org.codehaus.jackson.map.deser.CollectionDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<org.codehaus.jackson.xc.DomElementJsonSerializer: void serialize(org.w3c.dom.Element,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getModifiers()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: int a()>",
            "<org.codehaus.jackson.map.type.TypeParser$MyTokenizer: java.lang.String getRemainingInput()>",
            "<org.codehaus.jackson.JsonParser: boolean hasCurrentToken()>",
            "<org.codehaus.jackson.map.ser.MapSerializer: org.codehaus.jackson.map.ser.MapSerializer construct(java.lang.String[],org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPlatformSignType()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: org.codehaus.jackson.JsonToken nextToken()>",
            "<org.codehaus.jackson.map.util.PrimitiveArrayBuilder$Node: java.lang.Object getData()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPass: void setPkPassVersion(java.lang.String)>",
            "<org.codehaus.jackson.node.ArrayNode: void insert(int,boolean)>",
            "<com.turntable.gk.common.json.dao.request.ThanSize: java.lang.String getBs()>",
            "<org.codehaus.jackson.smile.Tool: void verify(java.io.InputStream,java.io.InputStream)>",
            "<org.codehaus.jackson.JsonFactory: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.smile.SmileParser: int getTextOffset()>",
            "<org.codehaus.jackson.map.introspect.Annotated: boolean hasAnnotation(java.lang.Class)>",
            "<com.turntable.gk.GameDubo: void shadow13(android.graphics.Canvas)>",
            "<org.codehaus.jackson.impl.JsonWriteContext: void appendDesc(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.map.DeserializationConfig: void enable(org.codehaus.jackson.map.DeserializationConfig$Feature)>",
            "<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType widenBy(java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.AnnotationMap: void _add(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.map.ser.BeanSerializerBuilder: org.codehaus.jackson.map.ser.BeanSerializer createDummy()>",
            "<org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver: void <init>(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeRaw(char)>",
            "<org.codehaus.jackson.jaxrs.JacksonJsonProvider: java.lang.Object readFrom(java.lang.Class,java.lang.reflect.Type,java.lang.annotation.Annotation[],javax.ws.rs.core.MediaType,javax.ws.rs.core.MultivaluedMap,java.io.InputStream)>",
            "<org.codehaus.jackson.node.DecimalNode: java.lang.String getValueAsText()>",
            "<org.codehaus.jackson.node.BinaryNode: void <clinit>()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getCardIssuer()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$AsArraySerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeStartObject()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$LongBuilder: void <init>()>",
            "<org.codehaus.jackson.util.TextBuffer: void append(java.lang.String,int,int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$CharacterDeserializer: java.lang.Character deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker$Std withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.map.type.TypeBindings: void _resolveBindings(java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$StringArraySerializer: void serializeContents(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<com.weibopay.impl.Tools: java.lang.Object parserJson(java.lang.String,java.lang.Class)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: void <init>(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket: void <init>(org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket,org.codehaus.jackson.map.ser.SerializerCache$TypeKey,org.codehaus.jackson.map.JsonSerializer)>",
            "<org.codehaus.jackson.impl.JsonReadContext: org.codehaus.jackson.impl.JsonReadContext getParent()>",
            "<org.codehaus.jackson.map.DeserializationConfig: void <init>(org.codehaus.jackson.map.ClassIntrospector,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver)>",
            "<org.codehaus.jackson.map.ext.OptionalHandlerFactory: boolean doesImplement(java.lang.Class,java.lang.String)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector$AnnotatedProperty: void <init>(java.beans.PropertyDescriptor,org.codehaus.jackson.xc.JaxbAnnotationIntrospector$1)>",
            "<com.turntable.gk.TestGame: int controlTheTurntable(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>",
            "<org.codehaus.jackson.sym.Name3: void <init>(java.lang.String,int,int,int,int)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void writeRaw(java.lang.String,int,int)>",
            "<org.codehaus.jackson.map.ObjectReader: java.lang.Object readValue(java.io.Reader)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider$WrappedDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.JsonFactory: void <init>()>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.TypeDeserializer findPropertyContentTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: void <clinit>()>",
            "<org.codehaus.jackson.map.ser.ScalarSerializerBase: void <init>(java.lang.Class)>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.ser.FilterProvider)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.annotate.JsonMethod: org.codehaus.jackson.annotate.JsonMethod valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.util.ClassUtil: void throwAsIAE(java.lang.Throwable,java.lang.String)>",
            "<org.codehaus.jackson.map.util.ClassUtil$EnumTypeLocator: java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class)>",
            "<org.codehaus.jackson.node.DoubleNode: boolean equals(java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: org.codehaus.jackson.org.objectweb.asm.FieldVisitor visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: char[] getTextCharacters()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonLocation getCurrentLocation()>",
            "<org.codehaus.jackson.map.jsontype.SubtypeResolver: void <init>()>",
            "<org.codehaus.jackson.map.DeserializationConfig: void set(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)>",
            "<org.codehaus.jackson.node.NodeCursor$RootValue: org.codehaus.jackson.JsonStreamContext getParent()>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker 'with'(org.codehaus.jackson.annotate.JsonAutoDetect)>",
            "<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer,java.lang.Class)>",
            "<org.codehaus.jackson.smile.SmileFactory: boolean isEnabled(org.codehaus.jackson.smile.SmileParser$Feature)>",
            "<com.turntable.gk.TestGame: android.widget.TextView[] getBetGoldView(android.widget.FrameLayout,android.widget.TextView[])>",
            "<com.turntable.gk.SelectGlod: void setAlertDialog(java.lang.String)>",
            "<org.codehaus.jackson.map.JsonMappingException$Reference: void <init>()>",
            "<com.games.b: java.lang.String a(android.content.Context)>",
            "<org.codehaus.jackson.map.SerializationConfig$Feature: int getMask()>",
            "<org.codehaus.jackson.xc.XmlAdapterJsonSerializer: void <init>(javax.xml.bind.'annotation'.adapters.XmlAdapter,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.io.IOContext: void releaseReadIOBuffer(byte[])>",
            "<org.codehaus.jackson.io.IOContext: void releaseWriteEncodingBuffer(byte[])>",
            "<org.codehaus.jackson.io.SerializedString: int charLength()>",
            "<org.codehaus.jackson.Base64Variant: boolean usesPaddingChar(char)>",
            "<org.codehaus.jackson.node.ObjectNode: void putPOJO(java.lang.String,java.lang.Object)>",
            "<com.turntable.gk.BackgroundThread: void runInternal()>",
            "<org.codehaus.jackson.node.BaseJsonNode: java.util.List findParents(java.lang.String,java.util.List)>",
            "<org.codehaus.jackson.impl.Utf8StreamParser: org.codehaus.jackson.JsonToken _parseFloatText(char[],int,int,boolean,int)>",
            "<org.codehaus.jackson.util.BufferRecycler: byte[] allocByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: java.lang.Number getNumberValue()>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.String getClassDescription(java.lang.Object)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getOrderId()>",
            "<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.deser.EnumResolver constructEnumResolver(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig)>",
            "<org.codehaus.jackson.map.deser.AbstractDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.ArrayNode: void addNull()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: java.lang.String getCurrentName()>",
            "<org.codehaus.jackson.util.JsonParserSequence: boolean switchToNext()>",
            "<org.codehaus.jackson.impl.ReaderBasedParser: void _skipCR()>",
            "<org.codehaus.jackson.node.ObjectNode$NoFieldsIterator: void <init>()>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription: int getLoadOpcode()>",
            "<com.turntable.gk.date.LoginRes$CardList: java.lang.String getBankCode()>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders()>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker$Std withIsGetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer: void <clinit>()>",
            "<org.codehaus.jackson.map.DeserializerProvider: void <init>()>",
            "<org.codehaus.jackson.node.BooleanNode: void <init>()>",
            "<org.codehaus.jackson.smile.SmileGenerator: void writeString(char[],int,int)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodWriter: void visitLineNumber(int,org.codehaus.jackson.org.objectweb.asm.Label)>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: void <init>()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedClass: org.codehaus.jackson.map.introspect.AnnotatedField _constructField(java.lang.reflect.Field)>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void <init>(java.lang.Class,org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.BeanPropertyWriter[])>",
            "<org.codehaus.jackson.map.type.CollectionType: org.codehaus.jackson.type.JavaType getContentType()>",
            "<org.codehaus.jackson.map.ser.ToStringSerializer: void <clinit>()>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.ObjectReader withType(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)>",
            "<org.codehaus.jackson.JsonNode: int getIntValue()>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: java.util.Iterator arrayAsIterator(java.lang.Object[])>",
            "<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectWriter,org.codehaus.jackson.map.SerializationConfig)>",
            "<org.codehaus.jackson.org.objectweb.asm.Attribute: org.codehaus.jackson.org.objectweb.asm.Attribute read(org.codehaus.jackson.org.objectweb.asm.ClassReader,int,int,char[],int,org.codehaus.jackson.org.objectweb.asm.Label[])>",
            "<org.codehaus.jackson.map.deser.StdDeserializers: void add(org.codehaus.jackson.map.deser.StdDeserializer)>",
            "<org.codehaus.jackson.node.ArrayNode: void insert(int,byte[])>",
            "<org.codehaus.jackson.mrbean.BeanBuilder: void createGetter(org.codehaus.jackson.org.objectweb.asm.ClassWriter,java.lang.String,org.codehaus.jackson.mrbean.BeanBuilder$Property,org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription)>",
            "<org.codehaus.jackson.util.BufferRecycler$ByteBufferType: org.codehaus.jackson.util.BufferRecycler$ByteBufferType valueOf(java.lang.String)>",
            "<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.Throwable)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: long getLongValue()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.String findRootName(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<com.turntable.gk.UpdateAPK: android.widget.TextView access$3(com.turntable.gk.UpdateAPK)>",
            "<org.codehaus.jackson.map.ser.SerializerBase: void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<com.turntable.gk.bean.VirtualCreditCard: void setLimit(java.lang.String)>",
            "<org.codehaus.jackson.map.util.ClassUtil: void throwRootCause(java.lang.Throwable)>",
            "<org.codehaus.jackson.util.JsonParserDelegate: org.codehaus.jackson.JsonToken getCurrentToken()>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer: void <init>(java.lang.Class,java.lang.Byte)>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config)>",
            "<org.codehaus.jackson.map.ser.EnumMapSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.module.SimpleDeserializers: org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.mrbean.BeanBuilder$TypeDescription: void <init>(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.type.HierarchicType: java.lang.String toString()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$FloatArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.introspect.VisibilityChecker$Std: org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>",
            "<org.codehaus.jackson.node.BaseJsonNode: org.codehaus.jackson.JsonNode findParent(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$CharArraySerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.JdkSerializers$AtomicReferenceSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.type.JavaType getValueType()>",
            "<org.codehaus.jackson.JsonGenerator: void writeObjectField(java.lang.String,java.lang.Object)>",
            "<org.codehaus.jackson.org.objectweb.asm.Item: void <init>(int)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: void _reportBase64EOF()>",
            "<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.JsonParser constructParser(int,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer,org.codehaus.jackson.sym.CharsToNameCanonicalizer)>",
            "<org.codehaus.jackson.JsonParser$Feature: int getMask()>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$UUIDDeserializer: java.util.UUID _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider$1: void failForEmpty(java.lang.Object)>",
            "<org.codehaus.jackson.JsonGenerationException: void <init>(java.lang.String)>",
            "<com.turntable.gk.SelectGlod: java.lang.String access$15(com.turntable.gk.SelectGlod)>",
            "<com.turntable.gk.bean.VirtualCreditCard: void setGrantorName(java.lang.String)>",
            "<org.codehaus.jackson.map.util.ObjectBuffer: int bufferedSize()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: void <init>(java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer: org.codehaus.jackson.ObjectCodec getCodec()>",
            "<org.codehaus.jackson.JsonNode: boolean isIntegralNumber()>",
            "<org.codehaus.jackson.map.util.StdDateFormat: boolean hasTimeZone(java.lang.String)>",
            "<org.codehaus.jackson.util.TokenBuffer$Parser: java.lang.Object _currentObject()>",
            "<org.codehaus.jackson.map.ser.ArraySerializers$IntArraySerializer: org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$FloatDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter()>",
            "<org.codehaus.jackson.node.JsonNodeFactory: org.codehaus.jackson.node.NumericNode numberNode(long)>",
            "<org.codehaus.jackson.map.util.RootNameLookup: org.codehaus.jackson.io.SerializedString findRootName(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.MapperConfig)>",
            "<com.weibopay.impl.Tools: java.lang.String getLocalIpAddress()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void writeEndObject()>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.ser.ToStringSerializer: void <init>()>",
            "<com.turntable.gk.SelectGlod: void prepareStatus(int,com.weibopay.impl.SdkMinRes$Body)>",
            "<org.codehaus.jackson.io.NumberOutput: int outputLeadingTriplet(int,byte[],int)>",
            "<org.codehaus.jackson.smile.SmileBufferRecycler: java.lang.Object[] allocSeenNamesBuffer()>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void <init>(org.codehaus.jackson.org.objectweb.asm.MethodVisitor)>",
            "<org.codehaus.jackson.map.util.StdDateFormat: java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$NonTypedScalarSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.smile.SmileGenerator: void _writeBytes(byte,byte)>",
            "<org.codehaus.jackson.JsonNode: double getValueAsDouble(double)>",
            "<org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer: void serialize(org.joda.time.LocalDateTime,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.JsonSerializer buildMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As valueOf(java.lang.String)>",
            "<org.codehaus.jackson.JsonGenerator$Feature: boolean enabledByDefault()>",
            "<org.codehaus.jackson.node.BigIntegerNode: org.codehaus.jackson.node.BigIntegerNode valueOf(java.math.BigInteger)>",
            "<org.codehaus.jackson.smile.SmileFactory: org.codehaus.jackson.smile.SmileParser createJsonParser(java.io.File)>",
            "<org.codehaus.jackson.type.JavaType: boolean hasGenericTypes()>",
            "<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.String)>",
            "<com.turntable.gk.date.LoginRes$CardList: void setBankCode(java.lang.String)>",
            "<org.codehaus.jackson.util.ByteArrayBuilder: void appendThreeBytes(int)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: int newField(java.lang.String,java.lang.String,java.lang.String)>",
            "<org.codehaus.jackson.impl.JsonParserMinimalBase: void _reportInvalidEOF()>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findEnumType(java.util.EnumSet)>",
            "<com.turntable.gk.bean.Head: void <init>()>",
            "<com.turntable.gk.GlobalInfo: int getsave(java.lang.String)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getFullName()>",
            "<org.codehaus.jackson.node.NodeCursor$Object: org.codehaus.jackson.JsonNode currentNode()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean)>",
            "<com.turntable.gk.bean.paybean.SharingData: void <init>()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: void setPayerIdType(java.lang.String)>",
            "<org.codehaus.jackson.JsonNode: java.util.Iterator iterator()>",
            "<org.codehaus.jackson.map.ObjectMapper$1: void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.map.deser.StdDeserializer$AtomicReferenceDeserializer: void resolve(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider)>",
            "<com.turntable.gk.SelectGlod: void getintent()>",
            "<org.codehaus.jackson.smile.SmileParser: void _expandSeenStringValues()>",
            "<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()>",
            "<org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer: void <init>()>",
            "<org.codehaus.jackson.node.DoubleNode: int hashCode()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: org.codehaus.jackson.JsonParser$NumberType getNumberType()>",
            "<org.codehaus.jackson.JsonNode: int getValueAsInt(int)>",
            "<org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.org.objectweb.asm.MethodAdapter: void visitLookupSwitchInsn(org.codehaus.jackson.org.objectweb.asm.Label,int[],org.codehaus.jackson.org.objectweb.asm.Label[])>",
            "<org.codehaus.jackson.map.JsonMappingException: void _appendPathDesc(java.lang.StringBuilder)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory: org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.node.POJONode: void <init>(java.lang.Object)>",
            "<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String getCurrentName()>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.map.type.SimpleType _constructSimple(java.lang.Class,org.codehaus.jackson.type.JavaType[])>",
            "<org.codehaus.jackson.map.ObjectMapper$DefaultTyping: org.codehaus.jackson.map.ObjectMapper$DefaultTyping valueOf(java.lang.String)>",
            "<org.codehaus.jackson.JsonProcessingException: java.lang.String toString()>",
            "<org.codehaus.jackson.mrbean.AbstractTypeMaterializer$MyClassLoader: void <init>(java.lang.ClassLoader)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.deser.BeanDeserializer: java.lang.Class getBeanClass()>",
            "<org.codehaus.jackson.util.BufferRecycler$CharBufferType: void <clinit>()>",
            "<com.weibopay.http.SNetworkProxy: void postRequest(java.lang.String,java.lang.String,java.util.HashMap,java.lang.Class)>",
            "<org.codehaus.jackson.smile.SmileParser: void close()>",
            "<org.codehaus.jackson.map.DeserializationConfig: void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)>",
            "<org.codehaus.jackson.JsonParser: short getShortValue()>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.TypeDeserializer findPropertyTypeDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$UUIDDeserializer: java.util.UUID _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.turntable.gk.date.LoginRes$Body: void setBalance(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.ThreadStack: boolean isNull()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassGroup: void setGroupName(java.lang.String)>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getExt2()>",
            "<org.codehaus.jackson.node.ArrayNode: void <init>(org.codehaus.jackson.node.JsonNodeFactory)>",
            "<org.codehaus.jackson.node.ArrayNode: org.codehaus.jackson.JsonNode addAll(org.codehaus.jackson.node.ArrayNode)>",
            "<org.codehaus.jackson.io.JsonStringEncoder: char[] quoteAsString(java.lang.String)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: int getIntValue()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createEnumDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<com.turntable.gk.bean.VirtualCreditCard: void setDept(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.CustomSerializerFactory: void <init>(org.codehaus.jackson.map.SerializerFactory$Config)>",
            "<org.codehaus.jackson.JsonParser$Feature: int collectDefaults()>",
            "<com.turntable.gk.date.GetPkPassGroupListRes$PkPassStatusType: com.turntable.gk.date.GetPkPassGroupListRes$PkPassStatusType valueOf(java.lang.String)>",
            "<org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature valueOf(java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: org.codehaus.jackson.map.JsonSerializer _createUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.map.deser.Creator$NumberBased: java.lang.Object construct(long)>",
            "<org.codehaus.jackson.map.deser.StdDeserializerProvider: org.codehaus.jackson.map.KeyDeserializer _handleUnknownKeyDeserializer(org.codehaus.jackson.type.JavaType)>",
            "<org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer: void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator)>",
            "<org.codehaus.jackson.smile.SmileParser: void _parseNumericValue(int)>",
            "<org.codehaus.jackson.map.ser.JsonValueSerializer: void <init>(java.lang.reflect.Method,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty)>",
            "<org.codehaus.jackson.util.JsonGeneratorDelegate: void writeRaw(java.lang.String,int,int)>",
            "<org.codehaus.jackson.node.BinaryNode: org.codehaus.jackson.node.BinaryNode valueOf(byte[])>",
            "<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType getContentType()>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$ByteDeser: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.LongNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.io.UTF32Reader: boolean loadMore(int)>",
            "<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: boolean isHandled(java.lang.'annotation'.Annotation)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getRawType()>",
            "<com.turntable.gk.SelectGlod$8: void handleMessage(android.os.Message)>",
            "<org.codehaus.jackson.node.BigIntegerNode: boolean getValueAsBoolean(boolean)>",
            "<org.codehaus.jackson.node.ContainerNode$NoStringsIterator: org.codehaus.jackson.node.ContainerNode$NoStringsIterator instance()>",
            "<com.weibopay.impl.SdkMinRes$Body: void <init>()>",
            "<org.codehaus.jackson.map.DeserializationConfig: void disable(org.codehaus.jackson.map.DeserializationConfig$Feature)>",
            "<org.codehaus.jackson.map.ser.BasicSerializerFactory$SerializerMarker: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder getBooleanBuilder()>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.String isLocalType(java.lang.Class)>",
            "<com.turntable.gk.App: java.lang.String getLocalIpAddress()>",
            "<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isPotentialBeanType(java.lang.Class)>",
            "<org.codehaus.jackson.map.util.JSONWrappedObject: java.lang.Object getValue()>",
            "<org.codehaus.jackson.map.introspect.NopAnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<com.turntable.gk.bean.AppsRes$AppsInfo: void setBgImage(java.lang.String)>",
            "<org.codehaus.jackson.smile.SmileGenerator: org.codehaus.jackson.smile.SmileGenerator enable(org.codehaus.jackson.smile.SmileGenerator$Feature)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$LocaleDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.node.ContainerNode$NoNodesIterator: org.codehaus.jackson.JsonNode next()>",
            "<org.codehaus.jackson.map.introspect.BasicClassIntrospector$SetterAndGetterMethodFilter: boolean includeMethod(java.lang.reflect.Method)>",
            "<org.codehaus.jackson.impl.JsonParserBase: org.codehaus.jackson.Version version()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonNode readTree(java.io.Reader)>",
            "<org.codehaus.jackson.JsonParser$Feature: void <init>(java.lang.String,int,boolean)>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassWriter: void <init>(org.codehaus.jackson.org.objectweb.asm.ClassReader,int)>",
            "<org.codehaus.jackson.map.deser.StdDeserializationContext: void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer)>",
            "<org.codehaus.jackson.map.ser.SerializerCache$TypeKey: java.lang.String toString()>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: javax.xml.bind.'annotation'.XmlRootElement findRootElementAnnotation(org.codehaus.jackson.map.introspect.AnnotatedClass)>",
            "<org.codehaus.jackson.node.BinaryNode: org.codehaus.jackson.JsonToken asToken()>",
            "<org.codehaus.jackson.node.BinaryNode: boolean equals(java.lang.Object)>",
            "<com.turntable.gk.TestGame: com.turntable.gk.TestGame$AlertDialogview setAlertDialog(java.lang.String)>",
            "<org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter: void <clinit>()>",
            "<org.codehaus.jackson.impl.Utf8StreamParser$1: void <clinit>()>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: org.codehaus.jackson.sym.CharsToNameCanonicalizer makeChild(boolean,boolean)>",
            "<org.codehaus.jackson.smile.SmileGenerator$Feature: int collectDefaults()>",
            "<com.turntable.gk.common.json.dao.response.GameStartRp: void setGameid(java.lang.String)>",
            "<org.codehaus.jackson.Base64Variant: byte getPaddingByte()>",
            "<org.codehaus.jackson.map.type.MapType: org.codehaus.jackson.type.JavaType getContentType()>",
            "<org.codehaus.jackson.org.objectweb.asm.ClassReader: int a(java.lang.Object[],int,int,char[],org.codehaus.jackson.org.objectweb.asm.Label[])>",
            "<org.codehaus.jackson.sym.CharsToNameCanonicalizer: java.lang.String findSymbol(char[],int,int,int)>",
            "<org.codehaus.jackson.util.BufferRecycler: void releaseCharBuffer(org.codehaus.jackson.util.BufferRecycler$CharBufferType,char[])>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class[] getParameterClasses()>",
            "<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.ObjectWriter defaultPrettyPrintingWriter()>",
            "<org.codehaus.jackson.map.deser.SettableAnyProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>",
            "<com.turntable.gk.TestGame: void access$17(com.turntable.gk.TestGame,float)>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _outputSurrogates(int,int)>",
            "<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)>",
            "<com.turntable.gk.date.LoginRes$Body: java.lang.String getBindedEmail()>",
            "<org.codehaus.jackson.JsonNode: java.util.Iterator getElements()>",
            "<com.turntable.gk.common.json.dao.response.Game: java.lang.String getOrderStatus()>",
            "<org.codehaus.jackson.map.ObjectMapper: void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode)>",
            "<org.codehaus.jackson.map.ser.EnumSerializer: org.codehaus.jackson.map.ser.EnumSerializer construct(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>",
            "<org.codehaus.jackson.node.TreeTraversingParser: java.math.BigDecimal getDecimalValue()>",
            "<org.codehaus.jackson.node.POJONode: int hashCode()>",
            "<org.codehaus.jackson.util.JsonParserDelegate: double getDoubleValue()>",
            "<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>",
            "<org.codehaus.jackson.impl.JsonGeneratorBase: void _throwInternal()>",
            "<com.turntable.gk.GameDubo: void startTemiGun(int[],int[],boolean[])>",
            "<com.turntable.gk.TestGame: void onCreate(android.os.Bundle)>",
            "<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.util.Annotations,java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.type.JavaType,java.lang.reflect.Method,java.lang.reflect.Field,boolean,java.lang.Object)>",
            "<org.codehaus.jackson.Base64Variant: void encodeBase64Chunk(java.lang.StringBuilder,int)>",
            "<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>",
            "<org.codehaus.jackson.map.deser.StdDeserializers: void <init>()>",
            "<org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>",
            "<org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature[] values()>",
            "<org.codehaus.jackson.org.objectweb.asm.Type: org.codehaus.jackson.org.objectweb.asm.Type getReturnType(java.lang.String)>",
            "<com.turntable.gk.GameDubo: void shadow16(android.graphics.Canvas)>",
            "<com.turntable.gk.TestGame: void updateView(java.lang.String)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ByteBuilder: void <init>()>",
            "<com.turntable.gk.GameDubo: void onClickThanSize(int,java.lang.String)>",
            "<org.codehaus.jackson.map.util.ArrayBuilders$ArrayIterator: java.lang.Object next()>",
            "<org.codehaus.jackson.impl.WriterBasedGenerator: void <clinit>()>",
            "<org.codehaus.jackson.node.TreeTraversingParser: char[] getTextCharacters()>",
            "<org.codehaus.jackson.map.util.ClassUtil: java.lang.Class findEnumType(java.lang.Class)>",
            "<org.codehaus.jackson.smile.SmileParser: void _reportInvalidOther(int)>",
            "<org.codehaus.jackson.impl.ReaderBasedParserBase: void _closeInput()>",
            "<org.codehaus.jackson.util.TokenBuffer: void writeUTF8String(byte[],int,int)>",
            "<org.codehaus.jackson.smile.SmileGenerator: int _shortUTF8Encode2(char[],int,int,int)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: void convertNumberToDouble()>",
            "<org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver: java.lang.String idFromValue(java.lang.Object)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer: java.lang.Object _deserializeEmbedded(java.lang.Object,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.io.SegmentedStringWriter: java.lang.String getAndClear()>",
            "<org.codehaus.jackson.map.ObjectReader: org.codehaus.jackson.map.DeserializationContext _createDeserializationContext(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)>",
            "<com.turntable.gk.common.json.dao.request.TopUpRq: void <init>()>",
            "<org.codehaus.jackson.JsonNode: boolean isPojo()>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<com.weibopay.impl.PreparePay: boolean install(android.content.Context,java.lang.String)>",
            "<org.codehaus.jackson.xc.JaxbAnnotationIntrospector: java.lang.Class findDeserializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>",
            "<org.codehaus.jackson.map.ObjectMapper: java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.TypeReference)>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethodMap: org.codehaus.jackson.map.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[])>",
            "<org.codehaus.jackson.map.ser.BeanSerializer: void <init>(java.lang.Class,org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.BeanPropertyWriter[],org.codehaus.jackson.map.ser.AnyGetterWriter,java.lang.Object)>",
            "<org.codehaus.jackson.map.MappingJsonFactory: org.codehaus.jackson.map.ObjectMapper getCodec()>",
            "<com.turntable.gk.SelectGlod$7: void onLoadResource(android.webkit.WebView,java.lang.String)>",
            "<org.codehaus.jackson.map.ser.StdSerializerProvider: void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.StdSerializerProvider,org.codehaus.jackson.map.SerializerFactory)>",
            "<org.codehaus.jackson.map.ser.impl.ObjectArraySerializer: org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)>",
            "<org.codehaus.jackson.node.LongNode: void <init>(long)>",
            "<org.codehaus.jackson.map.deser.FromStringDeserializer$PatternDeserializer: java.lang.Object _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.deser.ArrayDeserializers$StringDeser: void <init>()>",
            "<org.codehaus.jackson.map.introspect.MemberKey: void <init>(java.lang.String,java.lang.Class[])>",
            "<org.codehaus.jackson.map.ser.MapSerializer: void <init>(java.util.HashSet,org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer)>",
            "<org.codehaus.jackson.node.DecimalNode: boolean isBigDecimal()>",
            "<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonGenerator$Feature)>",
            "<org.codehaus.jackson.map.deser.JsonNodeDeserializer$ArrayDeserializer: org.codehaus.jackson.node.ArrayNode deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType _fromParamType(java.lang.reflect.ParameterizedType,org.codehaus.jackson.map.type.TypeBindings)>",
            "<org.codehaus.jackson.type.JavaType: boolean isAbstract()>",
            "<org.codehaus.jackson.node.NodeCursor: org.codehaus.jackson.JsonStreamContext getParent()>",
            "<com.turntable.gk.bean.RequestDepositRes$Body: void <init>()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(java.lang.Exception)>",
            "<com.turntable.gk.R$attr: void <init>()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>",
            "<com.turntable.gk.bean.VirtualCreditCard: java.lang.String getDueDate()>",
            "<org.codehaus.jackson.map.deser.SettableBeanProperty: void assignIndex(int)>",
            "<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>",
            "<org.codehaus.jackson.impl.JsonNumericParserBase: java.math.BigInteger getBigIntegerValue()>",
            "<com.turntable.gk.common.util.payTools.WeiBoRequest: java.lang.String getPayerId()>",
            "<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>",
            "<com.turntable.gk.SelectGlod: android.os.Handler getDefaultHandler1()>",
            "<org.codehaus.jackson.impl.Utf8Generator: void _releaseBuffers()>",
            "<org.codehaus.jackson.map.ser.SerializerBase: void <init>(java.lang.Class)>"
        ],
        "similar": [
            "<com.games.AdReciver: void onReceive(android.content.Context,android.content.Intent)>",
            "<com.turntable.gk.UpgradeActivity: void onCreate(android.os.Bundle)>",
            "<com.turntable.gk.BaseActivity: void onCreate(android.os.Bundle)>",
            "<com.turntable.gk.Test: void onCreate(android.os.Bundle)>"
        ],
        "new": ["<com.games.AdReciver: void a(android.content.Context)>"],
        "deleted": [
            "<com.games.a: void <clinit>()>",
            "<com.games.a: void a()>",
            "<com.games.a: byte[] a(char[])>",
            "<com.games.a: void a(android.app.Activity)>",
            "<com.games.a: void b(android.content.Context)>",
            "<com.games.a: void a(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
            "<com.games.a: void a(android.content.Context)>",
            "<com.games.a: java.lang.String a(java.lang.String)>",
            "<com.games.a: byte a(byte,int)>",
            "<com.games.a: java.lang.String a(java.lang.String,int)>"
        ]
    }
}