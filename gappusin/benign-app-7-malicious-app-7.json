{
    "conclusion": {
        "identical": "3413",
        "similar": "1",
        "new": "1",
        "deleted": "10",
        "simiScore": "0.9994143484626647"
    },
    "verbose": {
        "identical": [
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void <init>(float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.font.Size: void <init>()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: org.anddev.andengine.opengl.view.EGLConfigChooser access$1(org.anddev.andengine.opengl.view.GLSurfaceView)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$SurfaceGestureDetectorAdapter: boolean onSwipeUp()>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void onSetInitialValues(java.lang.Object,float,float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: float getInsetBottom()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: java.lang.Runnable getEvent()>",
            "<org.anddev.andengine.entity.Entity: float getRotation()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuartInOut: void <init>()>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.input.touch.controller.ITouchController getTouchController()>",
            "<org.anddev.andengine.entity.util.ScreenCapture: void onScreenGrabbed(android.graphics.Bitmap)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.RoundedRectangleTextureSourceDecoratorShape: org.anddev.andengine.opengl.texture.source.decorator.shape.RoundedRectangleTextureSourceDecoratorShape getDefaultInstance()>",
            "<com.game.myjewelsec.GameServer.GameServer: void removeDeadstone()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void onUpdate(float)>",
            "<org.anddev.andengine.entity.scene.popup.TextPopupScene: void <init>(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.opengl.font.Font,java.lang.String,float)>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: void <init>()>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler$2: void <init>(org.anddev.andengine.util.pool.PoolUpdateHandler,int)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: void <clinit>()>",
            "<org.anddev.andengine.util.MultiKeyHashMap: java.lang.Object get(java.lang.Object[])>",
            "<org.anddev.andengine.entity.modifier.DelayModifier: org.anddev.andengine.entity.modifier.DelayModifier clone()>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: java.lang.Object clone()>",
            "<org.anddev.andengine.util.modifier.ease.EaseCubicIn: org.anddev.andengine.util.modifier.ease.EaseCubicIn getInstance()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: float[] getCoordinatesX()>",
            "<org.anddev.andengine.util.MathUtils: float distance(float,float,float,float)>",
            "<org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl: void <init>(float,float,org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.opengl.texture.region.TextureRegion,org.anddev.andengine.opengl.texture.region.TextureRegion,float,org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl$IAnalogOnScreenControlListener)>",
            "<org.anddev.andengine.util.path.Direction: org.anddev.andengine.util.path.Direction valueOf(java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: boolean isFlippedVertical()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder: void <init>(int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: int readGlobalTileID(java.io.DataInputStream)>",
            "<org.anddev.andengine.entity.particle.emitter.RectangleParticleEmitter: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController: void reset()>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener access$0(org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTileProperties(int)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean collidesWith(org.anddev.andengine.entity.shape.IShape)>",
            "<org.anddev.andengine.opengl.texture.buffer.TextTextureBuffer: void <init>(int,int)>",
            "<org.anddev.andengine.entity.primitive.Line: float getHeight()>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long,int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableDepthTest(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: void <init>(float,float,float)>",
            "<org.anddev.andengine.opengl.font.FontFactory: org.anddev.andengine.opengl.font.Font create(org.anddev.andengine.opengl.texture.Texture,android.graphics.Typeface,float,boolean,int)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer getTextureBuffer()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.FillTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.FillTextureSourceDecorator clone()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer: void <init>(org.anddev.andengine.opengl.texture.region.BaseTextureRegion,int)>",
            "<org.anddev.andengine.util.Library: void remove(int)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util: boolean isConvex(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setBlendFunction(int,int)>",
            "<org.anddev.andengine.entity.Entity: float getInitialY()>",
            "<org.anddev.andengine.engine.camera.BoundCamera: void <init>(float,float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.entity.primitive.Line: float getY()>",
            "<org.anddev.andengine.util.path.Path: int getTileColumn(int)>",
            "<org.anddev.andengine.entity.util.FPSCounter: void onUpdate(float)>",
            "<org.anddev.andengine.engine.options.RenderOptions: org.anddev.andengine.engine.options.RenderOptions disableExtensionVertexBufferObjects()>",
            "<org.anddev.andengine.entity.particle.Particle: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.modifier.BaseModifier: boolean isRemoveWhenFinished()>",
            "<org.anddev.andengine.entity.modifier.PathModifier: boolean isFinished()>",
            "<org.anddev.andengine.util.SAXUtils: void appendAttribute(java.lang.StringBuilder,java.lang.String,byte)>",
            "<org.anddev.andengine.opengl.view.LogWriter: void flush()>",
            "<org.anddev.andengine.collision.RectangularShapeCollisionChecker: void fillVertices(org.anddev.andengine.entity.primitive.Line,float[])>",
            "<org.anddev.andengine.util.MathUtils: float radToDeg(float)>",
            "<com.game.myjewelsec.ObjectPool: void recyclePoolItem(java.lang.Object)>",
            "<org.anddev.andengine.entity.modifier.TripleValueSpanShapeModifier: void <init>(org.anddev.andengine.entity.modifier.TripleValueSpanShapeModifier)>",
            "<org.anddev.andengine.extension.physics.box2d.util.Vector2Pool: com.badlogic.gdx.math.Vector2 obtain()>",
            "<org.anddev.andengine.sensor.BaseSensorData: java.lang.String toString()>",
            "<org.anddev.andengine.ui.dialog.GenericInputDialogBuilder$1: void onClick(android.content.DialogInterface,int)>",
            "<org.anddev.andengine.level.LevelParser: void <init>(java.util.HashMap)>",
            "<com.game.myjewelsec.GameActivity$6: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture: void addTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.util.ProbabilityGenerator: void <init>()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer: float getX2()>",
            "<org.anddev.andengine.util.pool.Pool: void recyclePoolItem(org.anddev.andengine.util.pool.PoolItem)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void <init>()>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection: int getFromY()>",
            "<com.games.b: void <init>(android.content.Context)>",
            "<org.anddev.andengine.entity.particle.modifier.ColorModifier: void <init>(float,float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.util.SAXUtils: void appendAttribute(java.lang.StringBuilder,java.lang.String,short)>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier: void onManagedInitialize(java.lang.Object)>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: void <init>(float,float,float,float,org.anddev.andengine.opengl.texture.region.TiledTextureRegion,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<org.anddev.andengine.entity.primitive.Line: float getLineWidth()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: boolean isParticlesSpawnEnabled()>",
            "<org.anddev.andengine.entity.shape.Shape: void reset()>",
            "<org.anddev.andengine.extension.physics.box2d.util.Vector2Pool$1: java.lang.Object onAllocatePoolItem()>",
            "<com.game.myjewelsec.R$style: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setRotationCenterY(float)>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void <init>(float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseLinear: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.audio.sound.SoundManager: void <init>()>",
            "<org.anddev.andengine.engine.Engine$State: void notifyCanUpdate()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void surfaceCreated()>",
            "<org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl: void onClick(org.anddev.andengine.input.touch.detector.ClickDetector,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier: void onSetValue(java.lang.Object,float,float)>",
            "<org.anddev.andengine.collision.RectangularShapeCollisionChecker: boolean checkCollision(org.anddev.andengine.entity.shape.RectangularShape,org.anddev.andengine.entity.shape.RectangularShape)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuadInOut: org.anddev.andengine.util.modifier.ease.EaseQuadInOut getInstance()>",
            "<com.game.myjewelsec.GameServer.GameServer: void CheckRow()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TextureRegion extractFromTexture(org.anddev.andengine.opengl.texture.Texture,int,int,int,int)>",
            "<org.anddev.andengine.util.SystemUtils: android.content.pm.PackageInfo getPackageInfo(android.content.Context)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>",
            "<org.anddev.andengine.collision.RectangularShapeCollisionChecker: void fillVertices(org.anddev.andengine.entity.shape.RectangularShape,float[])>",
            "<com.game.myjewelsec.GameActivity: boolean access$30(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setAccelerationY(float)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: org.anddev.andengine.entity.particle.ParticleSystem ExplosionBuild2()>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: org.anddev.andengine.entity.particle.ParticleSystem sfireBuild()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void bufferData(javax.microedition.khronos.opengles.GL11,java.nio.ByteBuffer,int)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: void onUpdateControlKnob(float,float)>",
            "<org.anddev.andengine.util.TransformationPool: void <init>()>",
            "<org.anddev.andengine.engine.camera.Camera: void setCenter(float,float)>",
            "<com.game.myjewelsec.GameActivity: void loadGamelevel(int)>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.entity.scene.Scene getScene()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader: org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap load(java.io.InputStream)>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy: void onMeasure(org.anddev.andengine.opengl.view.RenderSurfaceView,int,int)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.QuickHull: int computeHull(com.badlogic.gdx.math.Vector2[])>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TextureRegion createFromAsset(org.anddev.andengine.opengl.texture.BuildableTexture,android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.opengl.vertex.LineVertexBuffer: void update(float,float,float,float)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void <init>(float,org.anddev.andengine.entity.modifier.PathModifier$Path)>",
            "<org.anddev.andengine.entity.Entity: void setScale(float)>",
            "<org.anddev.andengine.entity.primitive.Line: void onInitDraw(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.CircleTextureSourceDecoratorShape: org.anddev.andengine.opengl.texture.source.decorator.shape.CircleTextureSourceDecoratorShape getDefaultInstance()>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: void setWidth(int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuartInOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: void onSetInitialValue(org.anddev.andengine.entity.IEntity,float)>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign()>",
            "<org.anddev.andengine.audio.sound.Sound: org.anddev.andengine.audio.sound.SoundManager getAudioManager()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void clearEntityModifiers()>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: boolean isLoadedToHardware()>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void <init>()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: boolean isEnabled()>",
            "<org.anddev.andengine.entity.Entity: float[] convertLocalToSceneCoordinates(float,float)>",
            "<org.anddev.andengine.entity.Entity: float getRotationCenterX()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void <init>(float,float,float,float,float,float,int,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.sensor.location.LocationSensorOptions: void setMinimumTriggerDistance(long)>",
            "<org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation: void <init>(java.lang.String,int)>",
            "<org.anddev.andengine.engine.LimitedFPSEngine: void onUpdate(long)>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: float getLength()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: int getHeight()>",
            "<org.anddev.andengine.entity.particle.modifier.ExpireModifier: void setLifeTime(float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXProperty: void <init>(org.xml.sax.Attributes)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: java.util.ArrayList getTMXTileSets()>",
            "<org.anddev.andengine.opengl.font.FontManager: void <init>()>",
            "<org.anddev.andengine.util.Debug: void setDebugTag(java.lang.String)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: void <init>(org.anddev.andengine.engine.Engine,android.content.Context)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$2: void reset()>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: org.anddev.andengine.entity.modifier.MoveModifier clone()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$EglHelper: void start()>",
            "<org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$DebugTextureStateListener: void onUnloadedFromHardware(org.anddev.andengine.opengl.texture.Texture)>",
            "<org.anddev.andengine.ui.activity.BaseActivity$CancelledException: void <init>()>",
            "<org.anddev.andengine.util.Base64InputStream: int read(byte[],int,int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: void setUpdatePosition(boolean)>",
            "<org.anddev.andengine.sensor.location.LocationSensorOptions: void setEnabledOnly(boolean)>",
            "<com.game.myjewelsec.GameActivity: int access$3(com.game.myjewelsec.GameActivity)>",
            "<com.game.myjewelsec.OptionActivity$Bar: float getY()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getWidthScaled()>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueChangeModifier: void onManagedInitialize(java.lang.Object)>",
            "<org.anddev.andengine.audio.BaseAudioManager: void setMasterVolume(float)>",
            "<com.game.myjewelsec.MainActivity: void onLoadComplete()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: int getTileColumns()>",
            "<com.game.myjewelsec.SelectActivity: boolean onKeyDown(int,android.view.KeyEvent)>",
            "<org.anddev.andengine.entity.modifier.TripleValueSpanShapeModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<com.game.myjewelsec.OptionActivity: void onPause()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void <init>(com.badlogic.gdx.math.Vector2,boolean)>",
            "<org.anddev.andengine.entity.shape.RectangularShape: void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: void reset()>",
            "<org.anddev.andengine.collision.ShapeCollisionChecker: boolean checkContains(float[],int,float,float)>",
            "<org.anddev.andengine.util.path.astar.AStarPathFinder: void <init>(org.anddev.andengine.util.path.ITiledMap,int,boolean)>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerData: float getX()>",
            "<org.anddev.andengine.entity.modifier.ParallelEntityModifier: org.anddev.andengine.util.modifier.ParallelModifier clone()>",
            "<org.anddev.andengine.util.ListUtils: java.util.ArrayList toList(java.lang.Object[])>",
            "<org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<com.game.myjewelsec.GameServer.myAppData$SysConfig: boolean getVibra()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone()>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: void <init>(float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void spawnParticle()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getScaleX()>",
            "<com.game.myjewelsec.MapActivity: void onDestroy()>",
            "<org.anddev.andengine.audio.BaseAudioEntity: void setVolume(float,float)>",
            "<org.anddev.andengine.entity.scene.Scene: boolean onSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.util.ScreenCapture: void onScreenGrabFailed(java.lang.Exception)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: int calculateCurrentFrameIndex()>",
            "<org.anddev.andengine.entity.scene.popup.TextPopupScene: org.anddev.andengine.entity.text.Text getText()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: boolean isUpdateRotation()>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: void <init>(org.anddev.andengine.entity.modifier.MoveYModifier)>",
            "<org.anddev.andengine.entity.modifier.SingleValueChangeShapeModifier: void <init>(float,float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.FillTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone()>",
            "<org.anddev.andengine.engine.camera.Camera: void applySceneRotation(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.DialogUtils: void <init>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: java.util.ArrayList getTMXObjectGroups()>",
            "<org.anddev.andengine.util.ViewUtils: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: void onSetValues(java.lang.Object,float,float,float)>",
            "<org.anddev.andengine.util.FileUtils: java.io.InputStream openOnExternalStorage(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void <init>()>",
            "<com.game.myjewelsec.GameActivity: boolean jump(int,int)>",
            "<org.anddev.andengine.entity.modifier.FadeInModifier: org.anddev.andengine.entity.modifier.AlphaModifier clone()>",
            "<com.game.myjewelsec.OptionActivity: void access$8(com.game.myjewelsec.OptionActivity,int)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void onResume()>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: int getY()>",
            "<org.anddev.andengine.util.path.Path: org.anddev.andengine.util.path.Path$Step getStep(int)>",
            "<com.game.myjewelsec.ObjectPool: com.game.myjewelsec.Shell onAllocatePoolItem()>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.GrahamScan: void <init>()>",
            "<org.anddev.andengine.util.SmartList: java.lang.Object remove(org.anddev.andengine.util.IMatcher)>",
            "<org.anddev.andengine.opengl.texture.source.PictureTextureSource: int getHeight()>",
            "<org.anddev.andengine.entity.scene.Scene: boolean hasChildScene()>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$46()>",
            "<com.game.myjewelsec.modifier.RandomColorInitializer: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setScaleCenterY(float)>",
            "<org.anddev.andengine.entity.primitive.Line: void onUpdateVertexBuffer()>",
            "<org.anddev.andengine.entity.modifier.RotationAtModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setParent(org.anddev.andengine.entity.IEntity)>",
            "<com.game.myjewelsec.MaxStepPhysicsWorld: void <init>(int,com.badlogic.gdx.math.Vector2,boolean,int,int)>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TiledTextureRegion,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.FillResolutionPolicy: void onMeasure(org.anddev.andengine.opengl.view.RenderSurfaceView,int,int)>",
            "<org.anddev.andengine.util.Debug: org.anddev.andengine.util.Debug$DebugLevel getDebugLevel()>",
            "<org.anddev.andengine.util.path.Path: void append(org.anddev.andengine.util.path.Path$Step)>",
            "<org.anddev.andengine.util.VerticalAlign: org.anddev.andengine.util.VerticalAlign valueOf(java.lang.String)>",
            "<org.anddev.andengine.entity.Entity: void setRotationCenterX(float)>",
            "<org.anddev.andengine.opengl.texture.TextureManager: boolean unloadTexture(org.anddev.andengine.opengl.texture.Texture)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: void <init>()>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.engine.Engine: void onTickUpdate()>",
            "<org.anddev.andengine.util.Transformation: void preTranslate(float,float)>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign()>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier: void onManagedUpdate(float,java.lang.Object)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: int getTileHeight()>",
            "<org.anddev.andengine.entity.text.TickerText: void setReverse(boolean)>",
            "<org.anddev.andengine.util.path.Path$Step: void <init>(org.anddev.andengine.util.path.Path,int,int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: java.lang.String getOrientation()>",
            "<org.anddev.andengine.entity.scene.menu.item.SpriteMenuItem: void onUnselected()>",
            "<org.anddev.andengine.engine.Engine: void <init>(org.anddev.andengine.engine.options.EngineOptions)>",
            "<org.anddev.andengine.util.modifier.BaseTripleValueSpanModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.font.Font: void update(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.opengl.texture.Texture: void clearTextureSources()>",
            "<org.anddev.andengine.entity.Entity: int getChildCount()>",
            "<org.anddev.andengine.input.touch.controller.SingleTouchControler: boolean onHandleMotionEvent(android.view.MotionEvent)>",
            "<org.anddev.andengine.util.pool.EntityDetachRunnablePoolUpdateHandler: org.anddev.andengine.util.pool.RunnablePoolItem onAllocatePoolItem()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setAcceleration(float)>",
            "<org.anddev.andengine.ui.dialog.GenericInputDialogBuilder: android.app.Dialog create()>",
            "<org.anddev.andengine.util.ActivityUtils$1$1: void onCancel(android.content.DialogInterface)>",
            "<org.anddev.andengine.entity.modifier.RotationAtModifier: org.anddev.andengine.entity.modifier.RotationModifier clone()>",
            "<com.game.myjewelsec.GameActivity$10: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void removeParticleInitializer(org.anddev.andengine.entity.particle.initializer.IParticleInitializer)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: int getHeight()>",
            "<org.anddev.andengine.entity.Entity: void registerUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler)>",
            "<org.anddev.andengine.entity.modifier.PathModifier$3: void onSubSequenceFinished(org.anddev.andengine.util.modifier.IModifier,org.anddev.andengine.entity.IEntity,int)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.EllipseTextureSourceDecoratorShape: void <init>()>",
            "<org.anddev.andengine.util.modifier.ease.EaseStrongOut: void <init>()>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: float getPitch()>",
            "<org.anddev.andengine.util.Debug$DebugLevel: org.anddev.andengine.util.Debug$DebugLevel valueOf(java.lang.String)>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: void onSetInitialValues(org.anddev.andengine.entity.IEntity,float,float,float)>",
            "<org.anddev.andengine.entity.util.ScreenCapture: void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: boolean isFlippedHorizontal()>",
            "<org.anddev.andengine.entity.scene.popup.TextPopupScene: void <init>(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.opengl.font.Font,java.lang.String,float,org.anddev.andengine.entity.modifier.IEntityModifier)>",
            "<org.anddev.andengine.extension.physics.box2d.util.Vector2Pool: void <init>()>",
            "<org.anddev.andengine.entity.Entity: void setAlpha(float)>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector$1: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.BaseHullAlgorithm: void <init>()>",
            "<com.game.myjewelsec.GameActivity: void access$12(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.util.SmartList: java.lang.Object find(org.anddev.andengine.util.IMatcher)>",
            "<org.anddev.andengine.entity.particle.modifier.ColorModifier: void onSetValues(org.anddev.andengine.entity.particle.Particle,float,float,float)>",
            "<org.anddev.andengine.util.pool.Pool: void onHandleObtainItem(java.lang.Object)>",
            "<org.anddev.andengine.entity.sprite.Sprite: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TextureRegion,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<org.anddev.andengine.entity.particle.modifier.BaseDoubleValueSpanModifier: float calculateValueB(float)>",
            "<org.anddev.andengine.entity.scene.Scene: boolean onChildSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.audio.music.Music: org.anddev.andengine.audio.IAudioManager getAudioManager()>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController: void setTouchEventCallback(org.anddev.andengine.input.touch.controller.ITouchController$ITouchEventCallback)>",
            "<org.anddev.andengine.opengl.font.Font: org.anddev.andengine.opengl.font.Letter createLetter(char)>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.engine.Engine access$33(com.game.myjewelsec.GameActivity)>",
            "<com.game.myjewelsec.GameActivity: void access$16(com.game.myjewelsec.GameActivity,boolean)>",
            "<org.anddev.andengine.engine.camera.Camera: void applyCameraSceneRotation(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.audio.music.Music: void play()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: org.anddev.andengine.opengl.texture.region.TextureRegion getTextureRegionFromGlobalTileID(int)>",
            "<org.anddev.andengine.engine.Engine: boolean onTouch(android.view.View,android.view.MotionEvent)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<com.game.myjewelsec.GameServer.ParticleSystemCrashPool: void <init>(org.anddev.andengine.opengl.texture.region.TextureRegion,com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.util.levelstats.LevelStatsDBConnector: void <init>(android.content.Context,java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.util.path.Direction: org.anddev.andengine.util.path.Direction[] values()>",
            "<org.anddev.andengine.entity.Entity: void setScale(float,float)>",
            "<com.game.myjewelsec.MapActivity: int access$3(com.game.myjewelsec.MapActivity)>",
            "<org.anddev.andengine.level.LevelLoader: void onAfterLoadLevel()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader: org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap loadFromAsset(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.opengl.font.FontFactory: org.anddev.andengine.opengl.font.StrokeFont createStroke(org.anddev.andengine.opengl.texture.Texture,android.graphics.Typeface,float,boolean,int,float,int,boolean)>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.ArrayUtils: void <init>()>",
            "<org.anddev.andengine.audio.music.MusicFactory: void <init>()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuintOut: org.anddev.andengine.util.modifier.ease.EaseQuintOut getInstance()>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: float getWidth()>",
            "<org.anddev.andengine.entity.primitive.Line: boolean contains(float,float)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController: void <init>()>",
            "<org.anddev.andengine.extension.physics.box2d.FixedStepPhysicsWorld: void <init>(int,com.badlogic.gdx.math.Vector2,boolean,int,int)>",
            "<org.anddev.andengine.entity.particle.modifier.ExpireModifier: void <init>(float,float)>",
            "<com.game.myjewelsec.MapActivity: org.anddev.andengine.entity.sprite.Sprite access$1(com.game.myjewelsec.MapActivity)>",
            "<org.anddev.andengine.entity.modifier.PathModifier$2: void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.util.MathUtils: float arraySum(float[])>",
            "<org.anddev.andengine.entity.text.ChangeableText: void setText(java.lang.String)>",
            "<com.game.myjewelsec.GameActivity: void access$9(com.game.myjewelsec.GameActivity,int)>",
            "<org.anddev.andengine.engine.Engine$State: void waitUntilCanUpdate()>",
            "<org.anddev.andengine.util.pool.RunnablePoolItem: void <init>()>",
            "<org.anddev.andengine.util.ActivityUtils: void doAsync(android.content.Context,int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,boolean)>",
            "<org.anddev.andengine.entity.sprite.BaseSprite: void <init>(float,float,float,float,org.anddev.andengine.opengl.texture.region.BaseTextureRegion)>",
            "<org.anddev.andengine.util.pool.RunnablePoolUpdateHandler: void onHandlePoolItem(org.anddev.andengine.util.pool.PoolItem)>",
            "<org.anddev.andengine.util.BetaUtils: boolean finishWhenExpired(android.app.Activity,java.util.GregorianCalendar,int,int,android.content.Intent,android.content.Intent)>",
            "<org.anddev.andengine.entity.util.FrameCountCrasher: void onUpdate(float)>",
            "<org.anddev.andengine.engine.options.TouchOptions: org.anddev.andengine.engine.options.TouchOptions disableRunOnUpdateThread()>",
            "<org.anddev.andengine.util.path.astar.ManhattanHeuristic: float getExpectedRestCost(org.anddev.andengine.util.path.ITiledMap,java.lang.Object,int,int,int,int)>",
            "<org.anddev.andengine.entity.modifier.DoubleValueSpanShapeModifier: void <init>(org.anddev.andengine.entity.modifier.DoubleValueSpanShapeModifier)>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: void <init>(float,float,float)>",
            "<org.anddev.andengine.util.SAXUtils: long getLongAttributeOrThrow(org.xml.sax.Attributes,java.lang.String)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<com.game.myjewelsec.GameServer.GameServer: void showStoneList()>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$43()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: int access$0(org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect)>",
            "<com.game.myjewelsec.OptionActivity: org.anddev.andengine.opengl.texture.region.TextureRegion access$5(com.game.myjewelsec.OptionActivity)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void <init>(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void setVelocityIterations(int)>",
            "<org.anddev.andengine.entity.particle.initializer.AlphaInitializer: void <init>(float,float)>",
            "<org.anddev.andengine.entity.scene.Scene: org.anddev.andengine.entity.layer.Layer getLayer(int)>",
            "<org.anddev.andengine.util.MathUtils: float atan2(float,float)>",
            "<org.anddev.andengine.audio.sound.SoundFactory: org.anddev.andengine.audio.sound.Sound createSoundFromResource(org.anddev.andengine.audio.sound.SoundManager,android.content.Context,int)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: void setVelocityY(float)>",
            "<org.anddev.andengine.util.modifier.BaseModifier: boolean isFinished()>",
            "<org.anddev.andengine.sensor.orientation.OrientationSensorOptions: org.anddev.andengine.sensor.SensorDelay getSensorDelay()>",
            "<org.anddev.andengine.input.touch.detector.ClickDetector: boolean onManagedTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter: float getRadiusY()>",
            "<org.anddev.andengine.entity.modifier.DelayModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.entity.modifier.RotationAtModifier: void <init>(float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler$1: org.anddev.andengine.util.pool.PoolItem onAllocatePoolItem()>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler: void onUpdate(float)>",
            "<org.anddev.andengine.opengl.texture.source.AssetTextureSource: int getHeight()>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: org.anddev.andengine.opengl.texture.source.ITextureSource getTextureSource()>",
            "<org.anddev.andengine.opengl.texture.source.FileTextureSource: java.lang.Object clone()>",
            "<com.game.myjewelsec.MainActivity: void <init>()>",
            "<org.anddev.andengine.util.progress.ProgressMonitor: void setSubMonitorRange(int,int)>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.input.touch.detector.ScrollDetector: void setTriggerScrollMinimumDistance(float)>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: void setColor(float,float,float)>",
            "<org.anddev.andengine.opengl.texture.source.AssetTextureSource: java.lang.String toString()>",
            "<org.anddev.andengine.util.Base64: java.lang.String encodeToString(byte[],int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void <init>(com.badlogic.gdx.math.Vector2,boolean,int,int)>",
            "<org.anddev.andengine.util.FileUtils: void copyToExternalStorage(android.content.Context,java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.util.pool.GenericPool: java.lang.Object obtainPoolItem()>",
            "<org.anddev.andengine.entity.util.ScreenGrabber: void grab(int,int,int,int,org.anddev.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback)>",
            "<org.anddev.andengine.audio.sound.Sound: org.anddev.andengine.audio.IAudioManager getAudioManager()>",
            "<com.game.myjewelsec.GameActivity$1: void <init>(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: boolean isHolding()>",
            "<org.anddev.andengine.entity.Entity: void setPosition(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: void setMagneticFieldAccuracy(int)>",
            "<org.anddev.andengine.util.Transformation: java.lang.String toString()>",
            "<org.anddev.andengine.util.modifier.BaseModifier: org.anddev.andengine.util.modifier.IModifier$IModifierListener getModifierListener()>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign)>",
            "<org.anddev.andengine.entity.particle.emitter.CircleOutlineParticleEmitter: void <init>(float,float,float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsetBottom(float)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],boolean)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseRectangleParticleEmitter: void setWidth(float)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$EglHelper: void <init>(org.anddev.andengine.opengl.view.GLSurfaceView)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXParseException: void <init>(java.lang.String)>",
            "<org.anddev.andengine.engine.camera.BoundCamera: float getBoundsHeight()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.util.TransformationPool: void <clinit>()>",
            "<org.anddev.andengine.util.MathUtils: void arraySumInternal(int[])>",
            "<org.anddev.andengine.entity.shape.RectangularShape: float getBaseHeight()>",
            "<org.anddev.andengine.util.Base64$Decoder: void <clinit>()>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: void <init>(float,org.anddev.andengine.engine.handler.timer.ITimerCallback)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$1: void <init>(org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl,float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$2: void onUpdate(float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: void <init>(org.anddev.andengine.util.modifier.SequenceModifier)>",
            "<org.anddev.andengine.entity.primitive.Line: void setPosition(float,float,float,float)>",
            "<org.anddev.andengine.audio.music.Music: android.media.MediaPlayer getMediaPlayer()>",
            "<org.anddev.andengine.entity.particle.Particle: void reset()>",
            "<org.anddev.andengine.util.modifier.ParallelModifier: void <init>(org.anddev.andengine.util.modifier.ParallelModifier)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util: boolean isRightOf(com.badlogic.gdx.math.Vector2,org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: void setZoomFactor(float)>",
            "<org.anddev.andengine.util.SAXUtils: int getIntAttributeOrThrow(org.xml.sax.Attributes,java.lang.String)>",
            "<org.anddev.andengine.util.SAXUtils: float getFloatAttribute(org.xml.sax.Attributes,java.lang.String,float)>",
            "<org.anddev.andengine.util.pool.EntityDetachRunnablePoolItem: void setEntity(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector: void <init>(float)>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: void deleteBufferOnHardware(javax.microedition.khronos.opengles.GL11)>",
            "<org.anddev.andengine.util.Debug: void e(java.lang.String,java.lang.Throwable)>",
            "<org.anddev.andengine.util.Base64InputStream: int read()>",
            "<org.anddev.andengine.ui.dialog.StringInputDialogBuilder: void <init>(android.content.Context,int,int,int,int,org.anddev.andengine.util.Callback,android.content.DialogInterface$OnCancelListener)>",
            "<org.anddev.andengine.opengl.font.Letter: boolean equals(java.lang.Object)>",
            "<org.anddev.andengine.entity.scene.menu.item.TextMenuItem: void onSelected()>",
            "<org.anddev.andengine.util.Debug$DebugLevel: void <init>(java.lang.String,int)>",
            "<com.game.myjewelsec.GameActivity: void findoneAuto(int)>",
            "<org.anddev.andengine.entity.particle.Particle: void setDead(boolean)>",
            "<org.anddev.andengine.util.MathUtils: boolean isPowerOfTwo(int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: int getJointCount()>",
            "<org.anddev.andengine.audio.BaseAudioEntity: float getLeftVolume()>",
            "<com.game.myjewelsec.GameActivity$1: void handleMessage(android.os.Message)>",
            "<org.anddev.andengine.opengl.font.FontFactory: org.anddev.andengine.opengl.font.Font createFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,float,boolean,int)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableScissorTest(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.engine.options.RenderOptions: org.anddev.andengine.engine.options.RenderOptions enableExtensionVertexBufferObjects()>",
            "<org.anddev.andengine.util.MathUtils: void <clinit>()>",
            "<org.anddev.andengine.opengl.view.BaseConfigChooser: void <init>(int[])>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.FixtureDef createFixtureDef(float,float,float,boolean,short,short,short)>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.util.ScreenCapture: void reset()>",
            "<com.game.myjewelsec.GameActivity: void ShowMessage(int,int,int,int)>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: org.anddev.andengine.entity.modifier.ScaleModifier clone()>",
            "<org.anddev.andengine.util.StreamUtils: byte[] streamToBytes(java.io.InputStream)>",
            "<org.anddev.andengine.entity.modifier.TripleValueSpanShapeModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.modifier.SingleValueChangeShapeModifier: void <init>(org.anddev.andengine.entity.modifier.SingleValueChangeShapeModifier)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuartOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.sensor.SensorDelay: org.anddev.andengine.sensor.SensorDelay valueOf(java.lang.String)>",
            "<org.anddev.andengine.util.MathUtils: float[] rotateAroundCenter(float[],float,float,float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getGreen()>",
            "<org.anddev.andengine.sensor.SensorDelay: void <clinit>()>",
            "<org.anddev.andengine.entity.particle.modifier.OffCameraExpireModifier: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter: void setRadius(float)>",
            "<org.anddev.andengine.engine.LimitedFPSEngine: void <init>(org.anddev.andengine.engine.options.EngineOptions,int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.FixtureDef createFixtureDef(float,float,float,boolean)>",
            "<org.anddev.andengine.util.Transformation: void preScale(float,float)>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.engine.camera.Camera getCamera()>",
            "<org.anddev.andengine.util.modifier.ease.EaseCubicOut: void <init>()>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: java.nio.FloatBuffer slice()>",
            "<org.anddev.andengine.util.SmartList: void clear(org.anddev.andengine.util.ParameterCallable)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: int getWidth()>",
            "<com.game.myjewelsec.SelectActivity: void onResumeGame()>",
            "<org.anddev.andengine.util.Debug: void d(java.lang.String,java.lang.Throwable)>",
            "<org.anddev.andengine.entity.shape.Shape: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: int getTileWidth()>",
            "<org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener,org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier[])>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void unloadBufferObjects(org.anddev.andengine.opengl.buffer.BufferObject[])>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean isIgnoreUpdate()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean isVisible()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager: org.anddev.andengine.extension.physics.box2d.PhysicsConnector findPhysicsConnectorByShape(org.anddev.andengine.entity.shape.IShape)>",
            "<com.game.myjewelsec.SelectActivity$1: void <init>(com.game.myjewelsec.SelectActivity)>",
            "<org.anddev.andengine.entity.Entity: void setScaleX(float)>",
            "<org.anddev.andengine.util.FileUtils: boolean isDirectoryExistingOnExternalStorage(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.util.BetaUtils: void <init>()>",
            "<org.anddev.andengine.entity.shape.RectangularShape: void setBaseSize()>",
            "<org.anddev.andengine.util.modifier.ParallelModifier: float getDuration()>",
            "<org.anddev.andengine.engine.camera.BoundCamera: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.entity.text.ChangeableText: void <init>(float,float,org.anddev.andengine.opengl.font.Font,java.lang.String,int)>",
            "<org.anddev.andengine.util.pool.EntityDetachRunnablePoolItem: void run()>",
            "<com.game.myjewelsec.GameServer.GameServer: void addLeft()>",
            "<org.anddev.andengine.entity.util.FrameCountCrasher: void <init>(int)>",
            "<org.anddev.andengine.util.modifier.ModifierList: void reset()>",
            "<org.anddev.andengine.entity.scene.popup.PopupScene: void <init>(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.entity.scene.Scene,float)>",
            "<org.anddev.andengine.opengl.texture.source.FileTextureSource: int getWidth()>",
            "<org.anddev.andengine.engine.Engine: void registerSelfAsSensorListener(android.hardware.SensorManager,int,org.anddev.andengine.sensor.SensorDelay)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: float getMaxVelocityX()>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$39()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuartOut: void <init>()>",
            "<com.game.myjewelsec.LoadActivity: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator: void <init>(org.anddev.andengine.entity.scene.menu.item.IMenuItem,float,float,float,float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseStrongInOut: org.anddev.andengine.util.modifier.ease.EaseStrongInOut getInstance()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void onUpdateVertexBuffer()>",
            "<com.game.myjewelsec.GameServer.GameServer: void addHashStone(int,com.game.myjewelsec.GameServer.mySprite)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: void onUpdate(float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setScaleCenter(float,float)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: org.anddev.andengine.engine.camera.Camera getCamera()>",
            "<org.anddev.andengine.util.ProbabilityGenerator: void clear()>",
            "<org.anddev.andengine.util.VerticalAlign: void <init>(java.lang.String,int)>",
            "<org.anddev.andengine.entity.primitive.Line: float getWidth()>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy: void <init>(float)>",
            "<org.anddev.andengine.extension.physics.box2d.util.Vector2Pool: com.badlogic.gdx.math.Vector2 obtain(float,float)>",
            "<com.game.myjewelsec.OptionActivity$Bar: org.anddev.andengine.entity.sprite.Sprite access$3(com.game.myjewelsec.OptionActivity$Bar)>",
            "<org.anddev.andengine.util.modifier.LoopModifier$InternalModifierListener: void <init>(org.anddev.andengine.util.modifier.LoopModifier,org.anddev.andengine.util.modifier.LoopModifier$InternalModifierListener)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler: void <init>(int,int)>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy: void onMeasure(org.anddev.andengine.opengl.view.RenderSurfaceView,int,int)>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$40()>",
            "<org.anddev.andengine.input.touch.detector.ClickDetector: long getTriggerClickMaximumMilliseconds()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup: void <init>(org.xml.sax.Attributes)>",
            "<org.anddev.andengine.entity.scene.Scene: void postRunnable(java.lang.Runnable)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup: java.lang.String getName()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setScale(float,float)>",
            "<org.anddev.andengine.engine.options.WakeLockOptions: int getFlag()>",
            "<org.anddev.andengine.collision.ShapeCollisionChecker: boolean checkCollisionSub(int,int,float[],float[],int)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: void onHandleControlBaseLeft()>",
            "<com.game.myjewelsec.LevelSeleActivity: void addSele(org.anddev.andengine.entity.text.Text,int)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: void <init>(float,float)>",
            "<org.anddev.andengine.entity.util.FrameCounter: void reset()>",
            "<org.anddev.andengine.entity.modifier.PathModifier: float getDuration()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionLibrary: java.lang.Object get(int)>",
            "<org.anddev.andengine.util.StreamUtils: void copy(java.io.InputStream,java.io.OutputStream)>",
            "<org.anddev.andengine.entity.scene.background.BaseBackground: void clearBackgroundModifiers()>",
            "<org.anddev.andengine.util.modifier.util.ModifierUtils: org.anddev.andengine.util.modifier.IModifier getModifierWithLongestDuration(org.anddev.andengine.util.modifier.IModifier[])>",
            "<com.game.myjewelsec.GameActivity$14: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$SurfaceGestureDetectorAdapter: boolean onSwipeDown()>",
            "<org.anddev.andengine.ui.dialog.GenericInputDialogBuilder: int access$0(org.anddev.andengine.ui.dialog.GenericInputDialogBuilder)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$InnerOnGestureDetectorListener: void <init>(org.anddev.andengine.input.touch.detector.SurfaceGestureDetector,float)>",
            "<org.anddev.andengine.util.sort.InsertionSorter: void sort(java.lang.Object[],int,int,java.util.Comparator)>",
            "<com.game.myjewelsec.SelectActivity: void <init>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXLayerProperties()>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity: org.anddev.andengine.engine.Engine onLoadEngine()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXProperty: java.lang.String getName()>",
            "<com.game.myjewelsec.GameActivity$11: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture: void <init>(int,int)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: boolean needToWait()>",
            "<org.anddev.andengine.opengl.texture.source.PictureTextureSource: int getWidth()>",
            "<org.anddev.andengine.util.Transformation: void postTranslate(float,float)>",
            "<org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource: int getHeight()>",
            "<com.game.myjewelsec.GameServer.GameServer: void CrossBomb(int,int)>",
            "<org.anddev.andengine.entity.primitive.BaseRectangle: org.anddev.andengine.opengl.vertex.RectangleVertexBuffer getVertexBuffer()>",
            "<org.anddev.andengine.engine.Engine: void setScene(org.anddev.andengine.entity.scene.Scene)>",
            "<com.game.myjewelsec.ObjectPool: void recyclePoolItem(com.game.myjewelsec.Shell)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void onResumeGame()>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: org.anddev.andengine.opengl.texture.region.buffer.TiledTextureRegionBuffer onCreateTextureRegionBuffer()>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: void <init>(float,float,float,float,org.anddev.andengine.opengl.texture.region.TiledTextureRegion)>",
            "<org.anddev.andengine.input.touch.detector.BaseDetector: boolean onTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<com.game.myjewelsec.GameServer.mySprite: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TiledTextureRegion,int)>",
            "<org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<com.games.b: java.util.List b(android.content.Context)>",
            "<org.anddev.andengine.entity.particle.initializer.ColorInitializer: void <init>(float,float,float,float,float,float)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionLibrary: void <init>(int)>",
            "<org.anddev.andengine.util.MathUtils: int nextPowerOfTwo(float)>",
            "<org.anddev.andengine.entity.modifier.EntityModifier: void <init>()>",
            "<com.game.myjewelsec.MapActivity: void access$4(com.game.myjewelsec.MapActivity,int)>",
            "<com.game.myjewelsec.LevelSeleActivity: void access$9(com.game.myjewelsec.LevelSeleActivity,float)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void setContactFilter(com.badlogic.gdx.physics.box2d.ContactFilter)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController: void onUpdate(float)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: void onSetInitialValues(org.anddev.andengine.entity.scene.background.IBackground,float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseElasticOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.engine.Engine: void vibrate(long[],int)>",
            "<org.anddev.andengine.entity.primitive.Line: org.anddev.andengine.opengl.vertex.LineVertexBuffer getVertexBuffer()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setScaleCenterX(float)>",
            "<org.anddev.andengine.opengl.view.SimpleEGLConfigChooser: void <init>(boolean)>",
            "<org.anddev.andengine.opengl.font.Font: android.graphics.Bitmap getLetterBitmap(char)>",
            "<com.game.myjewelsec.R$id: void <init>()>",
            "<org.anddev.andengine.util.modifier.ease.EaseBounceInOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.layer.ZIndexSorter: void sort(java.util.List,int,int)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node: org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node getChildB()>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: void <init>(float,float,float,float,org.anddev.andengine.opengl.texture.region.TiledTextureRegion,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<org.anddev.andengine.engine.handler.BaseEntityUpdateHandler: void <init>(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.util.Base64InputStream: void mark(int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseElasticIn: void <init>()>",
            "<org.anddev.andengine.audio.BaseAudioEntity: void setVolume(float)>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: void clear()>",
            "<org.anddev.andengine.extension.physics.box2d.util.Vector2Pool: void recycle(com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.entity.particle.modifier.ExpireModifier: void setLifeTime(float,float)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite init(long[],int,int[],int,int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: void <init>()>",
            "<org.anddev.andengine.entity.scene.background.RepeatingSpriteBackground: void <init>(float,float,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.opengl.texture.source.ITextureSource,float)>",
            "<org.anddev.andengine.entity.scene.CameraScene: void centerShapeInCameraVertically(org.anddev.andengine.entity.shape.Shape)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: int getBottom()>",
            "<org.anddev.andengine.util.Base64$Encoder: void <init>(int,byte[])>",
            "<com.game.myjewelsec.OptionActivity: org.anddev.andengine.opengl.texture.region.TextureRegion access$6(com.game.myjewelsec.OptionActivity)>",
            "<org.anddev.andengine.engine.options.EngineOptions: void <init>(boolean,org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation,org.anddev.andengine.engine.options.resolutionpolicy.IResolutionPolicy,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: void onHandleModifierFinished(org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener,org.anddev.andengine.util.modifier.IModifier,java.lang.Object)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener access$2(org.anddev.andengine.entity.modifier.PathModifier)>",
            "<org.anddev.andengine.entity.sprite.BaseSprite: org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void bindBuffer(javax.microedition.khronos.opengles.GL11,int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXException: void <init>(java.lang.Throwable)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer: void update()>",
            "<org.anddev.andengine.entity.scene.background.BaseBackground: void <init>()>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: int getHeight()>",
            "<org.anddev.andengine.entity.Entity: float getScaleCenterY()>",
            "<org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter: void onUpdate(float)>",
            "<com.game.myjewelsec.SelectActivity: org.anddev.andengine.engine.Engine onLoadEngine()>",
            "<org.anddev.andengine.engine.handler.BaseEntityUpdateHandler: void reset()>",
            "<com.game.myjewelsec.LevelSeleActivity: int getRenderSurfaceViewID()>",
            "<org.anddev.andengine.util.modifier.LoopModifier$InternalModifierListener: void <init>(org.anddev.andengine.util.modifier.LoopModifier)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter: float getCenterY()>",
            "<org.anddev.andengine.util.MultiKey: void <init>(java.lang.Object[])>",
            "<org.anddev.andengine.util.SmartList: void <init>(int)>",
            "<org.anddev.andengine.opengl.font.StrokeFont: void <init>(org.anddev.andengine.opengl.texture.Texture,android.graphics.Typeface,float,boolean,int,float,int)>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: void unloadFromHardware(javax.microedition.khronos.opengles.GL11)>",
            "<com.game.myjewelsec.GameServer.GameServer: void CheckList()>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$1: void reset()>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController$TouchEventRunnablePoolItem: void run()>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: void setScene(org.anddev.andengine.entity.scene.Scene)>",
            "<org.anddev.andengine.util.Base64: byte[] decode(byte[],int,int,int)>",
            "<org.anddev.andengine.engine.camera.BoundCamera: float determineBoundedX()>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerData: void <init>()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: int getWidth()>",
            "<com.game.myjewelsec.GameActivity: void InitProgressBar()>",
            "<org.anddev.andengine.opengl.font.FontLibrary: void <init>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: int getTileHeight()>",
            "<org.anddev.andengine.opengl.texture.source.ResourceTextureSource: int getWidth()>",
            "<org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener,org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier$ISubSequenceBackgroundModifierListener,org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier[])>",
            "<org.anddev.andengine.entity.modifier.ParallelEntityModifier: void <init>(org.anddev.andengine.entity.modifier.ParallelEntityModifier)>",
            "<org.anddev.andengine.util.MathUtils: void <init>()>",
            "<com.game.myjewelsec.MainActivity: void onPause()>",
            "<org.anddev.andengine.engine.Engine: void onResume()>",
            "<com.game.myjewelsec.OptionActivity$Bar: org.anddev.andengine.entity.sprite.Sprite access$0(com.game.myjewelsec.OptionActivity$Bar)>",
            "<org.anddev.andengine.opengl.texture.Texture: void loadToHardware(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.modifier.ease.EaseBounceOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.util.SAXUtils: void appendAttribute(java.lang.StringBuilder,java.lang.String,double)>",
            "<org.anddev.andengine.extension.physics.box2d.FixedStepPhysicsWorld: void <init>(int,int,com.badlogic.gdx.math.Vector2,boolean)>",
            "<org.anddev.andengine.util.modifier.ease.EaseExponentialOut: void <init>()>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: boolean isColorEnabled()>",
            "<com.game.myjewelsec.GameActivity: void access$8(com.game.myjewelsec.GameActivity,int)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: void <init>(float)>",
            "<org.anddev.andengine.util.path.astar.AStarPathFinder$Node: int compareTo(org.anddev.andengine.util.path.astar.AStarPathFinder$Node)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource)>",
            "<org.anddev.andengine.engine.options.EngineOptions: boolean needsMusic()>",
            "<org.anddev.andengine.engine.Engine: boolean disableOrientationSensor(android.content.Context)>",
            "<org.anddev.andengine.entity.shape.Shape: void <init>(float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.GrahamScan: void quicksort(int,int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void unregisterPhysicsConnector(org.anddev.andengine.extension.physics.box2d.PhysicsConnector)>",
            "<org.anddev.andengine.util.pool.PoolItem: void onRecycle()>",
            "<org.anddev.andengine.opengl.view.LogWriter: void write(char[],int,int)>",
            "<org.anddev.andengine.entity.shape.Shape: float getHeightScaled()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setScaleY(float)>",
            "<org.anddev.andengine.entity.modifier.RotationByModifier: void <init>(org.anddev.andengine.entity.modifier.RotationByModifier)>",
            "<org.anddev.andengine.engine.handler.collision.CollisionHandler: void <init>(org.anddev.andengine.engine.handler.collision.ICollisionCallback,org.anddev.andengine.entity.shape.IShape,org.anddev.andengine.entity.shape.IShape)>",
            "<org.anddev.andengine.entity.util.FrameCounter: void onUpdate(float)>",
            "<org.anddev.andengine.engine.camera.Camera: void setNearZClippingPlane(float)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: void setFlippedHorizontal(boolean)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setRotationCenterX(float)>",
            "<com.game.myjewelsec.GameServer.myAppData: void setMainState()>",
            "<org.anddev.andengine.entity.scene.Scene: boolean isBackgroundEnabled()>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity$1: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerData: void setZ(float)>",
            "<org.anddev.andengine.entity.scene.Scene: void setParentScene(org.anddev.andengine.entity.scene.Scene)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getHeight()>",
            "<org.anddev.andengine.entity.primitive.Line: void setPosition(float,float)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: org.anddev.andengine.entity.particle.ParticleSystem sFastfireBuild()>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: android.widget.FrameLayout$LayoutParams createSurfaceViewLayoutParams()>",
            "<org.anddev.andengine.entity.layer.ZIndexSorter: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.animator.DirectMenuAnimator: void prepareAnimations(java.util.ArrayList,float,float)>",
            "<org.anddev.andengine.entity.modifier.FadeOutModifier: org.anddev.andengine.entity.modifier.AlphaModifier clone()>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: void onSetValues(org.anddev.andengine.entity.IEntity,float,float,float)>",
            "<org.anddev.andengine.entity.Entity: void attachChild(org.anddev.andengine.entity.IEntity)>",
            "<com.game.myjewelsec.MapActivity: void access$8(com.game.myjewelsec.MapActivity,int)>",
            "<org.anddev.andengine.util.DataUtils: int unsignedByteToInt(byte)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer: void setFlippedVertical(boolean)>",
            "<com.game.myjewelsec.GameActivity$16: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.util.HorizontalAlign: void <clinit>()>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.entity.particle.ParticleSystem access$20(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: android.graphics.Bitmap onLoadBitmap()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: void <init>()>",
            "<org.anddev.andengine.entity.particle.modifier.ColorModifier: void onSetInitialValues(org.anddev.andengine.entity.particle.Particle,float,float,float)>",
            "<org.anddev.andengine.opengl.view.ComponentSizeChooser: int findConfigAttrib(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int)>",
            "<org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier: void <init>(float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.input.touch.detector.BaseDetector: void <init>()>",
            "<org.anddev.andengine.util.modifier.BaseDurationModifier: void <init>(float)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setAccelerationX(float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseSineInOut: org.anddev.andengine.util.modifier.ease.EaseSineInOut getInstance()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: org.anddev.andengine.entity.IEntity getParent()>",
            "<com.game.myjewelsec.GameServer.GameServer: boolean stonetofall()>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$2: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture: void build(org.anddev.andengine.opengl.texture.builder.ITextureBuilder)>",
            "<org.anddev.andengine.util.TransformationPool$1: org.anddev.andengine.util.Transformation onAllocatePoolItem()>",
            "<com.game.myjewelsec.OptionActivity$1: void <init>(com.game.myjewelsec.OptionActivity)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceScrollDetector: void <init>(float,org.anddev.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: android.graphics.Bitmap ensureLoadedBitmapIsMutable(android.graphics.Bitmap)>",
            "<org.anddev.andengine.collision.RectangularShapeCollisionChecker: void <init>()>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity: void <init>()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$3: void <init>(org.anddev.andengine.entity.modifier.PathModifier)>",
            "<org.anddev.andengine.util.modifier.ease.EaseBounceOut: void <init>()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuadOut: org.anddev.andengine.util.modifier.ease.EaseQuadOut getInstance()>",
            "<com.game.myjewelsec.Shell: void restDead()>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.opengl.font.FontManager getFontManager()>",
            "<com.games.b: java.lang.String c()>",
            "<com.game.myjewelsec.OptionActivity: int access$7(com.game.myjewelsec.OptionActivity)>",
            "<com.game.myjewelsec.SelectActivity: void onLoadComplete()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: java.lang.String getType()>",
            "<org.anddev.andengine.util.modifier.ease.EaseCircularInOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTilePropertiesFromGlobalTileID(int)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: void onUpdateScene(float)>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: void setColor(int,int,int,int)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setColor(float,float,float)>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void loadBufferObjects(org.anddev.andengine.opengl.buffer.BufferObject[])>",
            "<org.anddev.andengine.util.modifier.ease.EaseBounceInOut: org.anddev.andengine.util.modifier.ease.EaseBounceInOut getInstance()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: org.anddev.andengine.util.Transformation getLocalToSceneTransformation()>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void setChildScene(org.anddev.andengine.entity.scene.Scene,boolean,boolean,boolean)>",
            "<com.game.myjewelsec.GameActivity: void showExitMenu()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsetTop(float)>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXParser: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: void setPaint(android.graphics.Paint)>",
            "<org.anddev.andengine.opengl.font.Letter: int hashCode()>",
            "<org.anddev.andengine.entity.text.Text: void applyTexture(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.engine.camera.Camera: void unapplySceneToCameraSceneOffset(org.anddev.andengine.input.touch.TouchEvent)>",
            "<com.game.myjewelsec.LevelSeleActivity: boolean onKeyDown(int,android.view.KeyEvent)>",
            "<org.anddev.andengine.util.StreamUtils: void close(java.io.Closeable)>",
            "<org.anddev.andengine.util.StringUtils: java.lang.String[] split(java.lang.String,char)>",
            "<org.anddev.andengine.entity.scene.Scene: boolean isTouchAreaBindingEnabled()>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: boolean onHandleControlBaseTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: void setCurrentTileIndex(int)>",
            "<org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation: org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation valueOf(java.lang.String)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void onPauseGame()>",
            "<org.anddev.andengine.util.Debug: void i(java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: void setCurrentTileIndex(int,int)>",
            "<org.anddev.andengine.sensor.location.LocationSensorOptions: void <init>()>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity: void onLoadComplete()>",
            "<org.anddev.andengine.entity.scene.Scene: void setOnAreaTouchTraversalFrontToBack()>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: int limit()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator: int[] $SWITCH_TABLE$org$anddev$andengine$opengl$texture$source$decorator$RadialGradientFillTextureSourceDecorator$RadialGradientDirection()>",
            "<com.game.myjewelsec.GameActivity$8: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.entity.util.FPSCounter: void reset()>",
            "<org.anddev.andengine.entity.scene.menu.animator.DirectMenuAnimator: void <init>(float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: int getTileColumns()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setRotation(float)>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: boolean isTimerCallbackTriggered()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TSXLoader: org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet load(int,java.io.InputStream)>",
            "<org.anddev.andengine.opengl.font.FontFactory: void <clinit>()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuadIn: org.anddev.andengine.util.modifier.ease.EaseQuadIn getInstance()>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: void onApply(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: void updateTextureRegionBuffer()>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: void setFirstScene(org.anddev.andengine.entity.scene.Scene)>",
            "<org.anddev.andengine.util.FileUtils: void copyFile(java.io.File,java.io.File)>",
            "<org.anddev.andengine.entity.modifier.DoubleValueSpanShapeModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter: void setRadiusX(float)>",
            "<com.game.myjewelsec.GameServer.myAppData$SysConfig: void setMusic(long)>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseRectangleParticleEmitter: void <init>(float,float,float)>",
            "<org.anddev.andengine.input.touch.detector.ScrollDetector: void <init>(org.anddev.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener)>",
            "<com.game.myjewelsec.GameServer.GameServer: int access$0(com.game.myjewelsec.GameServer.GameServer)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer: void <init>(org.anddev.andengine.opengl.texture.region.TextureRegion,int)>",
            "<org.anddev.andengine.entity.util.ScreenGrabber: void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.QuickHull: void computeHullVertices(org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line,int,int)>",
            "<com.game.myjewelsec.GameServer.ParticleSystemCrashPool: java.lang.Object obtainPoolItem()>",
            "<org.anddev.andengine.entity.modifier.DelayModifier: void onManagedUpdate(float,java.lang.Object)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createTrianglulatedBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,java.util.List,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef)>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.BaseResolutionPolicy: void throwOnNotMeasureSpecEXACTLY(int,int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseElasticInOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: void <init>(int,int)>",
            "<com.game.myjewelsec.SelectActivity: void saveLevelData()>",
            "<com.game.myjewelsec.GameServer.GameServer: void movetodeadbuf(java.util.ArrayList)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: void setMaxVelocityX(float,float)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: void onSetValues(java.lang.Object,float,float,float,float)>",
            "<org.anddev.andengine.engine.Engine: void registerUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float[] getSceneCenterCoordinates()>",
            "<org.anddev.andengine.util.FileUtils: void copyToInternalStorage(android.content.Context,java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: float cutToMaxZoomFactorChange(float,float)>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: void <init>(org.anddev.andengine.entity.modifier.MoveModifier)>",
            "<org.anddev.andengine.util.modifier.ease.EaseExponentialInOut: org.anddev.andengine.util.modifier.ease.EaseExponentialInOut getInstance()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createPolygonBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.math.Vector2[],com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef)>",
            "<org.anddev.andengine.util.Base64InputStream: void close()>",
            "<org.anddev.andengine.audio.sound.SoundManager: void <init>(int)>",
            "<org.anddev.andengine.entity.Entity: void applyRotation(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.sensor.location.LocationSensorOptions: long getMinimumTriggerDistance()>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.util.FileUtils: void copyToExternalStorage(android.content.Context,int,java.lang.String)>",
            "<org.anddev.andengine.opengl.font.FontLibrary: void loadFonts(org.anddev.andengine.opengl.font.FontManager)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$2: void <init>(com.game.myjewelsec.GameServer.MyParticleSystem,org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<com.game.myjewelsec.GameServer.ScoreImg: void show(float,float,int)>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: void <init>(int)>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void addParticleInitializer(org.anddev.andengine.entity.particle.initializer.IParticleInitializer)>",
            "<com.game.myjewelsec.GameServer.GameServer: boolean inList(android.graphics.Point,java.util.ArrayList)>",
            "<org.anddev.andengine.util.pool.RunnablePoolUpdateHandler: void <init>()>",
            "<org.anddev.andengine.entity.shape.Shape: boolean isCullingEnabled()>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$SurfaceGestureDetectorAdapter: void <init>()>",
            "<org.anddev.andengine.entity.text.Text: void initBlendFunction()>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation: org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation[] values()>",
            "<org.anddev.andengine.util.modifier.ease.EaseBackOut: void <init>()>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void releaseWakeLock()>",
            "<org.anddev.andengine.entity.Entity: void sortChildren()>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util: boolean isLonger(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TiledTextureRegion)>",
            "<org.anddev.andengine.entity.util.FPSLogger: void <init>()>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity: org.anddev.andengine.entity.scene.Scene onLoadScene()>",
            "<org.anddev.andengine.entity.Entity: void setScaleCenterX(float)>",
            "<com.game.myjewelsec.R$layout: void <init>()>",
            "<org.anddev.andengine.input.touch.TouchEvent: int getPointerID()>",
            "<org.anddev.andengine.util.pool.RunnablePoolUpdateHandler: org.anddev.andengine.util.pool.PoolItem onAllocatePoolItem()>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],boolean,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: float getAccelerationX()>",
            "<com.game.myjewelsec.GameActivity$10: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TextureRegion createFromResource(org.anddev.andengine.opengl.texture.Texture,android.content.Context,int,int,int)>",
            "<com.game.myjewelsec.ObjectPool: void <init>(org.anddev.andengine.opengl.texture.region.TextureRegion,com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void <init>(org.anddev.andengine.entity.modifier.ScaleAtModifier)>",
            "<org.anddev.andengine.engine.camera.Camera: void onDrawHUD(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.sort.InsertionSorter: void sort(java.util.List,int,int,java.util.Comparator)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: org.anddev.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener getSubSequenceModifierListener()>",
            "<org.anddev.andengine.opengl.view.LogWriter: void <init>()>",
            "<org.anddev.andengine.sensor.location.LocationProviderStatus: void <init>(java.lang.String,int)>",
            "<com.game.myjewelsec.GameServer.GameServer: int getLeft()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void setBlendFunction(int,int)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void <init>(float,org.anddev.andengine.entity.modifier.PathModifier$Path,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void postRunnable(java.lang.Runnable)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setPosition(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void setAutoClearForces(boolean)>",
            "<org.anddev.andengine.util.SystemUtils: int getCPUFrequencyMaxScaling()>",
            "<org.anddev.andengine.util.VerticalAlign: org.anddev.andengine.util.VerticalAlign[] values()>",
            "<org.anddev.andengine.util.SAXUtils: byte getByteAttribute(org.xml.sax.Attributes,java.lang.String,byte)>",
            "<org.anddev.andengine.entity.scene.background.AutoParallaxBackground: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.util.ActivityUtils$2$1: void <init>(org.anddev.andengine.util.ActivityUtils$2)>",
            "<org.anddev.andengine.opengl.texture.source.FileTextureSource: android.graphics.Bitmap onLoadBitmap()>",
            "<org.anddev.andengine.engine.Engine$State: void notifyCanDraw()>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: boolean onManagedTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.opengl.texture.TextureOptions: void <init>(int,int,int,int,int,boolean)>",
            "<org.anddev.andengine.engine.camera.Camera: void setCameraSceneRotation(float)>",
            "<com.game.myjewelsec.MainActivity$2: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: void <init>(float,boolean,org.anddev.andengine.engine.handler.timer.ITimerCallback)>",
            "<org.anddev.andengine.engine.camera.Camera: float getMinY()>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<com.game.myjewelsec.GameServer.GameServer: void changDeadstoneTexture(org.anddev.andengine.opengl.texture.region.TiledTextureRegion)>",
            "<com.game.myjewelsec.GameServer.myAppData$SysConfig: void setSound(long)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.RoundedRectangleTextureSourceDecoratorShape: void <init>()>",
            "<org.anddev.andengine.audio.music.Music: void pause()>",
            "<org.anddev.andengine.entity.text.Text: org.anddev.andengine.opengl.vertex.TextVertexBuffer getVertexBuffer()>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util: boolean isBetween(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)>",
            "<com.game.myjewelsec.OptionActivity: org.anddev.andengine.entity.scene.Scene access$0(com.game.myjewelsec.OptionActivity)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator clone()>",
            "<org.anddev.andengine.engine.Engine$State: void <init>(org.anddev.andengine.engine.Engine$State)>",
            "<org.anddev.andengine.util.pool.PoolItem: boolean isFromPool(org.anddev.andengine.util.pool.Pool)>",
            "<org.anddev.andengine.util.ActivityUtils$2: void onPostExecute(java.lang.Object)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void enableLocationSensor(org.anddev.andengine.sensor.location.ILocationListener,org.anddev.andengine.sensor.location.LocationSensorOptions)>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<com.game.myjewelsec.GameServer.GameServer: int Find_key()>",
            "<org.anddev.andengine.util.modifier.LoopModifier: void reset()>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: void setAccelerometerAccuracy(int)>",
            "<org.anddev.andengine.entity.scene.Scene: void sortLayers()>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$4: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<com.game.myjewelsec.Shell: void setDead()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: boolean isLocked()>",
            "<org.anddev.andengine.util.modifier.ease.EaseLinear: org.anddev.andengine.util.modifier.ease.EaseLinear getInstance()>",
            "<org.anddev.andengine.engine.handler.runnable.RunnableHandler: void reset()>",
            "<org.anddev.andengine.util.modifier.ease.EaseCircularIn: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter: void <init>(float,float,float)>",
            "<org.anddev.andengine.util.modifier.BaseModifier: void setModifierListener(org.anddev.andengine.util.modifier.IModifier$IModifierListener)>",
            "<org.anddev.andengine.audio.sound.Sound: void setVolume(float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void dispose()>",
            "<org.anddev.andengine.input.touch.TouchEvent: boolean isActionDown()>",
            "<org.anddev.andengine.audio.sound.SoundFactory: org.anddev.andengine.audio.sound.Sound createSoundFromPath(org.anddev.andengine.audio.sound.SoundManager,android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.source.ResourceTextureSource: android.graphics.Bitmap onLoadBitmap()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TiledTextureRegionBuffer: float getX1()>",
            "<org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier)>",
            "<org.anddev.andengine.util.modifier.ease.EaseSineOut: org.anddev.andengine.util.modifier.ease.EaseSineOut getInstance()>",
            "<com.game.myjewelsec.GameActivity: int SPEC_ONE(int)>",
            "<org.anddev.andengine.engine.camera.Camera: void reset()>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: boolean isCollinear(java.util.ArrayList,int,int,int)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getInitialY()>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int)>",
            "<org.anddev.andengine.entity.scene.Scene: void setOnAreaTouchListener(org.anddev.andengine.entity.scene.Scene$IOnAreaTouchListener)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: void <init>(org.anddev.andengine.engine.options.EngineOptions,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: void <init>(float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.primitive.BaseRectangle: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.entity.scene.menu.animator.DirectMenuAnimator: void buildAnimations(java.util.ArrayList,float,float)>",
            "<org.anddev.andengine.entity.particle.initializer.BaseSingleValueInitializer: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: int determineCount(int,int,int,int)>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: void setColor(float,float,float,float)>",
            "<org.anddev.andengine.util.MathUtils: int sum(int[])>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource: int getWidth()>",
            "<com.game.myjewelsec.Shell: void update()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsets(float,float,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: void addTMXObjectGroup(org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup)>",
            "<org.anddev.andengine.util.ActivityUtils$1: void onPreExecute()>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.engine.camera.Camera getCameraFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.engine.options.EngineOptions access$0(org.anddev.andengine.engine.Engine)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void prepareAnimations(java.util.ArrayList,float,float)>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void clear()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: org.anddev.andengine.entity.layer.tiled.tmx.TMXTile getTMXTileAt(float,float)>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: float getMinX()>",
            "<org.anddev.andengine.util.ColorUtils: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void <init>(float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.MathUtils: float arrayAverage(float[])>",
            "<org.anddev.andengine.opengl.util.GLHelper: void reset(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: void setVelocityX(float)>",
            "<org.anddev.andengine.entity.Entity: float getScaleX()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createTrianglulatedBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,java.util.List,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float)>",
            "<com.game.myjewelsec.GameServer.GameServer: void access$1(com.game.myjewelsec.GameServer.GameServer,int)>",
            "<org.anddev.andengine.entity.text.Text: org.anddev.andengine.opengl.vertex.VertexBuffer getVertexBuffer()>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: void put(org.anddev.andengine.opengl.util.FastFloatBuffer)>",
            "<org.anddev.andengine.input.touch.detector.BaseDetector: void setEnabled(boolean)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: float getTexturePositionOfCurrentTileY()>",
            "<org.anddev.andengine.entity.particle.emitter.RectangleOutlineParticleEmitter: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.util.SmartList: void <init>()>",
            "<org.anddev.andengine.opengl.view.ComponentSizeChooser: void <init>(int,int,int,int,int,int)>",
            "<com.game.myjewelsec.LevelSeleActivity: float access$10(com.game.myjewelsec.LevelSeleActivity)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getScaleCenterX()>",
            "<org.anddev.andengine.entity.primitive.Line: float getX1()>",
            "<com.game.myjewelsec.SelectActivity: int getRenderSurfaceViewID()>",
            "<org.anddev.andengine.engine.camera.Camera: void convertCameraSceneToSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$3: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void switchToProjectionMatrix(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.modifier.FadeInModifier: void <init>(float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: void addTMXObjectProperty(org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectProperty)>",
            "<org.anddev.andengine.entity.shape.Shape: void setCullingEnabled(boolean)>",
            "<org.anddev.andengine.opengl.font.FontFactory: void setAssetBasePath(java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.source.FileTextureSource: java.lang.String toString()>",
            "<org.anddev.andengine.entity.scene.Scene: void onManagedUpdate(float)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture: void removeTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: org.anddev.andengine.entity.modifier.PathModifier clone()>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: void onSetValue(java.lang.Object,float,float)>",
            "<org.anddev.andengine.entity.text.TickerText: int getCharactersVisible()>",
            "<com.game.myjewelsec.GameServer.GameServer: int getBestscore()>",
            "<org.anddev.andengine.util.path.Path: int getFromTileColumn()>",
            "<org.anddev.andengine.entity.Entity: float getBlue()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void setModelViewIdentityMatrix(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.scene.CameraScene: boolean onChildSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<com.game.myjewelsec.GameServer.GameServer: boolean isEmpty(int,int)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.EllipseTextureSourceDecoratorShape: org.anddev.andengine.opengl.texture.source.decorator.shape.EllipseTextureSourceDecoratorShape getDefaultInstance()>",
            "<org.anddev.andengine.entity.primitive.Rectangle: void onInitDraw(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.particle.initializer.RotationInitializer: float getMaxRotation()>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void onSetValues(java.lang.Object,float,float,float)>",
            "<org.anddev.andengine.entity.scene.Scene: void clearChildScene()>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: void onSetValue(java.lang.Object,float,float)>",
            "<org.anddev.andengine.entity.particle.modifier.OffCameraExpireModifier: void <init>(org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: void setMaxVelocityY(float)>",
            "<org.anddev.andengine.util.ProbabilityGenerator$Entry: void <init>(float,java.lang.Object[])>",
            "<org.anddev.andengine.entity.modifier.SingleValueSpanShapeModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.level.LevelLoader: void setAssetBasePath(java.lang.String)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: void <init>(float,float,float,float,org.anddev.andengine.opengl.texture.region.TiledTextureRegion)>",
            "<com.game.myjewelsec.OptionActivity: void onLoadResources()>",
            "<org.anddev.andengine.entity.Entity: boolean isIgnoreUpdate()>",
            "<org.anddev.andengine.util.modifier.ease.EaseCircularIn: org.anddev.andengine.util.modifier.ease.EaseCircularIn getInstance()>",
            "<org.anddev.andengine.util.modifier.ease.EaseCubicOut: org.anddev.andengine.util.modifier.ease.EaseCubicOut getInstance()>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: void <init>(float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<com.game.myjewelsec.LevelSeleActivity: org.anddev.andengine.engine.Engine onLoadEngine()>",
            "<org.anddev.andengine.entity.particle.initializer.BaseTripleValueInitializer: void <init>(float,float,float,float,float,float)>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void <init>(org.anddev.andengine.entity.particle.emitter.IParticleEmitter,float,float,int,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node: org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect access$0(org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node)>",
            "<org.anddev.andengine.ui.dialog.GenericInputDialogBuilder: void <init>(android.content.Context,int,int,int,int,org.anddev.andengine.util.Callback,android.content.DialogInterface$OnCancelListener)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: int getTileWidth()>",
            "<org.anddev.andengine.entity.modifier.EntityModifier: void <init>(org.anddev.andengine.entity.modifier.EntityModifier)>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.text.TickerText: void onManagedUpdate(float)>",
            "<org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$DebugTextureStateListener: void onTextureSourceLoadExeption(org.anddev.andengine.opengl.texture.Texture,org.anddev.andengine.opengl.texture.source.ITextureSource,java.lang.Throwable)>",
            "<org.anddev.andengine.util.pool.Pool: void recyclePoolItem(java.lang.Object)>",
            "<org.anddev.andengine.opengl.font.Size: void setHeight(float)>",
            "<com.game.myjewelsec.GameServer.GameServer: void clearData()>",
            "<org.anddev.andengine.util.sort.Sorter: void sort(java.lang.Object[],java.util.Comparator)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<com.game.myjewelsec.GameLib.MyBarSet$Bar: void <init>(com.game.myjewelsec.GameLib.MyBarSet,float,float,float)>",
            "<org.anddev.andengine.entity.scene.Scene: void reset()>",
            "<org.anddev.andengine.entity.particle.modifier.AlphaModifier: void onSetInitialValue(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.entity.particle.modifier.ExpireModifier: float getMaxLifeTime()>",
            "<org.anddev.andengine.util.Base64InputStream: void refill()>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void <init>(float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.Entity: void onManagedUpdate(float)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter: void setCenterY(float)>",
            "<org.anddev.andengine.sensor.SensorDelay: int getDelay()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableCulling(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: org.anddev.andengine.opengl.texture.source.ITextureSource access$0(org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: org.anddev.andengine.entity.scene.Scene getFirstScene()>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean detachSelf()>",
            "<org.anddev.andengine.entity.particle.modifier.BaseTripleValueSpanModifier: void onSetValues(org.anddev.andengine.entity.particle.Particle,float,float)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer: float getY2()>",
            "<org.anddev.andengine.engine.camera.Camera: boolean hasHUD()>",
            "<org.anddev.andengine.util.Debug: java.lang.String getDebugTag()>",
            "<org.anddev.andengine.engine.camera.BoundCamera: void setBoundsEnabled(boolean)>",
            "<org.anddev.andengine.util.modifier.ease.EaseSineOut: void <init>()>",
            "<com.game.myjewelsec.LevelSeleActivity: void initSele()>",
            "<org.anddev.andengine.util.Base64: byte[] decode(byte[],int)>",
            "<org.anddev.andengine.opengl.texture.source.PictureTextureSource: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setVelocityX(float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getHeightScaled()>",
            "<org.anddev.andengine.input.touch.TouchEvent: boolean isActionCancel()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXObjectProperties()>",
            "<org.anddev.andengine.engine.Engine: void vibrate(long)>",
            "<org.anddev.andengine.entity.scene.Scene: void setOnSceneTouchListener(org.anddev.andengine.entity.scene.Scene$IOnSceneTouchListener)>",
            "<com.game.myjewelsec.GameServer.myAppData$SysConfig: long getDiff()>",
            "<org.anddev.andengine.util.path.Path: int getTileRow(int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXParser: void characters(char[],int,int)>",
            "<com.game.myjewelsec.MapActivity: void <init>()>",
            "<org.anddev.andengine.util.modifier.ParallelModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.entity.sprite.Sprite: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.engine.camera.Camera: boolean isRectangularShapeVisible(org.anddev.andengine.entity.shape.RectangularShape)>",
            "<org.anddev.andengine.engine.options.TouchOptions: boolean isRunOnUpdateThread()>",
            "<org.anddev.andengine.opengl.font.Font: int getLineGap()>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: void reset()>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void <init>(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener)>",
            "<org.anddev.andengine.util.Base64$Decoder: void <init>(int,byte[])>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.RoundedRectangleTextureSourceDecoratorShape: void <init>(float,float)>",
            "<org.anddev.andengine.util.cache.RectangleVertexBufferCache: org.anddev.andengine.opengl.vertex.RectangleVertexBuffer get(int,int)>",
            "<com.game.myjewelsec.LevelSeleActivity: void access$4(com.game.myjewelsec.LevelSeleActivity,float)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float)>",
            "<org.anddev.andengine.entity.modifier.FadeOutModifier: void <init>(org.anddev.andengine.entity.modifier.FadeOutModifier)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler$2: org.anddev.andengine.util.pool.PoolItem onAllocatePoolItem()>",
            "<com.game.myjewelsec.ObjectPool: com.game.myjewelsec.Shell obtainNinjaSprite(float,float)>",
            "<org.anddev.andengine.collision.ShapeCollisionChecker: void <init>()>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: void flip()>",
            "<org.anddev.andengine.entity.modifier.ParallelEntityModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.engine.SingleSceneSplitScreenEngine: void <init>(org.anddev.andengine.engine.options.EngineOptions,org.anddev.andengine.engine.camera.Camera)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: void disconnectBodytoParticle(org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuartOut: org.anddev.andengine.util.modifier.ease.EaseQuartOut getInstance()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer: boolean isFlippedVertical()>",
            "<com.game.myjewelsec.OptionActivity: org.anddev.andengine.engine.Engine onLoadEngine()>",
            "<org.anddev.andengine.entity.particle.modifier.OffCameraExpireModifier: void onUpdateParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<org.anddev.andengine.entity.scene.background.EntityBackground: void <init>(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: float getInsetLeft()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void removeParticleModifier(org.anddev.andengine.entity.particle.modifier.IParticleModifier)>",
            "<org.anddev.andengine.entity.Entity: org.anddev.andengine.entity.IEntity getFirstChild()>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void <init>(float,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: void setGlobalTileID(org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap,int)>",
            "<com.game.myjewelsec.ShakeCamera: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.entity.Entity: float getX()>",
            "<org.anddev.andengine.entity.particle.initializer.BaseTripleValueInitializer: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController: org.anddev.andengine.input.touch.controller.ITouchController$ITouchEventCallback access$0(org.anddev.andengine.input.touch.controller.BaseTouchController)>",
            "<org.anddev.andengine.engine.handler.UpdateHandlerList: void <init>()>",
            "<org.anddev.andengine.entity.Entity: void doDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager: void onUpdate(float)>",
            "<com.game.myjewelsec.GameServer.GameServer: void Bomb(int,int)>",
            "<com.game.myjewelsec.GameActivity$6: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<com.game.myjewelsec.MapActivity: void getLevelData()>",
            "<org.anddev.andengine.entity.scene.background.SpriteBackground: void <init>(float,float,float,org.anddev.andengine.entity.sprite.BaseSprite)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void onUnloadResources()>",
            "<org.anddev.andengine.util.MathUtils: int bringToBounds(int,int,int)>",
            "<org.anddev.andengine.util.SocketUtils: void closeSocket(java.net.ServerSocket)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void setGLWrapper(org.anddev.andengine.opengl.view.GLWrapper)>",
            "<org.anddev.andengine.entity.text.Text: void <init>(float,float,org.anddev.andengine.opengl.font.Font,java.lang.String,org.anddev.andengine.util.HorizontalAlign)>",
            "<org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource: void <init>(int,int)>",
            "<com.game.myjewelsec.MapActivity: org.anddev.andengine.entity.sprite.Sprite access$7(com.game.myjewelsec.MapActivity)>",
            "<org.anddev.andengine.entity.text.Text: void onUpdateVertexBuffer()>",
            "<org.anddev.andengine.engine.camera.Camera: void onApplyPositionIndependentMatrix(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.input.touch.TouchEvent: android.view.MotionEvent getMotionEvent()>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void <init>(org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.util.modifier.ease.EaseSineInOut: void <init>()>",
            "<com.game.myjewelsec.OptionActivity: void onResumeGame()>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void clearChildScene()>",
            "<org.anddev.andengine.entity.modifier.SingleValueSpanShapeModifier: void <init>(float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.path.Path: org.anddev.andengine.util.path.Direction getDirectionToNextStep(int)>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: int getTexturePositionY()>",
            "<org.anddev.andengine.util.FileUtils: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: java.lang.Object getUserData()>",
            "<org.anddev.andengine.opengl.font.FontFactory: org.anddev.andengine.opengl.font.StrokeFont createStrokeFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,float,boolean,int,float,int,boolean)>",
            "<org.anddev.andengine.util.pool.MultiPool: void <init>()>",
            "<org.anddev.andengine.entity.particle.modifier.BaseDoubleValueSpanModifier: void onSetInitialValue(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.entity.modifier.DoubleValueSpanShapeModifier: void <init>(float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: org.anddev.andengine.entity.modifier.ScaleModifier clone()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegion: org.anddev.andengine.opengl.texture.region.TextureRegion clone()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerData: float getZ()>",
            "<org.anddev.andengine.opengl.texture.TextureManager: void updateTextures(javax.microedition.khronos.opengles.GL10)>",
            "<com.game.myjewelsec.SelectActivity: int getLayoutID()>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float[] convertLocalToSceneCoordinates(float,float)>",
            "<org.anddev.andengine.level.LevelLoader: void registerEntityLoader(java.lang.String,org.anddev.andengine.level.LevelLoader$IEntityLoader)>",
            "<org.anddev.andengine.collision.BaseCollisionChecker: int relativeCCW(float,float,float,float,float,float)>",
            "<com.game.myjewelsec.LevelSeleActivity: org.anddev.andengine.entity.scene.Scene onLoadScene()>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$36()>",
            "<org.anddev.andengine.util.modifier.BaseDurationModifier: void <init>(org.anddev.andengine.util.modifier.BaseDurationModifier)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createBoxBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef)>",
            "<com.game.myjewelsec.GameServer.GameServer: boolean isTypeSame(int,android.graphics.Point)>",
            "<org.anddev.andengine.entity.layer.ZIndexSorter$1: void <init>(org.anddev.andengine.entity.layer.ZIndexSorter)>",
            "<com.game.myjewelsec.MainActivity$3: void <init>(com.game.myjewelsec.MainActivity,float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.engine.Engine: void onUpdate(long)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: void connectSpritetoPraticle(com.game.myjewelsec.GameServer.mySprite,org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: void <init>(float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: int getTileY()>",
            "<com.game.myjewelsec.GameActivity$19: void <init>(com.game.myjewelsec.GameActivity,float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXParseException: void <init>(java.lang.String,java.lang.Exception)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuintInOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.modifier.LoopEntityModifier: org.anddev.andengine.entity.modifier.LoopEntityModifier clone()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node: org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node createChildren(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int,int,int,int)>",
            "<com.game.myjewelsec.OptionActivity$Bar: org.anddev.andengine.entity.sprite.Sprite access$1(com.game.myjewelsec.OptionActivity$Bar)>",
            "<com.game.myjewelsec.GameServer.mySprite: int getType()>",
            "<org.anddev.andengine.entity.modifier.RotationAtModifier: void onManagedInitialize(java.lang.Object)>",
            "<com.game.myjewelsec.GameActivity: void VB(int)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.opengl.font.FontFactory: org.anddev.andengine.opengl.font.StrokeFont createStrokeFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,float,boolean,int,float,int)>",
            "<com.game.myjewelsec.GameActivity$7: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.entity.modifier.LoopEntityModifier: void <init>(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,int,org.anddev.andengine.entity.modifier.LoopEntityModifier$ILoopEntityModifierListener,org.anddev.andengine.entity.modifier.IEntityModifier)>",
            "<org.anddev.andengine.entity.particle.initializer.RotationInitializer: void setRotation(float,float)>",
            "<com.game.myjewelsec.GameServer.ScoreImg$1: void <init>(com.game.myjewelsec.GameServer.ScoreImg)>",
            "<org.anddev.andengine.entity.scene.background.BaseBackground: void addBackgroundModifier(org.anddev.andengine.util.modifier.IModifier)>",
            "<com.game.myjewelsec.GameServer.GameServer: void CheckDead()>",
            "<org.anddev.andengine.engine.camera.Camera: float getFarZClippingPlane()>",
            "<org.anddev.andengine.opengl.texture.source.FileTextureSource: org.anddev.andengine.opengl.texture.source.FileTextureSource clone()>",
            "<org.anddev.andengine.entity.modifier.RotationByModifier: void onChangeValue(org.anddev.andengine.entity.IEntity,float)>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: org.anddev.andengine.entity.modifier.AlphaModifier clone()>",
            "<com.game.myjewelsec.MainActivity$1: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: java.lang.String toString()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: int getLeft()>",
            "<org.anddev.andengine.entity.particle.emitter.BaseRectangleParticleEmitter: float getWidth()>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier: void <init>(float,float,float,org.anddev.andengine.util.modifier.IModifier$IModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.engine.Engine: boolean enableAccelerometerSensor(android.content.Context,org.anddev.andengine.sensor.accelerometer.IAccelerometerListener,org.anddev.andengine.sensor.accelerometer.AccelerometerSensorOptions)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: void onHandleControlKnobReleased()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: com.badlogic.gdx.physics.box2d.Body getBody()>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: void <init>(org.anddev.andengine.opengl.texture.Texture,int,int,int,int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroupProperty: void <init>(org.xml.sax.Attributes)>",
            "<org.anddev.andengine.engine.camera.Camera: void setZClippingPlanes(float,float)>",
            "<com.game.myjewelsec.MapActivity: void moveXway(float)>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity: org.anddev.andengine.engine.camera.Camera getSplashCamera(int,int)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void onUpdate(float,org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.entity.particle.emitter.PointParticleEmitter: void <init>(float,float)>",
            "<org.anddev.andengine.engine.camera.hud.controls.DigitalOnScreenControl: void onUpdateControlKnob(float,float)>",
            "<org.anddev.andengine.audio.music.Music: void stop()>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: boolean enableOrientationSensor(org.anddev.andengine.sensor.orientation.IOrientationListener)>",
            "<com.game.myjewelsec.GameActivity: void hideExitMenu()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$1: void onManagedInitialize(java.lang.Object)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory$2: void onCallback(org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation)>",
            "<org.anddev.andengine.util.SAXUtils: void <init>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: java.lang.String getName()>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$45()>",
            "<org.anddev.andengine.entity.sprite.Sprite: org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node: org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect getRect()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void <init>(android.content.Context)>",
            "<org.anddev.andengine.audio.music.MusicFactory: org.anddev.andengine.audio.music.Music createMusicFromAsset(org.anddev.andengine.audio.music.MusicManager,android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuintIn: void <init>()>",
            "<org.anddev.andengine.opengl.texture.source.PictureTextureSource: java.lang.Object clone()>",
            "<org.anddev.andengine.audio.music.MusicFactory: void setAssetBasePath(java.lang.String)>",
            "<org.anddev.andengine.util.modifier.ParallelModifier: void onUpdate(float,java.lang.Object)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.QuickHull: void quickHull()>",
            "<org.anddev.andengine.entity.particle.modifier.BaseSingleValueSpanModifier: void onSetValueInternal(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setScaleX(float)>",
            "<org.anddev.andengine.util.modifier.LoopModifier: void <init>(org.anddev.andengine.util.modifier.IModifier)>",
            "<org.anddev.andengine.util.modifier.ease.EaseStrongInOut: float getPercentageDone(float,float,float,float)>",
            "<com.game.myjewelsec.OptionActivity: boolean onKeyDown(int,android.view.KeyEvent)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.CircleTextureSourceDecoratorShape: void <init>()>",
            "<org.anddev.andengine.opengl.texture.source.ResourceTextureSource: org.anddev.andengine.opengl.texture.source.ResourceTextureSource clone()>",
            "<org.anddev.andengine.input.touch.detector.ScrollDetector: boolean onManagedTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: int getTileRows()>",
            "<org.anddev.andengine.opengl.texture.TextureFactory: org.anddev.andengine.opengl.texture.Texture createForTextureSourceSize(org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: com.badlogic.gdx.physics.box2d.Body createBody(com.badlogic.gdx.physics.box2d.BodyDef)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getRed()>",
            "<org.anddev.andengine.util.path.Path: void prepend(org.anddev.andengine.util.path.Path$Step)>",
            "<com.game.myjewelsec.LoadActivity: int getRenderSurfaceViewID()>",
            "<org.anddev.andengine.entity.Entity: void <clinit>()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void setContactListener(com.badlogic.gdx.physics.box2d.ContactListener)>",
            "<org.anddev.andengine.util.pool.Pool: void onHandleRecycleItem(java.lang.Object)>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void buildAnimations(java.util.ArrayList,float,float)>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity$1: void <init>(org.anddev.andengine.ui.activity.BaseSplashActivity)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setInitialPosition()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean unregisterUpdateHandlers(org.anddev.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher)>",
            "<org.anddev.andengine.engine.Engine: void onSensorChanged(android.hardware.SensorEvent)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: org.anddev.andengine.entity.scene.Scene getSecondScene()>",
            "<org.anddev.andengine.level.LevelLoader: void <init>()>",
            "<org.anddev.andengine.util.BetaUtils$2: void <init>(android.content.Intent,android.app.Activity)>",
            "<com.game.myjewelsec.GameActivity: void onSetContentView()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: void setUpdateRotation(boolean)>",
            "<org.anddev.andengine.util.Base64: java.lang.String encodeToString(byte[],int,int,int)>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: int getHeight()>",
            "<com.game.myjewelsec.LevelSeleActivity$1: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.opengl.font.Font: int getLetterAdvance(char)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone()>",
            "<org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener: void <init>(org.anddev.andengine.util.modifier.SequenceModifier)>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerSensorOptions: org.anddev.andengine.sensor.SensorDelay getSensorDelay()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup: java.util.ArrayList getTMXObjects()>",
            "<org.anddev.andengine.entity.Entity: boolean unregisterUpdateHandlers(org.anddev.andengine.engine.handler.IUpdateHandler$IUpdateHandlerMatcher)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: int getContactCount()>",
            "<org.anddev.andengine.audio.music.Music: void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener)>",
            "<org.anddev.andengine.engine.handler.UpdateHandlerList: void <init>(int)>",
            "<org.anddev.andengine.opengl.texture.TextureFactory: org.anddev.andengine.opengl.texture.Texture createForTextureSourceSize(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.TextureOptions)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: java.lang.String getName()>",
            "<org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$DebugTextureStateListener: void onLoadedToHardware(org.anddev.andengine.opengl.texture.Texture)>",
            "<com.game.myjewelsec.SelectActivity: void onDestroy()>",
            "<org.anddev.andengine.util.pool.EntityDetachRunnablePoolItem: void <init>()>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: org.anddev.andengine.opengl.texture.source.ITextureSource access$2(org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback)>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void loadBufferObject(org.anddev.andengine.opengl.buffer.BufferObject)>",
            "<org.anddev.andengine.util.MultiKeyHashMap: boolean isEqualKey(java.lang.Object[],java.lang.Object[])>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.MaxStepPhysicsWorld access$35(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setAntiAliasing(boolean)>",
            "<org.anddev.andengine.audio.music.MusicFactory: void <clinit>()>",
            "<org.anddev.andengine.engine.options.TouchOptions: org.anddev.andengine.engine.options.TouchOptions enableRunOnUpdateThread()>",
            "<org.anddev.andengine.util.pool.RunnablePoolUpdateHandler: void <init>(int)>",
            "<org.anddev.andengine.util.Debug: void <clinit>()>",
            "<org.anddev.andengine.util.FileUtils: void copyToInternalStorage(android.content.Context,int,java.lang.String)>",
            "<org.anddev.andengine.util.modifier.BaseDurationModifier: float getDuration()>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.engine.options.EngineOptions getEngineOptions()>",
            "<org.anddev.andengine.entity.layer.ZIndexSorter$1: int compare(java.lang.Object,java.lang.Object)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void <init>(org.anddev.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener)>",
            "<org.anddev.andengine.engine.camera.Camera: void setRotation(float)>",
            "<org.anddev.andengine.opengl.texture.source.AssetTextureSource: java.lang.Object clone()>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void setActiveInstance(org.anddev.andengine.opengl.buffer.BufferObjectManager)>",
            "<org.anddev.andengine.util.SAXUtils: java.lang.String getAttributeOrThrow(org.xml.sax.Attributes,java.lang.String)>",
            "<org.anddev.andengine.entity.shape.Shape: void setBlendFunction(int,int)>",
            "<org.anddev.andengine.util.Base64: byte[] encode(byte[],int)>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: long getTriggerHoldMinimumMilliseconds()>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: void put(int[])>",
            "<org.anddev.andengine.util.DataUtils: void <init>()>",
            "<org.anddev.andengine.collision.RectangularShapeCollisionChecker: boolean checkCollision(org.anddev.andengine.entity.shape.RectangularShape,org.anddev.andengine.entity.primitive.Line)>",
            "<org.anddev.andengine.util.SystemUtils: int getCPUFrequencyCurrent()>",
            "<org.anddev.andengine.util.Debug$DebugLevel: void <clinit>()>",
            "<org.anddev.andengine.entity.Entity: void setScaleCenter(float,float)>",
            "<org.anddev.andengine.entity.modifier.PathModifier$1: void onManagedInitialize(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier: void <init>(int,org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier)>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: float getTriggerHoldMaximumDistance()>",
            "<org.anddev.andengine.engine.Engine: int getSurfaceWidth()>",
            "<org.anddev.andengine.engine.options.TouchOptions: org.anddev.andengine.engine.options.TouchOptions setRunOnUpdateThread(boolean)>",
            "<com.game.myjewelsec.GameActivity: void showCombo(float,float,int)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$1: int compare(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.ITextureSource)>",
            "<org.anddev.andengine.entity.modifier.SequenceEntityModifier: void <init>(org.anddev.andengine.entity.modifier.SequenceEntityModifier)>",
            "<org.anddev.andengine.engine.Engine: void onDrawScene(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.scene.background.RepeatingSpriteBackground: org.anddev.andengine.entity.sprite.Sprite loadSprite(float,float,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.opengl.texture.source.ITextureSource)>",
            "<org.anddev.andengine.ui.activity.BaseActivity: void doAsync(int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl: org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener getOnScreenControlListener()>",
            "<org.anddev.andengine.util.path.Path: int getLength()>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController$TouchEventRunnablePoolItem: void onRecycle()>",
            "<com.game.myjewelsec.LevelSeleActivity: void getLevelData()>",
            "<org.anddev.andengine.entity.Entity: void setColor(float,float,float,float)>",
            "<org.anddev.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity: void <init>(float,org.anddev.andengine.entity.shape.Shape)>",
            "<org.anddev.andengine.util.TransformationPool$1: java.lang.Object onAllocatePoolItem()>",
            "<org.anddev.andengine.input.touch.TouchEvent: int getAction()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: int getTileColumn()>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: void setColor(int,int,int)>",
            "<org.anddev.andengine.opengl.texture.TextureManager: void clear()>",
            "<org.anddev.andengine.opengl.font.StrokeFont: void drawCharacterString(java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: void setCurrentTileIndex(int)>",
            "<org.anddev.andengine.entity.modifier.SingleValueChangeShapeModifier: void <init>(float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.extension.physics.box2d.util.Vector2Pool: void <clinit>()>",
            "<org.anddev.andengine.util.ProbabilityGenerator$Entry: java.lang.Object getReturnValue()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setEnabled(boolean)>",
            "<org.anddev.andengine.engine.options.EngineOptions: void setUpdateThreadPriority(int)>",
            "<org.anddev.andengine.util.Transformation: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setUserData(java.lang.Object)>",
            "<org.anddev.andengine.collision.ShapeCollisionChecker: boolean checkCollision(int,float[],int,float[])>",
            "<org.anddev.andengine.util.Transformation: void postRotate(float)>",
            "<org.anddev.andengine.entity.scene.CameraScene: void centerShapeInCameraHorizontally(org.anddev.andengine.entity.shape.Shape)>",
            "<com.game.myjewelsec.OptionActivity$Button: boolean ButtonPush()>",
            "<org.anddev.andengine.entity.text.ChangeableText: void <init>(float,float,org.anddev.andengine.opengl.font.Font,java.lang.String,org.anddev.andengine.util.HorizontalAlign,int)>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.audio.music.MusicManager getMusicManager()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getInitialX()>",
            "<org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier: org.anddev.andengine.util.modifier.LoopModifier clone()>",
            "<org.anddev.andengine.entity.Entity: void applyToChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher,org.anddev.andengine.entity.IEntity$IEntityCallable)>",
            "<org.anddev.andengine.audio.sound.Sound: void resume()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection: int getToX()>",
            "<com.game.myjewelsec.GameActivity$13: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: void <init>(org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.util.GLHelper: int[] getPixels(android.graphics.Bitmap)>",
            "<com.game.myjewelsec.GameServer.GameServer$1: void <init>(com.game.myjewelsec.GameServer.GameServer)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createLineBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.primitive.Line,com.badlogic.gdx.physics.box2d.FixtureDef)>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.entity.text.ChangeableText access$2(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.util.pool.GenericPool: void onHandleRecycleItem(java.lang.Object)>",
            "<org.anddev.andengine.entity.modifier.SingleValueSpanShapeModifier: void <init>(org.anddev.andengine.entity.modifier.SingleValueSpanShapeModifier)>",
            "<com.game.myjewelsec.LoadActivity: boolean onKeyDown(int,android.view.KeyEvent)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: int[] $SWITCH_TABLE$org$anddev$andengine$engine$options$EngineOptions$ScreenOrientation()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void reset()>",
            "<org.anddev.andengine.entity.sprite.Sprite: org.anddev.andengine.opengl.texture.region.TextureRegion getTextureRegion()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection: void <clinit>()>",
            "<org.anddev.andengine.audio.music.Music: void onMasterVolumeChanged(float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseSineIn: org.anddev.andengine.util.modifier.ease.EaseSineIn getInstance()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: int getBodyCount()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$1: int compare(java.lang.Object,java.lang.Object)>",
            "<com.game.myjewelsec.GameActivity$5: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.entity.particle.modifier.BaseDoubleValueSpanModifier: void onSetValue(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseRectangleParticleEmitter: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController$TouchEventRunnablePoolItem: void <init>(org.anddev.andengine.input.touch.controller.BaseTouchController)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TiledTextureRegionBuffer: float getY2()>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: int getCurrentTileColumn()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: void <init>(float,float,org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.opengl.texture.region.TextureRegion,org.anddev.andengine.opengl.texture.region.TextureRegion,float,org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: void setTexturePosition(int,int)>",
            "<org.anddev.andengine.entity.Entity: void setScaleCenterY(float)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: void onSetInitialValues(java.lang.Object,float,float,float)>",
            "<org.anddev.andengine.util.path.astar.AStarPathFinder: void <init>(org.anddev.andengine.util.path.ITiledMap,int,boolean,org.anddev.andengine.util.path.astar.IAStarHeuristic)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: org.anddev.andengine.engine.camera.Camera getFirstCamera()>",
            "<org.anddev.andengine.util.HorizontalAlign: org.anddev.andengine.util.HorizontalAlign valueOf(java.lang.String)>",
            "<org.anddev.andengine.util.pool.GenericPool: java.lang.Object onHandleAllocatePoolItem()>",
            "<org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener,int,org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: boolean isEarTip(java.util.ArrayList,int,int[])>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableMultisample(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.modifier.ModifierList: void <init>(java.lang.Object,int)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: float getInsetRight()>",
            "<org.anddev.andengine.entity.scene.background.AutoParallaxBackground: void onUpdate(float)>",
            "<org.anddev.andengine.entity.sprite.BaseSprite: void initBlendFunction()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$3: void onSubSequenceFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object,int)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: void setHeight(int)>",
            "<org.anddev.andengine.engine.Engine$State: void <init>()>",
            "<org.anddev.andengine.util.modifier.ease.EaseExponentialOut: float getPercentageDone(float,float,float,float)>",
            "<com.game.myjewelsec.GameActivity: boolean access$15(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: void <init>(float,float,float)>",
            "<org.anddev.andengine.util.ActivityUtils: void setScreenBrightness(android.app.Activity,float)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegion: void <init>(org.anddev.andengine.opengl.texture.Texture,int,int,int,int)>",
            "<org.anddev.andengine.engine.options.RenderOptions: void <init>()>",
            "<org.anddev.andengine.entity.util.FPSCounter: float getFPS()>",
            "<org.anddev.andengine.util.Debug: void i(java.lang.String,java.lang.Throwable)>",
            "<org.anddev.andengine.util.StringUtils: java.lang.String[] split(java.lang.String,char,java.lang.String[])>",
            "<org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl: void setOnControlClickMaximumMilliseconds(long)>",
            "<org.anddev.andengine.audio.sound.SoundFactory: org.anddev.andengine.audio.sound.Sound createSoundFromAsset(org.anddev.andengine.audio.sound.SoundManager,android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter: void reset()>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: org.anddev.andengine.audio.sound.SoundManager getSoundManager()>",
            "<org.anddev.andengine.entity.modifier.LoopEntityModifier: org.anddev.andengine.util.modifier.LoopModifier clone()>",
            "<org.anddev.andengine.entity.Entity: void onAttached()>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.audio.sound.SoundManager getSoundManager()>",
            "<org.anddev.andengine.util.modifier.ParallelModifier: org.anddev.andengine.util.modifier.ParallelModifier clone()>",
            "<org.anddev.andengine.util.ActivityUtils$2: void onPreExecute()>",
            "<org.anddev.andengine.util.modifier.ease.EaseCubicIn: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TSXParser: org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet getTMXTileSet()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void switchToModelViewMatrix(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void applyEngineOptions(org.anddev.andengine.engine.options.EngineOptions)>",
            "<org.anddev.andengine.util.MultiKey: boolean equals(java.lang.Object)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getBlue()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXParser: org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap getTMXTiledMap()>",
            "<org.anddev.andengine.util.path.astar.EuclideanHeuristic: float getExpectedRestCost(org.anddev.andengine.util.path.ITiledMap,java.lang.Object,int,int,int,int)>",
            "<org.anddev.andengine.util.modifier.BaseTripleValueSpanModifier: void onSetValues(java.lang.Object,float,float,float)>",
            "<com.game.myjewelsec.GameActivity$11: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.util.ActivityUtils: void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback,boolean)>",
            "<org.anddev.andengine.util.SmartList: boolean removeAll(org.anddev.andengine.util.IMatcher)>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.RelativeResolutionPolicy: void <init>(float,float)>",
            "<com.game.myjewelsec.GameServer.ScoreImg: int access$0(com.game.myjewelsec.GameServer.ScoreImg)>",
            "<com.game.myjewelsec.LoadActivity: int getLayoutID()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: org.anddev.andengine.entity.shape.IShape getShape()>",
            "<com.game.myjewelsec.LevelSeleActivity: void moveXway(float)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: float getVelocityX()>",
            "<org.anddev.andengine.entity.layer.Layer: void <init>()>",
            "<org.anddev.andengine.util.Base64InputStream: void <clinit>()>",
            "<com.game.myjewelsec.OptionActivity$Bar: float access$2(com.game.myjewelsec.OptionActivity$Bar)>",
            "<org.anddev.andengine.util.progress.ProgressMonitor: void <init>(org.anddev.andengine.util.progress.IProgressListener)>",
            "<com.game.myjewelsec.MaxStepPhysicsWorld: void <init>(int,com.badlogic.gdx.math.Vector2,boolean)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int,int,boolean)>",
            "<com.game.myjewelsec.GameActivity$12: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.engine.handler.runnable.RunnableHandler: void onUpdate(float)>",
            "<org.anddev.andengine.audio.sound.Sound: void setLoopCount(int)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getX()>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void unloadBufferObject(org.anddev.andengine.opengl.buffer.BufferObject)>",
            "<org.anddev.andengine.entity.particle.modifier.OffCameraExpireModifier: org.anddev.andengine.engine.camera.Camera getCamera()>",
            "<com.game.myjewelsec.GameActivity: void LIGHTING(int,int)>",
            "<org.anddev.andengine.entity.Entity: void sortChildren(java.util.Comparator)>",
            "<com.game.myjewelsec.Shell: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void runOnUpdateThread(java.lang.Runnable)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: void <init>(org.anddev.andengine.util.modifier.IModifier$IModifierListener,org.anddev.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener,org.anddev.andengine.util.modifier.IModifier[])>",
            "<org.anddev.andengine.entity.text.TickerText: void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.scene.CameraScene: void centerShapeInCamera(org.anddev.andengine.entity.shape.Shape)>",
            "<org.anddev.andengine.util.FileUtils: boolean isFileExistingOnExternalStorage(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean detachChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher)>",
            "<com.game.myjewelsec.GameActivity: void onPause()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: org.anddev.andengine.entity.modifier.PathModifier$Path clone()>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: void setVelocityY(float,float)>",
            "<com.game.myjewelsec.GameServer.GameServer: int Find_OXO(int,int,int,int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuadIn: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.primitive.Line: float getX()>",
            "<org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier: void <init>(float,float,float,float,float,org.anddev.andengine.util.modifier.IModifier$IModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.font.Size: void <init>(float,float)>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<com.game.myjewelsec.GameServer.ScoreImg: void loadScore(org.anddev.andengine.entity.scene.Scene,int)>",
            "<org.anddev.andengine.util.ColorUtils: void <clinit>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: int getFirstGlobalTileID()>",
            "<org.anddev.andengine.util.path.Direction: int getDeltaX()>",
            "<org.anddev.andengine.entity.modifier.FadeOutModifier: void <init>(float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.VerticalAlign: void <clinit>()>",
            "<org.anddev.andengine.engine.Engine: void unregisterSelfAsSensorListener(android.hardware.SensorManager,int)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: boolean isAnyVertexInTriangle(java.util.ArrayList,int[],float,float,float,float,float,float)>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.sensor.accelerometer.AccelerometerData getAccelerometerData()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: void <init>(org.xml.sax.Attributes)>",
            "<org.anddev.andengine.engine.Engine: void interruptUpdateThread()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader: void <init>(android.content.Context,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.opengl.texture.TextureOptions,org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener)>",
            "<org.anddev.andengine.entity.Entity: void setPosition(float,float)>",
            "<org.anddev.andengine.util.ActivityUtils: void doProgressAsync(android.content.Context,int,org.anddev.andengine.util.progress.ProgressCallable,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: float getMaximumWidth(java.util.ArrayList)>",
            "<org.anddev.andengine.entity.Entity: boolean isScaled()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXLoadException: void <init>()>",
            "<org.anddev.andengine.util.MathUtils: int nextPowerOfTwo(int)>",
            "<org.anddev.andengine.input.touch.TouchEvent: void <init>()>",
            "<org.anddev.andengine.engine.options.WakeLockOptions: org.anddev.andengine.engine.options.WakeLockOptions[] values()>",
            "<org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: void setTriggerHoldMaximumDistance(float)>",
            "<org.anddev.andengine.ui.dialog.GenericInputDialogBuilder$2: void onClick(android.content.DialogInterface,int)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node: void <init>(org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect)>",
            "<org.anddev.andengine.util.modifier.BaseTripleValueSpanModifier: void <init>(org.anddev.andengine.util.modifier.BaseTripleValueSpanModifier)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: int getCurrentTileIndex()>",
            "<org.anddev.andengine.util.modifier.ease.EaseBounceOut: org.anddev.andengine.util.modifier.ease.EaseBounceOut getInstance()>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.entity.sprite.AnimatedSprite access$17(com.game.myjewelsec.GameActivity)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: org.anddev.andengine.entity.particle.ParticleSystem dotBuild()>",
            "<com.game.myjewelsec.GameServer.GameServer: void plogRow()>",
            "<com.game.myjewelsec.GameActivity$8: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.entity.scene.CameraScene: org.anddev.andengine.engine.camera.Camera getCamera()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void accelerate(float,float)>",
            "<org.anddev.andengine.opengl.font.FontLibrary: void <init>(int)>",
            "<org.anddev.andengine.entity.primitive.BaseRectangle: void onUpdateVertexBuffer()>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: void setTimerCallbackTriggered(boolean)>",
            "<org.anddev.andengine.util.ActivityUtils$1: java.lang.Object doInBackground(java.lang.Object[])>",
            "<org.anddev.andengine.util.modifier.ease.EaseCubicInOut: void <init>()>",
            "<org.anddev.andengine.util.SAXUtils: boolean getBooleanAttribute(org.xml.sax.Attributes,java.lang.String,boolean)>",
            "<com.game.myjewelsec.GameServer.GameServer: void plogList()>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void vertexPointer(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.opengl.util.FastFloatBuffer)>",
            "<org.anddev.andengine.entity.particle.Particle: void onManagedUpdate(float)>",
            "<org.anddev.andengine.entity.modifier.EntityModifierList: void <init>(org.anddev.andengine.entity.IEntity)>",
            "<com.game.myjewelsec.R$string: void <init>()>",
            "<org.anddev.andengine.entity.scene.background.BaseBackground: void onUpdate(float)>",
            "<org.anddev.andengine.util.ColorUtils: int RGBToColor(float,float,float)>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.GameServer.GameServer access$0(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.entity.Entity: void applyScale(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.FileUtils: java.lang.String getAbsolutePathOnExternalStorage(android.content.Context,java.lang.String)>",
            "<com.game.myjewelsec.LevelSeleActivity: void onDestroy()>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler: void postPoolItem(org.anddev.andengine.util.pool.PoolItem)>",
            "<com.game.myjewelsec.GameServer.myAppData: void <init>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: void addTMXTileSet(org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet)>",
            "<org.anddev.andengine.engine.Engine: boolean enableAccelerometerSensor(android.content.Context,org.anddev.andengine.sensor.accelerometer.IAccelerometerListener)>",
            "<com.game.myjewelsec.SelectActivity: void onLoadResources()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.OutlineTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int)>",
            "<org.anddev.andengine.engine.options.EngineOptions: org.anddev.andengine.engine.options.resolutionpolicy.IResolutionPolicy getResolutionPolicy()>",
            "<com.game.myjewelsec.GameActivity: void <init>()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsets(float)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void doResume()>",
            "<com.game.myjewelsec.ObjectPool: com.game.myjewelsec.Shell obtainPoolItem()>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController$1: void <init>(org.anddev.andengine.input.touch.controller.BaseTouchController)>",
            "<org.anddev.andengine.audio.sound.SoundFactory: void <clinit>()>",
            "<org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier: org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier clone()>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: void setSubSequenceModifierListener(org.anddev.andengine.util.modifier.SequenceModifier$ISubSequenceModifierListener)>",
            "<org.anddev.andengine.opengl.texture.TextureFactory: org.anddev.andengine.opengl.texture.Texture createForTextureSourceSize(org.anddev.andengine.opengl.texture.source.ITextureSource)>",
            "<org.anddev.andengine.util.Debug: void w(java.lang.String)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setIgnoreUpdate(boolean)>",
            "<com.game.myjewelsec.GameServer.GameServer: int Find_OO(int,int,int,int)>",
            "<com.game.myjewelsec.SelectActivity$1: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.input.touch.TouchEvent: boolean isActionUp()>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: void setAcceleration(float,float,float,float)>",
            "<org.anddev.andengine.entity.util.FPSLogger: void reset()>",
            "<org.anddev.andengine.util.pool.PoolItem: void onObtain()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setAcceleration(float,float)>",
            "<org.anddev.andengine.util.SystemUtils: void <init>()>",
            "<org.anddev.andengine.util.progress.ProgressMonitor: void onSubProgressChanged(int)>",
            "<org.anddev.andengine.entity.Entity: org.anddev.andengine.entity.IEntity getChild(int)>",
            "<org.anddev.andengine.engine.Engine: boolean isRunning()>",
            "<com.game.myjewelsec.GameServer.LevelManage: com.game.myjewelsec.GameServer.LevelManage$LData getLevel(java.lang.String)>",
            "<org.anddev.andengine.entity.Entity: void onApplyTransformations(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.Debug: void d(java.lang.String)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController$1: org.anddev.andengine.util.pool.RunnablePoolItem onAllocatePoolItem()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.util.path.astar.AStarPathFinder: org.anddev.andengine.util.path.Path findPath(java.lang.Object,int,int,int,int,int)>",
            "<org.anddev.andengine.input.touch.TouchEvent: void set(float,float)>",
            "<org.anddev.andengine.engine.options.EngineOptions: org.anddev.andengine.engine.camera.Camera getCamera()>",
            "<org.anddev.andengine.util.modifier.ParallelModifier$InternalModifierListener: void <init>(org.anddev.andengine.util.modifier.ParallelModifier)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection: void <init>(java.lang.String,int)>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: int access$1(org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation)>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.FileUtils: boolean deleteDirectory(java.io.File)>",
            "<org.anddev.andengine.entity.particle.Particle: org.anddev.andengine.engine.handler.physics.PhysicsHandler getPhysicsHandler()>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void prepareAnimations()>",
            "<org.anddev.andengine.entity.particle.initializer.BaseTripleValueInitializer: float getRandomValueC()>",
            "<org.anddev.andengine.entity.particle.emitter.CircleParticleEmitter: void getPositionOffset(float[])>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int,int,int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void glTexSubImage2D(javax.microedition.khronos.opengles.GL10,int,int,int,int,android.graphics.Bitmap,int,int)>",
            "<com.game.myjewelsec.GameActivity: void access$23(com.game.myjewelsec.GameActivity,boolean)>",
            "<com.game.myjewelsec.OptionActivity: void setSlide(float,float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int,int,org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection)>",
            "<org.anddev.andengine.sensor.location.LocationProviderStatus: org.anddev.andengine.sensor.location.LocationProviderStatus[] values()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void sortChildren(java.util.Comparator)>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void <init>(float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.texture.Texture: boolean isLoadedToHardware()>",
            "<org.anddev.andengine.util.Library: java.lang.Object get(int)>",
            "<org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation: void <clinit>()>",
            "<org.anddev.andengine.util.pool.Pool: java.lang.Object onHandleAllocatePoolItem()>",
            "<com.game.myjewelsec.OptionActivity: void onDestroy()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.OutlineTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: float getMaxAccelerationX()>",
            "<com.game.myjewelsec.MapActivity: boolean access$0(com.game.myjewelsec.MapActivity)>",
            "<org.anddev.andengine.entity.primitive.Line: void setLineWidth(float)>",
            "<org.anddev.andengine.entity.text.Text: void <init>(float,float,org.anddev.andengine.opengl.font.Font,java.lang.String)>",
            "<org.anddev.andengine.entity.scene.Scene: void setOnAreaTouchTraversalBackToFront()>",
            "<org.anddev.andengine.util.Debug: void e(java.lang.String)>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer: org.anddev.andengine.engine.Engine access$0(org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long,boolean)>",
            "<org.anddev.andengine.audio.sound.SoundFactory: void setAssetBasePath(java.lang.String)>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: void applySceneToCameraSceneOffset(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: int getTileRow()>",
            "<org.anddev.andengine.util.ViewUtils: android.view.View inflate(android.content.Context,int)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TextureRegion createFromSource(org.anddev.andengine.opengl.texture.Texture,org.anddev.andengine.opengl.texture.source.ITextureSource,int,int)>",
            "<com.game.myjewelsec.GameServer.mySprite: void setXspeed(float)>",
            "<org.anddev.andengine.sensor.BaseSensorData: void setAccuracy(int)>",
            "<com.game.myjewelsec.GameActivity: void access$7(com.game.myjewelsec.GameActivity,int)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: void <clinit>()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void onResume()>",
            "<org.anddev.andengine.util.Base64InputStream: long skip(long)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: void setMaxVelocityX(float)>",
            "<org.anddev.andengine.util.Debug: void w(java.lang.Throwable)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setVelocityY(float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties: void <init>()>",
            "<com.game.myjewelsec.GameActivity$14: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.engine.camera.hud.controls.DigitalOnScreenControl: void <init>(float,float,org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.opengl.texture.region.TextureRegion,org.anddev.andengine.opengl.texture.region.TextureRegion,float,org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener)>",
            "<org.anddev.andengine.opengl.texture.Texture: void <init>(int,int,org.anddev.andengine.opengl.texture.TextureOptions,org.anddev.andengine.opengl.texture.Texture$ITextureStateListener)>",
            "<org.anddev.andengine.entity.Entity: float getRotationCenterY()>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: int[] convert(float[])>",
            "<org.anddev.andengine.util.TransformationPool: void recycle(org.anddev.andengine.util.Transformation)>",
            "<org.anddev.andengine.entity.text.Text: void onApplyTransformations(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.scene.menu.item.TextMenuItem: int getID()>",
            "<com.game.myjewelsec.GameActivity: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.modifier.ease.EaseCircularOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: void <init>(org.anddev.andengine.entity.modifier.PathModifier$Path)>",
            "<org.anddev.andengine.util.modifier.ease.EaseCircularOut: org.anddev.andengine.util.modifier.ease.EaseCircularOut getInstance()>",
            "<com.game.myjewelsec.MainActivity: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,org.anddev.andengine.entity.scene.Scene$ITouchArea,float,float)>",
            "<org.anddev.andengine.sensor.orientation.OrientationSensorOptions: void <init>(org.anddev.andengine.sensor.SensorDelay)>",
            "<org.anddev.andengine.entity.shape.Shape: void updateVertexBuffer()>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.util.Base64$Encoder: int maxOutputSize(int)>",
            "<org.anddev.andengine.util.SocketUtils: void <init>()>",
            "<org.anddev.andengine.entity.Entity: void allocateUpdateHandlers()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileProperty: void <init>(org.xml.sax.Attributes)>",
            "<org.anddev.andengine.entity.Entity: void onDetached()>",
            "<org.anddev.andengine.ui.activity.BaseActivity: void <init>()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.OutlineTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone()>",
            "<org.anddev.andengine.util.MathUtils: float degToRad(float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void sortChildren()>",
            "<com.game.myjewelsec.OptionActivity: org.anddev.andengine.opengl.font.Font access$1(com.game.myjewelsec.OptionActivity)>",
            "<org.anddev.andengine.entity.text.ChangeableText: void setText(java.lang.String,boolean)>",
            "<org.anddev.andengine.engine.handler.collision.CollisionHandler: void reset()>",
            "<org.anddev.andengine.util.StringUtils: int countOccurrences(java.lang.String,char)>",
            "<com.game.myjewelsec.GameActivity: void stoneMove()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void onUnselected()>",
            "<org.anddev.andengine.audio.sound.Sound: void onMasterVolumeChanged(float)>",
            "<com.game.myjewelsec.GameActivity$15: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: void addTMXTiledMapProperty(org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMapProperty)>",
            "<org.anddev.andengine.audio.BaseAudioManager: void <init>()>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: void onSetInitialValue(java.lang.Object,float)>",
            "<org.anddev.andengine.engine.Engine: void start()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXLoadException: void <init>(java.lang.String,java.lang.Throwable)>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView: void setRenderer(org.anddev.andengine.engine.Engine)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuintIn: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableTexCoordArray(javax.microedition.khronos.opengles.GL10)>",
            "<com.game.myjewelsec.GameActivity: void SPEC()>",
            "<org.anddev.andengine.engine.camera.BoundCamera: float getBoundsWidth()>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy: void <init>(float)>",
            "<com.game.myjewelsec.LevelSeleActivity: int getLayoutID()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuadIn: void <init>()>",
            "<org.anddev.andengine.entity.Entity: boolean detachChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher)>",
            "<org.anddev.andengine.engine.Engine: void runOnUpdateThread(java.lang.Runnable)>",
            "<com.game.myjewelsec.GameActivity$13: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void <init>(float,org.anddev.andengine.entity.modifier.PathModifier$Path,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.texture.TextureManager: void unloadTextures(org.anddev.andengine.opengl.texture.Texture[])>",
            "<org.anddev.andengine.opengl.view.ComponentSizeChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>",
            "<org.anddev.andengine.ui.dialog.GenericInputDialogBuilder$1: void <init>(org.anddev.andengine.ui.dialog.GenericInputDialogBuilder,android.widget.EditText)>",
            "<com.game.myjewelsec.GameServer.myAppData$SysConfig: void <init>(com.game.myjewelsec.GameServer.myAppData,long,long,long,boolean)>",
            "<org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier)>",
            "<org.anddev.andengine.util.modifier.ease.EaseCircularIn: void <init>()>",
            "<org.anddev.andengine.audio.BaseAudioManager: float getMasterVolume()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void reset()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator: void <init>(org.anddev.andengine.entity.scene.menu.item.IMenuItem,float,float)>",
            "<org.anddev.andengine.entity.scene.Scene: void setChildScene(org.anddev.andengine.entity.scene.Scene)>",
            "<com.game.myjewelsec.GameActivity: void CLOCK(int,int)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>",
            "<org.anddev.andengine.entity.particle.emitter.PointParticleEmitter: void getPositionOffset(float[])>",
            "<com.game.myjewelsec.GameServer.GameServer: void checkStone(android.graphics.Point)>",
            "<org.anddev.andengine.util.modifier.ParallelModifier: void <init>(org.anddev.andengine.util.modifier.IModifier$IModifierListener,org.anddev.andengine.util.modifier.IModifier[])>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: void setHardwareBufferNeedsUpdate()>",
            "<org.anddev.andengine.entity.util.ScreenCapture: void <init>()>",
            "<org.anddev.andengine.level.LevelLoader: void loadLevelFromAsset(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.entity.scene.background.BaseBackground: void reset()>",
            "<org.anddev.andengine.entity.primitive.Line: float[] convertSceneToLocalCoordinates(float,float)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: int getTexturePositionY()>",
            "<com.game.myjewelsec.OptionActivity$Bar: void <init>(com.game.myjewelsec.OptionActivity,float,float,float,java.lang.String)>",
            "<org.anddev.andengine.input.touch.TouchEvent: org.anddev.andengine.input.touch.TouchEvent obtain(float,float,int,int,android.view.MotionEvent)>",
            "<com.game.myjewelsec.GameServer.ScoreImg: void <init>(org.anddev.andengine.engine.Engine,android.content.Context)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: void <init>(float)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer getTextureBuffer()>",
            "<org.anddev.andengine.engine.Engine: int getSurfaceHeight()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromResource(org.anddev.andengine.opengl.texture.BuildableTexture,android.content.Context,int,int,int)>",
            "<org.anddev.andengine.entity.scene.background.RepeatingSpriteBackground: void <init>(float,float,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.opengl.texture.source.ITextureSource)>",
            "<org.anddev.andengine.util.modifier.BaseDurationModifier: void onUpdate(float,java.lang.Object)>",
            "<org.anddev.andengine.util.path.Path: int getFromTileRow()>",
            "<org.anddev.andengine.entity.particle.modifier.BaseTripleValueSpanModifier: float calculateValueC(float)>",
            "<org.anddev.andengine.entity.Entity: boolean isVisible()>",
            "<org.anddev.andengine.engine.camera.Camera: float getMaxY()>",
            "<org.anddev.andengine.entity.sprite.BaseSprite: void onInitDraw(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.primitive.Line: boolean collidesWith(org.anddev.andengine.entity.shape.IShape)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: void <init>(org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.Body,boolean,boolean)>",
            "<org.anddev.andengine.entity.sprite.Sprite: void <init>(float,float,float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<com.game.myjewelsec.GameActivity$9: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.sensor.SensorDelay: void <init>(java.lang.String,int,int)>",
            "<com.game.myjewelsec.LoadActivity: void onLoadResources()>",
            "<org.anddev.andengine.entity.particle.initializer.GravityInitializer: void <init>()>",
            "<org.anddev.andengine.opengl.font.FontManager: void loadFonts(org.anddev.andengine.opengl.font.Font[])>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: void onSetValue(org.anddev.andengine.entity.IEntity,float,float)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: float getMinAccelerationX()>",
            "<com.game.myjewelsec.modifier.RandomDirectionModifier: void onUpdateParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier)>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueChangeModifier: void onManagedUpdate(float,java.lang.Object)>",
            "<org.anddev.andengine.util.modifier.ParallelModifier$InternalModifierListener: void <init>(org.anddev.andengine.util.modifier.ParallelModifier,org.anddev.andengine.util.modifier.ParallelModifier$InternalModifierListener)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$1: void <init>(com.game.myjewelsec.GameServer.MyParticleSystem,org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<com.game.myjewelsec.GameActivity: void access$49(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: org.anddev.andengine.util.modifier.IModifier$IModifierListener access$3(org.anddev.andengine.entity.modifier.PathModifier)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$1: void <init>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXLoadException: void <init>(java.lang.String)>",
            "<org.anddev.andengine.engine.Engine: void onAccuracyChanged(android.hardware.Sensor,int)>",
            "<org.anddev.andengine.audio.sound.SoundManager: android.media.SoundPool getSoundPool()>",
            "<org.anddev.andengine.engine.Engine: void enableLocationSensor(android.content.Context,org.anddev.andengine.sensor.location.ILocationListener,org.anddev.andengine.sensor.location.LocationSensorOptions)>",
            "<org.anddev.andengine.entity.particle.emitter.RectangleParticleEmitter: void getPositionOffset(float[])>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: float getMaxX()>",
            "<org.anddev.andengine.entity.sprite.BaseSprite: void reset()>",
            "<org.anddev.andengine.entity.modifier.FadeOutModifier: void <init>(float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter: void setRadius(float,float)>",
            "<org.anddev.andengine.util.SystemUtils: int getCPUFrequencyMax()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableTextures(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.MultiKey: int hash(java.lang.Object[])>",
            "<org.anddev.andengine.util.MultiKeyHashMap: void <init>()>",
            "<org.anddev.andengine.audio.sound.SoundLibrary: void <init>()>",
            "<com.game.myjewelsec.MainActivity: void saveConfig()>",
            "<org.anddev.andengine.engine.camera.Camera: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createPolygonBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.math.Vector2[],com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float)>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: java.lang.Object clone()>",
            "<org.anddev.andengine.opengl.texture.source.PictureTextureSource: android.graphics.Bitmap onLoadBitmap()>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: org.anddev.andengine.entity.scene.background.modifier.ColorModifier clone()>",
            "<org.anddev.andengine.entity.text.ChangeableText: void <init>(float,float,org.anddev.andengine.opengl.font.Font,java.lang.String)>",
            "<com.game.myjewelsec.GameActivity$17: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.engine.SingleSceneSplitScreenEngine: org.anddev.andengine.engine.camera.Camera getFirstCamera()>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: org.anddev.andengine.entity.sprite.Sprite getControlBase()>",
            "<org.anddev.andengine.engine.FixedStepEngine: void onUpdate(long)>",
            "<org.anddev.andengine.engine.Engine: void onUpdateScene(float)>",
            "<org.anddev.andengine.util.MathUtils: float[] scaleAroundCenter(float[],float,float,float,float)>",
            "<com.game.myjewelsec.GameServer.GameServer: void Lighting(int,int)>",
            "<org.anddev.andengine.util.HorizontalAlign: void <init>(java.lang.String,int)>",
            "<com.game.myjewelsec.MainActivity: void loadConfig()>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: void unapplySceneToCameraSceneOffset(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.particle.modifier.BaseTripleValueSpanModifier: void onSetValueInternal(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector: boolean onManagedTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.audio.music.Music: void resume()>",
            "<org.anddev.andengine.util.BetaUtils$1: void onClick(android.content.DialogInterface,int)>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: void onSetValues(org.anddev.andengine.entity.IEntity,float,float,float,float)>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: void onSetInitialValues(java.lang.Object,float,float)>",
            "<com.game.myjewelsec.GameServer.mySprite: void setSpec(int)>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: void onSetInitialValues(org.anddev.andengine.entity.IEntity,float,float)>",
            "<org.anddev.andengine.engine.Engine: void onStatusChanged(java.lang.String,int,android.os.Bundle)>",
            "<org.anddev.andengine.entity.Entity: void allocateChildren()>",
            "<org.anddev.andengine.util.BetaUtils: boolean finishWhenExpired(android.app.Activity,java.util.GregorianCalendar,int,int)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$SurfaceGestureDetectorAdapter: boolean onSwipeLeft()>",
            "<org.anddev.andengine.entity.Entity: void setScaleY(float)>",
            "<org.anddev.andengine.entity.particle.emitter.CircleParticleEmitter: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.util.SmartList: void apply(org.anddev.andengine.util.IMatcher,org.anddev.andengine.util.ParameterCallable)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int,int)>",
            "<org.anddev.andengine.entity.scene.Scene: void back()>",
            "<org.anddev.andengine.util.Debug: void v(java.lang.String)>",
            "<org.anddev.andengine.entity.util.FrameCountCrasher: void reset()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableVertexArray(javax.microedition.khronos.opengles.GL10)>",
            "<com.game.myjewelsec.GameActivity: void access$32(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.util.path.Path$Step: int getTileColumn()>",
            "<org.anddev.andengine.util.modifier.BaseModifier: void <init>()>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: void onUpdate(float)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setVelocity(float,float)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: void onSetValue(java.lang.Object,float,float)>",
            "<org.anddev.andengine.entity.shape.RectangularShape: float getBaseWidth()>",
            "<org.anddev.andengine.engine.camera.Camera: void onApplyCameraSceneMatrix(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: void setMaxZoomFactorChange(float)>",
            "<com.game.myjewelsec.GameActivity: void access$13(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node: org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node insert(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int,int)>",
            "<org.anddev.andengine.entity.primitive.Line: boolean isCulled(org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.Entity: void setUserData(java.lang.Object)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionLibrary: void <init>()>",
            "<com.game.myjewelsec.OptionActivity: org.anddev.andengine.opengl.texture.region.TextureRegion access$3(com.game.myjewelsec.OptionActivity)>",
            "<org.anddev.andengine.util.modifier.ease.EaseExponentialIn: void <init>()>",
            "<org.anddev.andengine.util.pool.PoolItem: boolean isRecycled()>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: void onSetValues(java.lang.Object,float,float,float,float)>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.ArcTextureSourceDecoratorShape: void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.util.Debug$DebugLevel: boolean isSameOrLessThan(org.anddev.andengine.util.Debug$DebugLevel)>",
            "<com.game.myjewelsec.GameActivity: void setprogressbar(org.anddev.andengine.entity.sprite.Sprite,int)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setScale(float)>",
            "<org.anddev.andengine.opengl.font.FontFactory: org.anddev.andengine.opengl.font.StrokeFont createStroke(org.anddev.andengine.opengl.texture.Texture,android.graphics.Typeface,float,boolean,int,float,int)>",
            "<org.anddev.andengine.util.StreamUtils: void flushCloseWriter(java.io.Writer)>",
            "<com.games.a: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: float getMinVelocityX()>",
            "<org.anddev.andengine.entity.particle.modifier.ExpireModifier: void onUpdateParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<org.anddev.andengine.entity.scene.CameraScene: void setCamera(org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory$1: void onCallback(java.lang.Object)>",
            "<com.game.myjewelsec.OptionActivity: org.anddev.andengine.opengl.texture.region.TextureRegion access$4(com.game.myjewelsec.OptionActivity)>",
            "<org.anddev.andengine.util.FileUtils: java.lang.String getAbsolutePathOnInternalStorage(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: void setCenter(float,float)>",
            "<org.anddev.andengine.entity.Entity: float[] convertSceneToLocalCoordinates(float,float)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: java.lang.String toString()>",
            "<com.game.myjewelsec.MapActivity: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,org.anddev.andengine.entity.scene.Scene$ITouchArea,float,float)>",
            "<org.anddev.andengine.util.ActivityUtils$2: void <init>(android.content.Context,int,org.anddev.andengine.util.progress.ProgressCallable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.util.FileUtils: void copyToExternalStorage(android.content.Context,java.io.InputStream,java.lang.String)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long,int)>",
            "<org.anddev.andengine.util.SAXUtils: double getDoubleAttributeOrThrow(org.xml.sax.Attributes,java.lang.String)>",
            "<org.anddev.andengine.util.path.Direction: void <clinit>()>",
            "<org.anddev.andengine.util.modifier.BaseDurationModifier: void <init>()>",
            "<org.anddev.andengine.entity.text.Text: void updateText(java.lang.String)>",
            "<org.anddev.andengine.extension.physics.box2d.FixedStepPhysicsWorld: void onUpdate(float)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController: void applyTouchOptions(org.anddev.andengine.engine.options.TouchOptions)>",
            "<org.anddev.andengine.util.StreamUtils: byte[] streamToBytes(java.io.InputStream,int)>",
            "<org.anddev.andengine.entity.particle.Particle: float getDeathTime()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: float determineCurrentRate()>",
            "<org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource: org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource clone()>",
            "<com.game.myjewelsec.OptionActivity: void onLoadComplete()>",
            "<org.anddev.andengine.entity.particle.modifier.ScaleModifier: void <init>(float,float,float,float,float,float)>",
            "<org.anddev.andengine.util.TransformationPool$1: void <init>()>",
            "<org.anddev.andengine.entity.scene.Scene: void registerTouchArea(org.anddev.andengine.entity.scene.Scene$ITouchArea)>",
            "<org.anddev.andengine.extension.physics.box2d.util.Vector2Pool$1: com.badlogic.gdx.math.Vector2 onAllocatePoolItem()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableTexCoordArray(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.ui.activity.BaseActivity: void doAsync(int,int,org.anddev.andengine.util.AsyncCallable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: void setTextureSourceDecoratorOptions(org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<com.game.myjewelsec.modifier.RandomDirectionModifier: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: org.anddev.andengine.engine.camera.Camera getCameraFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.audio.music.Music: void seekTo(int)>",
            "<org.anddev.andengine.util.Base64: byte[] decode(java.lang.String,int)>",
            "<org.anddev.andengine.entity.scene.menu.animator.DirectMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: void onSetValue(org.anddev.andengine.entity.IEntity,float,float)>",
            "<org.anddev.andengine.util.ActivityUtils$1: void onPostExecute(java.lang.Object)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory$1: void <init>(org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.entity.text.Text: void <init>(float,float,org.anddev.andengine.opengl.font.Font,java.lang.String,org.anddev.andengine.util.HorizontalAlign,int)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: int getHeight()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getRotationCenterX()>",
            "<org.anddev.andengine.engine.camera.Camera: void setChaseEntity(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.audio.BaseAudioEntity: float getMasterVolume()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: void <init>(int,int,int,int)>",
            "<org.anddev.andengine.util.MathUtils: void arraySumInternal(long[],long)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: float access$2(org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl)>",
            "<org.anddev.andengine.entity.primitive.Line: void <init>(float,float,float,float,float)>",
            "<com.game.myjewelsec.MapActivity: org.anddev.andengine.engine.Engine onLoadEngine()>",
            "<com.game.myjewelsec.GameActivity: void onResumeGame()>",
            "<org.anddev.andengine.util.StreamUtils: boolean copyAndClose(java.io.InputStream,java.io.OutputStream)>",
            "<org.anddev.andengine.engine.SingleSceneSplitScreenEngine: void convertSurfaceToSceneTouchEvent(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.ActivityUtils$2: void onProgressUpdate(java.lang.Object[])>",
            "<org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier[])>",
            "<org.anddev.andengine.opengl.texture.Texture: int generateHardwareTextureID(javax.microedition.khronos.opengles.GL10)>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$42()>",
            "<com.game.myjewelsec.SelectActivity: void clearAllSele()>",
            "<org.anddev.andengine.entity.scene.Scene: void setChildScene(org.anddev.andengine.entity.scene.Scene,boolean,boolean,boolean)>",
            "<org.anddev.andengine.util.modifier.ease.EaseBounceInOut: void <init>()>",
            "<org.anddev.andengine.util.pool.Pool: org.anddev.andengine.util.pool.PoolItem onHandleAllocatePoolItem()>",
            "<org.anddev.andengine.util.modifier.LoopModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.opengl.texture.source.PictureTextureSource: void <init>(android.graphics.Picture,int,int)>",
            "<org.anddev.andengine.opengl.font.Font: void getLetterBounds(char,org.anddev.andengine.opengl.font.Size)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableDither(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: org.anddev.andengine.util.Transformation getSceneToLocalTransformation()>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: void reset()>",
            "<com.game.myjewelsec.GameServer.GameServer: void setBestscore(int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseSineIn: void <init>()>",
            "<org.anddev.andengine.opengl.texture.source.InternalStorageFileTextureSource: void <init>(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.util.SimplePreferences: void <init>()>",
            "<org.anddev.andengine.opengl.texture.source.PictureTextureSource: void <init>(android.graphics.Picture)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler$3: void <init>(org.anddev.andengine.util.pool.PoolUpdateHandler,int,int)>",
            "<org.anddev.andengine.util.Debug: void e(java.lang.Throwable)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXParseException: void <init>()>",
            "<org.anddev.andengine.entity.scene.background.RepeatingSpriteBackground: org.anddev.andengine.opengl.texture.Texture getTexture()>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void reloadBufferObjects()>",
            "<org.anddev.andengine.util.Base64InputStream: void <init>(java.io.InputStream,int,boolean)>",
            "<com.game.myjewelsec.MainActivity: int getLayoutID()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setAngularVelocity(float)>",
            "<com.game.myjewelsec.GameServer.ParticleSystemCrashPool: org.anddev.andengine.entity.particle.ParticleSystem onAllocatePoolItem()>",
            "<org.anddev.andengine.util.BetaUtils$2: void onClick(android.content.DialogInterface,int)>",
            "<com.game.myjewelsec.GameActivity: int[] access$22(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegion: java.lang.Object clone()>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void back()>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity: float getSplashScaleFrom()>",
            "<org.anddev.andengine.entity.text.TickerText: void reset()>",
            "<com.game.myjewelsec.MapActivity: boolean onKeyDown(int,android.view.KeyEvent)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.GrahamScan: void grahamScan()>",
            "<org.anddev.andengine.util.progress.ProgressMonitor: int getProgress()>",
            "<org.anddev.andengine.entity.Entity: void setColor(float,float,float)>",
            "<org.anddev.andengine.entity.modifier.SequenceEntityModifier: void <init>(org.anddev.andengine.entity.modifier.IEntityModifier[])>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: float getHeight()>",
            "<com.game.myjewelsec.GameLib.MyBarSet: void add(com.game.myjewelsec.GameLib.MyBarSet$Bar)>",
            "<org.anddev.andengine.util.MultiKey: int size()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.CircleTextureSourceDecoratorShape: void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: void <init>(org.anddev.andengine.entity.modifier.MoveXModifier)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TiledTextureRegionBuffer: org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: int getRenderMode()>",
            "<org.anddev.andengine.entity.Entity: void <init>()>",
            "<org.anddev.andengine.entity.particle.initializer.RotationInitializer: void <init>(float)>",
            "<org.anddev.andengine.engine.Engine: void setSurfaceSize(int,int)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.BaseHullAlgorithm: int indexOfLowestVertex()>",
            "<org.anddev.andengine.util.Transformation: void setToIdentity()>",
            "<org.anddev.andengine.util.ActivityUtils$2: java.lang.Object doInBackground(java.lang.Object[])>",
            "<org.anddev.andengine.entity.modifier.FadeInModifier: void <init>(float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.modifier.util.ModifierUtils: void <init>()>",
            "<org.anddev.andengine.opengl.texture.source.AssetTextureSource: android.graphics.Bitmap onLoadBitmap()>",
            "<org.anddev.andengine.entity.particle.emitter.BaseRectangleParticleEmitter: float getHeight()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: void <init>(float[],float[])>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: android.graphics.Bitmap onLoadBitmap()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TextureRegion createFromSource(org.anddev.andengine.opengl.texture.BuildableTexture,org.anddev.andengine.opengl.texture.source.ITextureSource)>",
            "<org.anddev.andengine.input.touch.TouchEvent: boolean isActionOutside()>",
            "<com.game.myjewelsec.OptionActivity: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.engine.Engine onLoadEngine()>",
            "<org.anddev.andengine.entity.particle.initializer.BaseDoubleValueInitializer: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: int getWidth()>",
            "<org.anddev.andengine.entity.util.ScreenGrabber: android.graphics.Bitmap grab(int,int,int,int,javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean unregisterUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler)>",
            "<org.anddev.andengine.util.SimplePreferences: android.content.SharedPreferences$Editor getEditorInstance(android.content.Context)>",
            "<org.anddev.andengine.opengl.texture.Texture: int getHardwareTextureID()>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: void position(int)>",
            "<org.anddev.andengine.util.SAXUtils: double getDoubleAttribute(org.xml.sax.Attributes,java.lang.String,double)>",
            "<org.anddev.andengine.util.pool.PoolItem: void recycle()>",
            "<org.anddev.andengine.audio.BaseAudioManager: void add(org.anddev.andengine.audio.IAudioEntity)>",
            "<org.anddev.andengine.entity.modifier.FadeInModifier: void <init>(org.anddev.andengine.entity.modifier.FadeInModifier)>",
            "<org.anddev.andengine.entity.scene.popup.PopupScene$1: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.input.touch.detector.ScrollDetector: float getTriggerScrollMinimumDistance()>",
            "<com.game.myjewelsec.LevelSeleActivity: void StartGame(int)>",
            "<com.game.myjewelsec.GameActivity$16: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.engine.SingleSceneSplitScreenEngine: org.anddev.andengine.engine.camera.Camera getCameraFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: int getMenuItemCount()>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$SurfaceGestureDetectorAdapter: boolean onSwipeRight()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void init()>",
            "<org.anddev.andengine.entity.shape.RectangularShape: void reset()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuadInOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseBounceIn: void <init>()>",
            "<org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl: org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl$IAnalogOnScreenControlListener getOnScreenControlListener()>",
            "<org.anddev.andengine.util.pool.PoolItem: org.anddev.andengine.util.pool.Pool getParent()>",
            "<org.anddev.andengine.opengl.texture.source.AssetTextureSource: void <init>(android.content.Context,java.lang.String)>",
            "<com.game.myjewelsec.ObjectPool: java.lang.Object obtainPoolItem()>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: void onSetInitialValue(org.anddev.andengine.entity.IEntity,float)>",
            "<org.anddev.andengine.util.Base64$Encoder: void <clinit>()>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity: void onLoadResources()>",
            "<org.anddev.andengine.util.ActivityUtils$2: java.lang.Object doInBackground(java.lang.Void[])>",
            "<org.anddev.andengine.util.FileUtils: java.lang.String[] getDirectoryListOnExternalStorage(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.entity.shape.Shape: void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.audio.music.MusicFactory: org.anddev.andengine.audio.music.Music createMusicFromFile(org.anddev.andengine.audio.music.MusicManager,android.content.Context,java.io.File)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.BaseHullAlgorithm: void swap(int,int)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: void access$3(com.game.myjewelsec.GameServer.MyParticleSystem,int)>",
            "<org.anddev.andengine.entity.Entity: void registerEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier)>",
            "<org.anddev.andengine.entity.layer.ZIndexSorter: void sort(org.anddev.andengine.entity.IEntity[],int,int)>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: void onSetInitialValue(java.lang.Object,float)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: java.lang.String toString()>",
            "<org.anddev.andengine.util.path.astar.AStarPathFinder$Node: int setParent(org.anddev.andengine.util.path.astar.AStarPathFinder$Node)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: int getTileHeight()>",
            "<org.anddev.andengine.opengl.texture.Texture: void unloadFromHardware(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.scene.SplashScene: void <init>(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TSXParser: void <init>(android.content.Context,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.opengl.texture.TextureOptions,int)>",
            "<org.anddev.andengine.input.touch.detector.ScrollDetector: void <init>(float,org.anddev.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener)>",
            "<org.anddev.andengine.input.touch.detector.ClickDetector: void <init>(org.anddev.andengine.input.touch.detector.ClickDetector$IClickDetectorListener)>",
            "<org.anddev.andengine.util.SAXUtils: long getLongAttribute(org.xml.sax.Attributes,java.lang.String,long)>",
            "<org.anddev.andengine.util.Base64: byte[] encode(byte[],int,int,int)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder: void <clinit>()>",
            "<org.anddev.andengine.opengl.font.Font: int getLineHeight()>",
            "<org.anddev.andengine.util.sort.Sorter: void sort(java.util.List,java.util.Comparator)>",
            "<com.game.myjewelsec.LevelSeleActivity: void saveLevelData()>",
            "<org.anddev.andengine.entity.primitive.Line: float[] getSceneCenterCoordinates()>",
            "<com.game.myjewelsec.GameActivity: void CrashExplode(float,float)>",
            "<org.anddev.andengine.engine.camera.Camera: float getRotation()>",
            "<com.game.myjewelsec.GameActivity: int getLayoutID()>",
            "<com.games.b: java.lang.String[] d()>",
            "<org.anddev.andengine.opengl.texture.TextureManager: void <init>()>",
            "<org.anddev.andengine.entity.modifier.RotationByModifier: void onChangeValue(java.lang.Object,float)>",
            "<org.anddev.andengine.entity.scene.background.EntityBackground: void <init>(float,float,float,org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.util.modifier.ParallelModifier: void reset()>",
            "<com.game.myjewelsec.GameServer.GameServer: int addFreeStoneposition()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: org.anddev.andengine.entity.layer.tiled.tmx.TMXTile getTMXTile(int,int)>",
            "<org.anddev.andengine.util.ActivityUtils: void doAsync(android.content.Context,int,int,org.anddev.andengine.util.AsyncCallable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: org.anddev.andengine.opengl.buffer.BufferObjectManager getActiveInstance()>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: float getYaw()>",
            "<org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier: void <init>(float,float,float,float,float,org.anddev.andengine.util.modifier.IModifier$IModifierListener)>",
            "<org.anddev.andengine.util.SAXUtils: java.lang.String getAttribute(org.xml.sax.Attributes,java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator: void onMenuItemReset(org.anddev.andengine.entity.scene.menu.item.IMenuItem)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,int,int,int,int)>",
            "<org.anddev.andengine.util.ActivityUtils: void keepScreenOn(android.app.Activity)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int,int,org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void lineWidth(javax.microedition.khronos.opengles.GL10,float)>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$38()>",
            "<com.game.myjewelsec.GameActivity: float getDistance(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController$TouchEventRunnablePoolItem: void set(org.anddev.andengine.input.touch.TouchEvent)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: com.game.myjewelsec.GameServer.mySprite access$1(com.game.myjewelsec.GameServer.MyParticleSystem)>",
            "<org.anddev.andengine.entity.scene.background.ParallaxBackground: void <init>(float,float,float)>",
            "<org.anddev.andengine.engine.camera.CameraFactory: android.util.DisplayMetrics getDisplayMetrics(android.app.Activity)>",
            "<org.anddev.andengine.entity.modifier.LoopEntityModifier: void <init>(org.anddev.andengine.entity.modifier.LoopEntityModifier)>",
            "<com.game.myjewelsec.LevelSeleActivity: float access$1(com.game.myjewelsec.LevelSeleActivity)>",
            "<org.anddev.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem: void onSelected()>",
            "<org.anddev.andengine.engine.camera.BoundCamera: float determineBoundedY()>",
            "<org.anddev.andengine.ui.activity.LayoutGameActivity: void <init>()>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: void <init>(org.anddev.andengine.entity.modifier.RotationModifier)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXException: void <init>(java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.Texture: void <init>(int,int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader: void <init>(android.content.Context,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener)>",
            "<com.game.myjewelsec.GameServer.GameServer: int findstone(int,int)>",
            "<org.anddev.andengine.opengl.font.FontManager: void updateFonts(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.engine.SingleSceneSplitScreenEngine: void onDrawScene(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: boolean disableAccelerometerSensor()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: int getHeight()>",
            "<org.anddev.andengine.ui.dialog.StringInputDialogBuilder: java.lang.Object generateResult(java.lang.String)>",
            "<org.anddev.andengine.util.StreamUtils: void copy(java.io.InputStream,java.io.OutputStream,long)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void texCoordPointer(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.opengl.util.FastFloatBuffer)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TiledTextureRegionBuffer: void <init>(org.anddev.andengine.opengl.texture.region.TiledTextureRegion,int)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: org.anddev.andengine.entity.scene.Scene getSceneFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void setPathModifierListener(org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener)>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: void <clinit>()>",
            "<com.game.myjewelsec.GameActivity$3: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.util.pool.Pool: void <init>(int)>",
            "<org.anddev.andengine.entity.particle.modifier.BaseSingleValueSpanModifier: void onUpdateParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<org.anddev.andengine.util.modifier.LoopModifier: void onHandleLoopFinished(java.lang.Object)>",
            "<org.anddev.andengine.util.TimeUtils: java.lang.String formatSeconds(int,java.lang.StringBuilder)>",
            "<org.anddev.andengine.entity.particle.modifier.ExpireModifier: float getMinLifeTime()>",
            "<org.anddev.andengine.sensor.location.LocationProviderStatus: void <clinit>()>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: void setAutoReset(boolean)>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void setParticlesSpawnEnabled(boolean)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: void setAccelerationX(float)>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.entity.sprite.AnimatedSprite access$18(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler$1: java.lang.Object onAllocatePoolItem()>",
            "<com.game.myjewelsec.LevelSeleActivity: void onResumeGame()>",
            "<org.anddev.andengine.entity.particle.modifier.ExpireModifier: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<com.game.myjewelsec.GameServer.GameServer: void <init>(org.anddev.andengine.entity.scene.Scene)>",
            "<com.games.a: void a(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.util.modifier.util.ModifierUtils: float getSequenceDurationOfModifier(org.anddev.andengine.util.modifier.IModifier[])>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: com.badlogic.gdx.math.Vector2 getGravity()>",
            "<org.anddev.andengine.opengl.texture.source.FileTextureSource: void <init>(java.io.File,int,int)>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: float getSegmentLength(int)>",
            "<org.anddev.andengine.entity.scene.Scene: void setTouchAreaBindingEnabled(boolean)>",
            "<org.anddev.andengine.entity.scene.menu.item.TextMenuItem: void <init>(int,org.anddev.andengine.opengl.font.Font,java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromSource(org.anddev.andengine.opengl.texture.BuildableTexture,org.anddev.andengine.opengl.texture.source.ITextureSource,int,int)>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.FixedResolutionPolicy: void <init>(int,int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: boolean isUpdatePosition()>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void acquireWakeLock(org.anddev.andengine.engine.options.WakeLockOptions)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void addTMXLayerProperty(org.anddev.andengine.entity.layer.tiled.tmx.TMXLayerProperty)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener)>",
            "<org.anddev.andengine.entity.scene.CameraScene: boolean onSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.engine.camera.Camera: float getCenterY()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: org.anddev.andengine.entity.modifier.PathModifier$Path 'to'(float,float)>",
            "<org.anddev.andengine.engine.camera.Camera: void applySceneToCameraSceneOffset(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.scene.background.ParallaxBackground: void attachParallaxEntity(org.anddev.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity)>",
            "<org.anddev.andengine.engine.Engine: void startMethodTracing(java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: void setAssetBasePath(java.lang.String)>",
            "<org.anddev.andengine.util.HorizontalAlign: org.anddev.andengine.util.HorizontalAlign[] values()>",
            "<com.game.myjewelsec.GameActivity$2: void run()>",
            "<org.anddev.andengine.entity.Entity: void applyToChildren(org.anddev.andengine.entity.IEntity$IEntityCallable)>",
            "<org.anddev.andengine.entity.scene.Scene: int getLayerCount()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromSource(org.anddev.andengine.opengl.texture.Texture,org.anddev.andengine.opengl.texture.source.ITextureSource,int,int,int,int)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: org.anddev.andengine.opengl.texture.region.TiledTextureRegion clone()>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView: void onMeasure(int,int)>",
            "<org.anddev.andengine.input.touch.TouchEvent$TouchEventPool: java.lang.Object onAllocatePoolItem()>",
            "<org.anddev.andengine.engine.SingleSceneSplitScreenEngine: org.anddev.andengine.engine.camera.Camera getSecondCamera()>",
            "<org.anddev.andengine.entity.modifier.FadeOutModifier: void <init>(float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection: org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection[] values()>",
            "<org.anddev.andengine.ui.dialog.GenericInputDialogBuilder: void setView(android.app.AlertDialog$Builder,android.widget.EditText)>",
            "<org.anddev.andengine.util.FileUtils: java.lang.String[] getDirectoryListOnExternalStorage(android.content.Context,java.lang.String,java.io.FilenameFilter)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseRectangleParticleEmitter: void setHeight(float)>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: void <init>(int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseCubicOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.util.MathUtils: void arraySumInto(long[],long[],long)>",
            "<org.anddev.andengine.util.Base64InputStream: void <init>(java.io.InputStream,int)>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: org.anddev.andengine.util.Callback getCallback()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator clone()>",
            "<com.game.myjewelsec.SelectActivity: void onPause()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void setPerspectiveCorrectionHintFastest(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity: float getSplashScaleTo()>",
            "<com.game.myjewelsec.GameActivity: void onLoadResources()>",
            "<org.anddev.andengine.opengl.texture.source.FileTextureSource: void <init>(java.io.File)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: void <init>(org.xml.sax.Attributes)>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,float)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer: org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion()>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.QuickHull: void <init>()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuartIn: org.anddev.andengine.util.modifier.ease.EaseQuartIn getInstance()>",
            "<org.anddev.andengine.entity.primitive.BaseRectangle: org.anddev.andengine.opengl.vertex.VertexBuffer getVertexBuffer()>",
            "<com.games.b: java.lang.String b()>",
            "<org.anddev.andengine.util.ActivityUtils: void doProgressAsync(android.content.Context,int,org.anddev.andengine.util.progress.ProgressCallable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: org.anddev.andengine.entity.modifier.MoveXModifier clone()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: java.lang.Object clone()>",
            "<com.game.myjewelsec.OptionActivity$Bar: float access$7(com.game.myjewelsec.OptionActivity$Bar)>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier: void <init>(org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier)>",
            "<org.anddev.andengine.opengl.texture.TextureOptions: void <clinit>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXLoadException: void <init>(java.lang.Throwable)>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: void setTimerSeconds(float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int,int,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: float getMinAccelerationY()>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: void fireListener()>",
            "<org.anddev.andengine.util.path.Path: void append(int,int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup: void addTMXObject(org.anddev.andengine.entity.layer.tiled.tmx.TMXObject)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: org.anddev.andengine.opengl.texture.region.TextureRegion getTextureRegion()>",
            "<org.anddev.andengine.opengl.vertex.TextVertexBuffer: int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$EglHelper: void finish()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.FillTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.engine.Engine: boolean enableVibrator(android.content.Context)>",
            "<org.anddev.andengine.entity.modifier.RotationAtModifier: org.anddev.andengine.entity.modifier.RotationAtModifier clone()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup: org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXObjectGroupProperties()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableVertexArray(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.ui.dialog.GenericInputDialogBuilder: void <init>(android.content.Context,int,int,int,int,java.lang.String,org.anddev.andengine.util.Callback,android.content.DialogInterface$OnCancelListener)>",
            "<com.game.myjewelsec.GameActivity: void BELL(int,int)>",
            "<com.game.myjewelsec.GameActivity$19: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: void onUpdate(float)>",
            "<org.anddev.andengine.util.Transformation: void transform(float[])>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableBlend(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.modifier.LoopEntityModifier: void <init>(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,int,org.anddev.andengine.entity.modifier.IEntityModifier)>",
            "<org.anddev.andengine.entity.particle.emitter.RectangleOutlineParticleEmitter: void getPositionOffset(float[])>",
            "<org.anddev.andengine.util.SAXUtils: byte getByteAttributeOrThrow(org.xml.sax.Attributes,java.lang.String)>",
            "<org.anddev.andengine.entity.modifier.SequenceEntityModifier: void <init>(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.entity.modifier.IEntityModifier[])>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.RectangleTextureSourceDecoratorShape: void <init>()>",
            "<com.game.myjewelsec.GameActivity: void ShowWinMessage(int)>",
            "<org.anddev.andengine.engine.Engine: boolean disableAccelerometerSensor(android.content.Context)>",
            "<com.game.myjewelsec.GameActivity$7: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.util.SAXUtils: float getFloatAttributeOrThrow(org.xml.sax.Attributes,java.lang.String)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler: void <init>(int)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void deleteTexture(javax.microedition.khronos.opengles.GL10,int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void clearPhysicsConnectors()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void setColor(javax.microedition.khronos.opengles.GL10,float,float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseCircularOut: void <init>()>",
            "<org.anddev.andengine.util.modifier.BaseDurationModifier: void reset()>",
            "<org.anddev.andengine.entity.text.Text: void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<com.game.myjewelsec.GameActivity: boolean addOnestone()>",
            "<org.anddev.andengine.util.modifier.LoopModifier: void <init>(org.anddev.andengine.util.modifier.IModifier$IModifierListener,int,org.anddev.andengine.util.modifier.IModifier)>",
            "<org.anddev.andengine.entity.Entity: java.lang.Object getUserData()>",
            "<org.anddev.andengine.util.modifier.ease.EaseExponentialIn: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.scene.Scene: org.anddev.andengine.entity.scene.Scene$IOnSceneTouchListener getOnSceneTouchListener()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void spawnParticles(float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: org.anddev.andengine.entity.IEntity getChild(int)>",
            "<org.anddev.andengine.entity.Entity$1: void call(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableLightning(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.input.touch.TouchEvent$TouchEventPool: void <init>(org.anddev.andengine.input.touch.TouchEvent$TouchEventPool)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: int getVelocityIterations()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: java.lang.Iterable getJoints()>",
            "<org.anddev.andengine.engine.Engine: void <clinit>()>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: void updateUpdateHandlers(float)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionLibrary: org.anddev.andengine.opengl.texture.region.TextureRegion get(int)>",
            "<org.anddev.andengine.util.Library: void <init>(int)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void onPause()>",
            "<org.anddev.andengine.util.ActivityUtils: void doAsync(android.content.Context,int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: java.lang.Object clone()>",
            "<org.anddev.andengine.engine.Engine: void clearUpdateHandlers()>",
            "<org.anddev.andengine.util.Transformation: void postScale(float,float)>",
            "<org.anddev.andengine.util.SAXUtils: void appendAttribute(java.lang.StringBuilder,java.lang.String,boolean)>",
            "<org.anddev.andengine.entity.scene.Scene: void setParent(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node: void <init>(int,int,int,int)>",
            "<org.anddev.andengine.opengl.texture.source.ResourceTextureSource: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.entity.scene.background.BaseBackground: boolean removeBackgroundModifier(org.anddev.andengine.util.modifier.IModifier)>",
            "<com.game.myjewelsec.GameActivity$17: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void onWindowFocusChanged(boolean)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: org.anddev.andengine.engine.Engine getEngine()>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: void access$0(com.game.myjewelsec.GameServer.MyParticleSystem,com.game.myjewelsec.GameServer.mySprite)>",
            "<org.anddev.andengine.opengl.vertex.RectangleVertexBuffer: void <clinit>()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: org.anddev.andengine.opengl.view.GLWrapper access$2(org.anddev.andengine.opengl.view.GLSurfaceView)>",
            "<org.anddev.andengine.entity.text.TickerText: void setCharactersPerSecond(float)>",
            "<org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier: void <init>(org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier)>",
            "<org.anddev.andengine.entity.primitive.Line: org.anddev.andengine.opengl.vertex.VertexBuffer getVertexBuffer()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: int getHeight()>",
            "<org.anddev.andengine.sensor.BaseSensorData: void setValues(float[])>",
            "<org.anddev.andengine.opengl.texture.Texture: void removeTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: int computeNextIndex(java.util.List,int)>",
            "<org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$TextureStateAdapter: void <init>()>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: void setZoomFactor(float)>",
            "<org.anddev.andengine.audio.BaseAudioEntity: void <init>(org.anddev.andengine.audio.IAudioManager)>",
            "<org.anddev.andengine.util.modifier.LoopModifier: void <init>(int,org.anddev.andengine.util.modifier.IModifier)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer: boolean isFlippedHorizontal()>",
            "<org.anddev.andengine.util.modifier.ease.EaseBounceIn: org.anddev.andengine.util.modifier.ease.EaseBounceIn getInstance()>",
            "<org.anddev.andengine.util.FileUtils: boolean isExternalStorageReadable()>",
            "<com.game.myjewelsec.BuildConfig: void <init>()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: int access$1(org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect)>",
            "<com.game.myjewelsec.GameActivity: void BOMB(int,int)>",
            "<com.game.myjewelsec.MainActivity$1: void <init>(com.game.myjewelsec.MainActivity,float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.util.Library: void <init>()>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier: void <init>(float,float,float)>",
            "<org.anddev.andengine.util.path.Path: org.anddev.andengine.util.path.Direction getDirectionToPreviousStep(int)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void texCoordZeroPointer(javax.microedition.khronos.opengles.GL11)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void onWindowResize(int,int)>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: int generateHardwareBufferID(javax.microedition.khronos.opengles.GL11)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader: void <init>(android.content.Context,org.anddev.andengine.opengl.texture.TextureManager)>",
            "<org.anddev.andengine.engine.options.EngineOptions: boolean needsSound()>",
            "<org.anddev.andengine.ui.activity.LayoutGameActivity: void onSetContentView()>",
            "<org.anddev.andengine.entity.modifier.RotationAtModifier: void onManagedInitialize(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: android.graphics.Bitmap onLoadBitmap()>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: float getTimerSeconds()>",
            "<com.game.myjewelsec.SelectActivity: void showselepage()>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TiledTextureRegion,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.GameServer.ParticleSystemCrashPool access$34(com.game.myjewelsec.GameActivity)>",
            "<com.game.myjewelsec.GameActivity: void loadPreferences()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createCircleBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef)>",
            "<org.anddev.andengine.util.pool.Pool: void onHandleRecycleItem(org.anddev.andengine.util.pool.PoolItem)>",
            "<org.anddev.andengine.entity.modifier.SequenceEntityModifier: org.anddev.andengine.util.modifier.SequenceModifier clone()>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void enableVibrator()>",
            "<org.anddev.andengine.util.Library: void put(int,java.lang.Object)>",
            "<org.anddev.andengine.engine.camera.Camera: float getMinX()>",
            "<com.game.myjewelsec.GameServer.GameServer$1: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.util.SAXUtils: void appendAttribute(java.lang.StringBuilder,java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXLoadException: void <init>(java.lang.String,java.lang.Throwable)>",
            "<com.game.myjewelsec.OptionActivity: com.game.myjewelsec.GameServer.myAppData access$2(com.game.myjewelsec.OptionActivity)>",
            "<org.anddev.andengine.level.LevelLoader: void loadLevelFromResource(android.content.Context,int)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void requestRender()>",
            "<org.anddev.andengine.audio.music.Music: boolean isPlaying()>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView: void <init>(android.content.Context)>",
            "<org.anddev.andengine.util.SAXUtils: short getShortAttribute(org.xml.sax.Attributes,java.lang.String,short)>",
            "<org.anddev.andengine.entity.shape.Shape: void onInitDraw(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.engine.camera.Camera: void setFarZClippingPlane(float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator: void onMenuItemSelected(org.anddev.andengine.entity.scene.menu.item.IMenuItem)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.GrahamScan: void makeAllVerticesRelativeTo(com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromResource(org.anddev.andengine.opengl.texture.Texture,android.content.Context,int,int,int,int,int)>",
            "<org.anddev.andengine.opengl.texture.TextureManager: void loadTextures(org.anddev.andengine.opengl.texture.Texture[])>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: int capacity()>",
            "<org.anddev.andengine.entity.Entity: float getGreen()>",
            "<org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier: org.anddev.andengine.util.modifier.SequenceModifier clone()>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.JarvisMarch: void jarvisMarch()>",
            "<com.game.myjewelsec.MapActivity: void onResumeGame()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: org.anddev.andengine.entity.IEntity detachChild(org.anddev.andengine.entity.IEntity$IEntityMatcher)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: float cutToMaxVelocityX(float,float)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.entity.modifier.DurationShapeModifier: void <init>(float)>",
            "<com.game.myjewelsec.GameServer.LevelManage: void <init>(android.content.Context)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: java.util.List getContactList()>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueChangeModifier: void <init>(float,float,org.anddev.andengine.util.modifier.IModifier$IModifierListener)>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: void <init>(long,float,float,org.anddev.andengine.input.touch.detector.HoldDetector$IHoldDetectorListener)>",
            "<org.anddev.andengine.engine.options.RenderOptions: org.anddev.andengine.engine.options.RenderOptions setDisableExtensionVertexBufferObjects(boolean)>",
            "<org.anddev.andengine.engine.Engine: boolean onTouchScene(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.pool.Pool: boolean ownsPoolItem(org.anddev.andengine.util.pool.PoolItem)>",
            "<org.anddev.andengine.entity.particle.modifier.BaseDoubleValueSpanModifier: void <init>(float,float,float,float,float,float)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$EglHelper: javax.microedition.khronos.opengles.GL createSurface(android.view.SurfaceHolder)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void setPositionIterations(int)>",
            "<org.anddev.andengine.sensor.BaseSensorData: float[] getValues()>",
            "<org.anddev.andengine.util.SocketUtils: void closeSocket(java.net.Socket)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void vertexZeroPointer(javax.microedition.khronos.opengles.GL11)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: void <init>(org.xml.sax.Attributes,org.anddev.andengine.opengl.texture.TextureOptions)>",
            "<org.anddev.andengine.engine.Engine: void stopMethodTracing()>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void buildAnimations(java.util.ArrayList,float,float)>",
            "<org.anddev.andengine.audio.BaseAudioEntity: float getRightVolume()>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void <init>(org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<com.game.myjewelsec.R: void <init>()>",
            "<org.anddev.andengine.util.ActivityUtils$2$1: void onProgressChanged(int)>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: org.anddev.andengine.opengl.util.FastFloatBuffer getFloatBuffer()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.OutlineTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.OutlineTextureSourceDecorator clone()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean isCullingEnabled()>",
            "<org.anddev.andengine.entity.scene.CameraScene: void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager: com.badlogic.gdx.physics.box2d.Body findBodyByShape(org.anddev.andengine.entity.shape.IShape)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util: float area2(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.entity.Entity: float getScaleCenterX()>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void onUpdate(float,java.lang.Object)>",
            "<org.anddev.andengine.entity.modifier.LoopEntityModifier: void <init>(int,org.anddev.andengine.entity.modifier.IEntityModifier)>",
            "<org.anddev.andengine.util.BetaUtils$1: void <init>(android.content.Intent,android.app.Activity)>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: float getMinY()>",
            "<org.anddev.andengine.entity.modifier.DurationShapeModifier: void <init>(org.anddev.andengine.entity.modifier.DurationShapeModifier)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler: void reset()>",
            "<org.anddev.andengine.audio.sound.Sound: void pause()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setAlpha(float)>",
            "<com.game.myjewelsec.GameServer.LevelManage: com.game.myjewelsec.GameServer.LevelManage$LData getLevelData(int)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: org.anddev.andengine.util.modifier.SequenceModifier clone()>",
            "<org.anddev.andengine.entity.scene.popup.PopupScene$1: void <init>(org.anddev.andengine.entity.scene.popup.PopupScene,org.anddev.andengine.entity.scene.Scene,java.lang.Runnable)>",
            "<org.anddev.andengine.sensor.SensorDelay: org.anddev.andengine.sensor.SensorDelay[] values()>",
            "<org.anddev.andengine.input.touch.detector.BaseDetector: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.engine.options.EngineOptions: org.anddev.andengine.engine.options.EngineOptions$ScreenOrientation getScreenOrientation()>",
            "<org.anddev.andengine.entity.particle.initializer.BaseSingleValueInitializer: float getRandomValue()>",
            "<org.anddev.andengine.entity.Entity$1: void call(java.lang.Object)>",
            "<org.anddev.andengine.util.ActivityUtils: void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.util.concurrent.Callable,org.anddev.andengine.util.Callback)>",
            "<com.game.myjewelsec.MapActivity: void access$5(com.game.myjewelsec.MapActivity,boolean)>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void <init>(float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.Base64$Coder: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void registerEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier)>",
            "<com.game.myjewelsec.GameServer.LevelManage: int getMaxlevel()>",
            "<org.anddev.andengine.util.modifier.ease.EaseBackInOut: void <init>()>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: int computePreviousIndex(java.util.List,int)>",
            "<com.game.myjewelsec.modifier.RandomDirectionModifier: void <init>(float)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: void <init>(float,float)>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: int getMagneticFieldAccuracy()>",
            "<com.game.myjewelsec.LoadActivity: org.anddev.andengine.entity.scene.Scene onLoadScene()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableMultisample(javax.microedition.khronos.opengles.GL10)>",
            "<com.game.myjewelsec.GameServer.LevelManage$LData: void LData()>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void onManagedInitialize(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer: void setFlippedHorizontal(boolean)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableDepthTest(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.path.Direction: org.anddev.andengine.util.path.Direction fromDelta(int,int)>",
            "<org.anddev.andengine.util.SystemUtils: int readSystemFileAsInt(java.lang.String)>",
            "<org.anddev.andengine.util.pool.Pool: void <init>(int,int)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void closeMenuScene()>",
            "<org.anddev.andengine.util.modifier.BaseTripleValueSpanModifier: void onSetInitialValues(java.lang.Object,float,float)>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: void <init>(int)>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: void <init>()>",
            "<org.anddev.andengine.entity.primitive.Line: float getY2()>",
            "<org.anddev.andengine.opengl.texture.source.FileTextureSource: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture: void <init>(int,int,org.anddev.andengine.opengl.texture.TextureOptions,org.anddev.andengine.opengl.texture.Texture$ITextureStateListener)>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: int getWidth()>",
            "<org.anddev.andengine.entity.modifier.FadeOutModifier: void <init>(float)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: org.anddev.andengine.entity.scene.Scene getChildScene()>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<com.game.myjewelsec.GameActivity$9: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.audio.sound.Sound: void play()>",
            "<org.anddev.andengine.util.modifier.BaseModifier: void <init>(org.anddev.andengine.util.modifier.IModifier$IModifierListener)>",
            "<org.anddev.andengine.util.levelstats.LevelStatsDBConnector: void submitAsync(int,boolean,int)>",
            "<org.anddev.andengine.util.TimeUtils: java.lang.String formatSeconds(int)>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView: void setMeasuredDimensionProxy(int,int)>",
            "<org.anddev.andengine.util.SmartList: void apply(org.anddev.andengine.util.ParameterCallable)>",
            "<org.anddev.andengine.entity.text.TickerText: boolean isReverse()>",
            "<org.anddev.andengine.entity.shape.RectangularShape: boolean contains(float,float)>",
            "<org.anddev.andengine.engine.camera.Camera: org.anddev.andengine.engine.camera.hud.HUD getHUD()>",
            "<com.game.myjewelsec.GameActivity$4: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void <init>(org.anddev.andengine.entity.modifier.ScaleModifier)>",
            "<com.game.myjewelsec.GameServer.GameServer: void clearHashStone(int)>",
            "<org.anddev.andengine.opengl.font.StrokeFont: void <init>(org.anddev.andengine.opengl.texture.Texture,android.graphics.Typeface,float,boolean,int,float,int,boolean)>",
            "<org.anddev.andengine.entity.scene.Scene: void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.GrahamScan: int computeHull(com.badlogic.gdx.math.Vector2[])>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: void selectOnHardware(javax.microedition.khronos.opengles.GL11)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$InnerOnGestureDetectorListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: void <init>(float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.modifier.LoopModifier: void setLoopModifierListener(org.anddev.andengine.util.modifier.LoopModifier$ILoopModifierListener)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: void <init>(org.anddev.andengine.util.modifier.IModifier$IModifierListener,org.anddev.andengine.util.modifier.IModifier[])>",
            "<org.anddev.andengine.input.touch.TouchEvent: void recycle(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.Entity: void setRotationCenter(float,float)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void setOnMenuItemClickListener(org.anddev.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener)>",
            "<org.anddev.andengine.entity.modifier.SingleValueSpanShapeModifier: void <init>(float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.util.ScreenCapture: void capture(int,int,java.lang.String,org.anddev.andengine.entity.util.ScreenCapture$IScreenCaptureCallback)>",
            "<org.anddev.andengine.engine.handler.collision.CollisionHandler: void <init>(org.anddev.andengine.engine.handler.collision.ICollisionCallback,org.anddev.andengine.entity.shape.IShape,java.util.ArrayList)>",
            "<org.anddev.andengine.entity.scene.Scene: boolean unregisterTouchArea(org.anddev.andengine.entity.scene.Scene$ITouchArea)>",
            "<org.anddev.andengine.entity.Entity: void setZIndex(int)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: float getTexturePositionOfCurrentTileX()>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.RatioResolutionPolicy: void <init>(float,float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getScaleCenterY()>",
            "<org.anddev.andengine.input.touch.detector.ClickDetector: void setTriggerClickMaximumMilliseconds(long)>",
            "<org.anddev.andengine.engine.Engine: boolean onTouchHUD(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<com.game.myjewelsec.GameActivity: int access$26(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerData: void setX(float)>",
            "<org.anddev.andengine.entity.scene.Scene: org.anddev.andengine.entity.layer.Layer getBottomLayer()>",
            "<org.anddev.andengine.util.Debug: void v(java.lang.String,java.lang.Throwable)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: org.anddev.andengine.entity.IEntity getLastChild()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TiledTextureRegionBuffer: float getX2()>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void <init>(float,org.anddev.andengine.entity.modifier.PathModifier$Path,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.path.astar.AStarPathFinder: boolean isTileBlocked(java.lang.Object,int,int,int,int)>",
            "<org.anddev.andengine.entity.util.ScreenCapture: void onManagedUpdate(float)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: void removeCollinearNeighborEarsAfterRemovingEarTip(java.util.ArrayList,int)>",
            "<org.anddev.andengine.entity.particle.initializer.BaseDoubleValueInitializer: float getRandomValueB()>",
            "<org.anddev.andengine.util.Debug: void w(java.lang.String,java.lang.Throwable)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceScrollDetector: float getX(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.ColorUtils: int HSVToColor(float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseBackIn: float getPercentageDone(float,float,float,float)>",
            "<com.game.myjewelsec.GameLib.MyBarSet: void <init>()>",
            "<org.anddev.andengine.entity.Entity: float getScaleY()>",
            "<org.anddev.andengine.entity.primitive.BaseRectangle: void <init>(float,float,float,float,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void applyToChildren(org.anddev.andengine.entity.IEntity$IEntityCallable)>",
            "<org.anddev.andengine.entity.particle.initializer.AlphaInitializer: void <init>(float)>",
            "<org.anddev.andengine.entity.Entity: int getZIndex()>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.entity.particle.modifier.RotationModifier: void onSetInitialValue(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.engine.Engine: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.QuickHull: int partition(org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line,int,int)>",
            "<org.anddev.andengine.util.pool.Pool: void recycle(org.anddev.andengine.util.pool.PoolItem)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection: int getFromX()>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: void <init>(float,float,float,float,float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.FillTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TSXParser: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXParseException: void <init>(java.lang.Exception)>",
            "<com.game.myjewelsec.MapActivity: void saveLevelData()>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: void <init>(float)>",
            "<com.game.myjewelsec.GameActivity$18: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.util.SystemUtils: boolean hasSystemFeature(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: void cutEarTip(java.util.ArrayList,int,java.util.ArrayList)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: java.lang.String getImageSource()>",
            "<com.game.myjewelsec.GameActivity: void access$29(com.game.myjewelsec.GameActivity,int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXParser: void <init>(android.content.Context,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.opengl.texture.TextureOptions,org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener)>",
            "<com.game.myjewelsec.LevelSeleActivity: void onPause()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager: void <init>()>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void <init>(float,org.anddev.andengine.entity.modifier.PathModifier$Path,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegion: org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer getTextureBuffer()>",
            "<com.game.myjewelsec.LevelSeleActivity: boolean access$0(com.game.myjewelsec.LevelSeleActivity)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: boolean isAnimationRunning()>",
            "<org.anddev.andengine.entity.shape.RectangularShape: boolean collidesWith(org.anddev.andengine.entity.shape.IShape)>",
            "<org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener,int,org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier$ILoopBackgroundModifierListener,org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier)>",
            "<org.anddev.andengine.entity.shape.Shape: void onApplyVertices(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.extension.physics.box2d.FixedStepPhysicsWorld: void <init>(int,int,com.badlogic.gdx.math.Vector2,boolean,int,int)>",
            "<org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$DebugTextureStateListener: void <init>()>",
            "<com.game.myjewelsec.GameServer.myAppData: boolean getMainState()>",
            "<org.anddev.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity: void onDraw(javax.microedition.khronos.opengles.GL10,float,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: void stopAnimation()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void setEGLConfigChooser(boolean)>",
            "<org.anddev.andengine.entity.Entity: float[] getSceneCenterCoordinates()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void onManagedUpdate(float)>",
            "<com.game.myjewelsec.LevelSeleActivity: void <init>()>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: void setCurrentTileIndex(int,int)>",
            "<org.anddev.andengine.entity.particle.Particle: void setDeathTime(float)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController: boolean fireTouchEvent(float,float,int,int,android.view.MotionEvent)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: boolean areVerticesClockwise(java.util.ArrayList)>",
            "<org.anddev.andengine.util.Base64: void <clinit>()>",
            "<org.anddev.andengine.sensor.location.LocationSensorOptions: void setMinimumTriggerTime(long)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuintIn: org.anddev.andengine.util.modifier.ease.EaseQuintIn getInstance()>",
            "<org.anddev.andengine.opengl.font.Font: void drawCharacterString(java.lang.String)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getBaseHeight()>",
            "<org.anddev.andengine.engine.camera.BoundCamera: void setCenter(float,float)>",
            "<org.anddev.andengine.entity.text.ChangeableText: void <clinit>()>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: org.anddev.andengine.entity.modifier.ScaleAtModifier clone()>",
            "<org.anddev.andengine.entity.Entity$1: void <init>()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer: float getX1()>",
            "<org.anddev.andengine.audio.music.MusicManager: void <init>()>",
            "<org.anddev.andengine.util.ProbabilityGenerator: java.lang.Object next()>",
            "<org.anddev.andengine.opengl.font.Letter: void <init>(char,int,int,int,float,float,float,float)>",
            "<org.anddev.andengine.util.ActivityUtils$1: java.lang.Object doInBackground(java.lang.Void[])>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: void addTMXTileProperty(int,org.anddev.andengine.entity.layer.tiled.tmx.TMXTileProperty)>",
            "<org.anddev.andengine.util.modifier.BaseDurationModifier: float getTotalSecondsElapsed()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: void <init>()>",
            "<org.anddev.andengine.util.cache.RectangleVertexBufferCache: void <init>()>",
            "<org.anddev.andengine.entity.particle.modifier.BaseSingleValueSpanModifier: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<org.anddev.andengine.entity.scene.menu.animator.IMenuAnimator: void <clinit>()>",
            "<org.anddev.andengine.opengl.font.Size: float getWidth()>",
            "<com.game.myjewelsec.SelectActivity: org.anddev.andengine.entity.scene.Scene onLoadScene()>",
            "<org.anddev.andengine.extension.physics.box2d.FixedStepPhysicsWorld: void <init>(int,com.badlogic.gdx.math.Vector2,boolean)>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: int position()>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerSensorOptions: void <init>(org.anddev.andengine.sensor.SensorDelay)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: void setVelocityX(float,float)>",
            "<org.anddev.andengine.entity.Entity: void clearUpdateHandlers()>",
            "<com.game.myjewelsec.SelectActivity: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.path.astar.EuclideanHeuristic: void <init>()>",
            "<org.anddev.andengine.entity.modifier.ParallelEntityModifier: void <init>(org.anddev.andengine.entity.modifier.IEntityModifier[])>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: int getWidth()>",
            "<com.game.myjewelsec.Shell: boolean isDead()>",
            "<org.anddev.andengine.entity.sprite.BaseSprite: void onApplyTransformations(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int,int,org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions getTextureSourceDecoratorOptions()>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: void put(float[])>",
            "<com.game.myjewelsec.Shell: void renewTime()>",
            "<org.anddev.andengine.ui.activity.BaseSplashActivity: org.anddev.andengine.engine.options.resolutionpolicy.IResolutionPolicy getSplashResolutionPolicy(int,int)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: void setFlippedVertical(boolean)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: org.anddev.andengine.entity.layer.tiled.tmx.TMXTile[][] getTMXTiles()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: int getRight()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: float getInsetTop()>",
            "<org.anddev.andengine.util.Debug$DebugLevel: boolean access$2(org.anddev.andengine.util.Debug$DebugLevel,org.anddev.andengine.util.Debug$DebugLevel)>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.entity.sprite.Sprite access$6(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.engine.Engine: void onLocationChanged(android.location.Location)>",
            "<org.anddev.andengine.opengl.font.FontManager: void loadFont(org.anddev.andengine.opengl.font.Font)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void <init>(org.anddev.andengine.entity.modifier.PathModifier)>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void onSetInitialValues(org.anddev.andengine.entity.IEntity,float,float)>",
            "<org.anddev.andengine.entity.scene.menu.item.TextMenuItem: void onUnselected()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection: int getToY()>",
            "<org.anddev.andengine.engine.Engine: void stop()>",
            "<org.anddev.andengine.util.ViewUtils: void <init>()>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: int access$2(org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation)>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void prepareAnimations(java.util.ArrayList,float,float)>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: boolean isAutoReset()>",
            "<com.game.myjewelsec.LevelSeleActivity: void clearAllSelection()>",
            "<org.anddev.andengine.util.modifier.ease.EaseElasticInOut: void <init>()>",
            "<org.anddev.andengine.sensor.BaseSensorData: int getAccuracy()>",
            "<com.game.myjewelsec.MapActivity: int access$6(com.game.myjewelsec.MapActivity)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: void <init>(int,int,int,int,int,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXProperty: java.lang.String toString()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void onInitDraw(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: int getID()>",
            "<org.anddev.andengine.util.modifier.ease.EaseStrongIn: void <init>()>",
            "<org.anddev.andengine.entity.modifier.DoubleValueSpanShapeModifier: void <init>(float,float,float,float,float)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: int getTileWidth()>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer: void <init>(org.anddev.andengine.engine.Engine)>",
            "<org.anddev.andengine.util.TransformationPool: org.anddev.andengine.util.Transformation obtain()>",
            "<org.anddev.andengine.input.touch.TouchEvent$TouchEventPool: void <init>()>",
            "<org.anddev.andengine.util.FileUtils: boolean isExternalStorageWriteable()>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: void setPosition(org.anddev.andengine.entity.particle.ParticleSystem,float,float)>",
            "<org.anddev.andengine.entity.modifier.DoubleValueSpanShapeModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.SimplePreferences: int getAccessCount(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.entity.modifier.RotationAtModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier: void onSetInitialValue(java.lang.Object,float)>",
            "<org.anddev.andengine.entity.layer.ZIndexSorter: void sort(java.util.List)>",
            "<org.anddev.andengine.engine.options.EngineOptions: boolean isFullscreen()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuintInOut: org.anddev.andengine.util.modifier.ease.EaseQuintInOut getInstance()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegion: org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer onCreateTextureRegionBuffer()>",
            "<com.game.myjewelsec.MainActivity: void onDestroy()>",
            "<org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$TextureStateAdapter: void onTextureSourceLoadExeption(org.anddev.andengine.opengl.texture.Texture,org.anddev.andengine.opengl.texture.source.ITextureSource,java.lang.Throwable)>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: int getTexturePositionX()>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerData: float getY()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void onAttached()>",
            "<com.game.myjewelsec.LevelSeleActivity: void insertPage(int)>",
            "<com.game.myjewelsec.GameActivity: int access$24(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void setRenderMode(int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: java.lang.String getName()>",
            "<com.game.myjewelsec.GameActivity$18: void <init>(com.game.myjewelsec.GameActivity,float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.RectangleTextureSourceDecoratorShape: org.anddev.andengine.opengl.texture.source.decorator.shape.RectangleTextureSourceDecoratorShape getDefaultInstance()>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.entity.scene.Scene getSceneFromSurfaceTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.engine.camera.BoundCamera: void setBounds(float,float,float,float)>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: float getOverallHeight(java.util.ArrayList)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: org.anddev.andengine.engine.camera.Camera getSecondCamera()>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,float)>",
            "<org.anddev.andengine.opengl.texture.source.AssetTextureSource: void <init>(android.content.Context,java.lang.String,int,int)>",
            "<org.anddev.andengine.util.ListUtils: void <init>()>",
            "<org.anddev.andengine.engine.Engine: boolean enableOrientationSensor(android.content.Context,org.anddev.andengine.sensor.orientation.IOrientationListener,org.anddev.andengine.sensor.orientation.OrientationSensorOptions)>",
            "<org.anddev.andengine.opengl.texture.buffer.TextTextureBuffer: void update(org.anddev.andengine.opengl.font.Font,java.lang.String[])>",
            "<org.anddev.andengine.entity.particle.Particle: float getLifeTime()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.OutlineTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.input.touch.TouchEvent$TouchEventPool: org.anddev.andengine.input.touch.TouchEvent onAllocatePoolItem()>",
            "<org.anddev.andengine.entity.particle.emitter.CircleOutlineParticleEmitter: void getPositionOffset(float[])>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getScaleY()>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.entity.text.ChangeableText access$31(com.game.myjewelsec.GameActivity)>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$47()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TextureRegion createFromResource(org.anddev.andengine.opengl.texture.BuildableTexture,android.content.Context,int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXParseException: void <init>(java.lang.String)>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void <init>(org.anddev.andengine.entity.scene.menu.item.IMenuItem)>",
            "<org.anddev.andengine.engine.camera.Camera: void unapplySceneRotation(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.pool.RunnablePoolUpdateHandler: void onHandlePoolItem(org.anddev.andengine.util.pool.RunnablePoolItem)>",
            "<org.anddev.andengine.entity.scene.background.ParallaxBackground: void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.modifier.RotationAtModifier: void <init>(float,float,float,float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.GrahamScan: boolean isConvex(int)>",
            "<org.anddev.andengine.util.pool.GenericPool: void <init>()>",
            "<org.anddev.andengine.entity.util.FPSLogger: void <init>(float)>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: void setLoadedToHardware(boolean)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$2: void <init>(org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTiledMapProperties()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$2: void <init>(org.anddev.andengine.entity.modifier.PathModifier,int)>",
            "<org.anddev.andengine.opengl.font.Size: void set(int,int)>",
            "<org.anddev.andengine.entity.scene.menu.animator.BaseMenuAnimator: void <clinit>()>",
            "<org.anddev.andengine.entity.modifier.SequenceEntityModifier: org.anddev.andengine.entity.modifier.SequenceEntityModifier clone()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$1: void <init>(org.anddev.andengine.entity.modifier.PathModifier,float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void setEGLConfigChooser(org.anddev.andengine.opengl.view.EGLConfigChooser)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void reset()>",
            "<org.anddev.andengine.entity.modifier.DelayModifier: void <init>(float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.opengl.font.Font: void reload()>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TiledTextureRegion)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection: org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection[] values()>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: void setVelocity(float,float,float,float)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void onPause()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: float getAngularVelocity()>",
            "<org.anddev.andengine.level.LevelParser: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>",
            "<org.anddev.andengine.entity.Entity: void setRotation(float)>",
            "<com.game.myjewelsec.GameActivity: void onLoadComplete()>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void <init>(float)>",
            "<org.anddev.andengine.util.path.astar.AStarPathFinder$Node: int compareTo(java.lang.Object)>",
            "<org.anddev.andengine.engine.Engine$State: void waitUntilCanDraw()>",
            "<org.anddev.andengine.entity.particle.modifier.ScaleModifier: void onSetValues(org.anddev.andengine.entity.particle.Particle,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXLoadException: void <init>(java.lang.String)>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.GameServer.MyParticleSystem access$19(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.entity.modifier.DurationShapeModifier: void <init>()>",
            "<org.anddev.andengine.audio.sound.SoundFactory: org.anddev.andengine.audio.sound.Sound createSoundFromFileDescriptor(org.anddev.andengine.audio.sound.SoundManager,java.io.FileDescriptor,long,long)>",
            "<com.game.myjewelsec.GameServer.LevelManage$LData: int access$1(com.game.myjewelsec.GameServer.LevelManage$LData)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager: void reset()>",
            "<org.anddev.andengine.entity.scene.Scene: java.util.ArrayList getTouchAreas()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Rect: int getTop()>",
            "<org.anddev.andengine.entity.scene.menu.animator.DirectMenuAnimator: int[] $SWITCH_TABLE$org$anddev$andengine$util$HorizontalAlign()>",
            "<com.game.myjewelsec.GameServer.LevelManage: int getTotalLevel()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void addTileByGlobalTileID(int,org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener)>",
            "<org.anddev.andengine.util.SmartList: boolean remove(java.lang.Object,org.anddev.andengine.util.ParameterCallable)>",
            "<com.game.myjewelsec.GameServer.myAppData$SysConfig: void setDiff(long)>",
            "<org.anddev.andengine.entity.text.Text: void onInitDraw(javax.microedition.khronos.opengles.GL10)>",
            "<com.game.myjewelsec.LoadActivity: void <init>()>",
            "<org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter: void setCenter(float,float)>",
            "<org.anddev.andengine.opengl.font.Font: void <init>(org.anddev.andengine.opengl.texture.Texture,android.graphics.Typeface,float,boolean,int)>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void run()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: void setImageSource(android.content.Context,org.anddev.andengine.opengl.texture.TextureManager,org.xml.sax.Attributes)>",
            "<org.anddev.andengine.util.StreamUtils: java.lang.String readFully(java.io.InputStream)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int[],int)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: void access$1(org.anddev.andengine.util.modifier.SequenceModifier,org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener,org.anddev.andengine.util.modifier.IModifier,java.lang.Object)>",
            "<org.anddev.andengine.engine.Engine: boolean enableOrientationSensor(android.content.Context,org.anddev.andengine.sensor.orientation.IOrientationListener)>",
            "<org.anddev.andengine.opengl.texture.TextureManager: void reloadTextures()>",
            "<org.anddev.andengine.engine.SingleSceneSplitScreenEngine: void updateUpdateHandlers(float)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: void <init>(org.anddev.andengine.util.modifier.IModifier[])>",
            "<org.anddev.andengine.entity.shape.RectangularShape: float[] getSceneCenterCoordinates()>",
            "<org.anddev.andengine.util.Base64$Decoder: boolean process(byte[],int,int,boolean)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: void nextTile()>",
            "<org.anddev.andengine.util.modifier.BaseDurationModifier: void <init>(float,org.anddev.andengine.util.modifier.IModifier$IModifierListener)>",
            "<org.anddev.andengine.entity.scene.popup.PopupScene: void <init>(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.entity.scene.Scene,float,java.lang.Runnable)>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: float getTimerSecondsElapsed()>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueChangeModifier: void <init>(float,float)>",
            "<com.game.myjewelsec.LevelSeleActivity: void addLogo(org.anddev.andengine.entity.text.Text)>",
            "<org.anddev.andengine.util.modifier.ease.EaseExponentialIn: org.anddev.andengine.util.modifier.ease.EaseExponentialIn getInstance()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.RectangleTextureSourceDecoratorShape: void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.util.modifier.ease.EaseCubicInOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.engine.Engine: boolean isSensorSupported(android.hardware.SensorManager,int)>",
            "<com.game.myjewelsec.MapActivity: void LoadSele(int)>",
            "<org.anddev.andengine.entity.scene.popup.TextPopupScene: void <init>(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.opengl.font.Font,java.lang.String,float,java.lang.Runnable)>",
            "<com.game.myjewelsec.GameServer.GameServer: void Bell(int,int)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: void <init>(org.anddev.andengine.opengl.texture.Texture,int,int,int,int,int,int)>",
            "<com.game.myjewelsec.GameServer.ScoreImg$1: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.util.pool.PoolItem: void <init>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties: boolean containsTMXProperty(java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.util.modifier.ease.EaseSineInOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture: org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation addTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int)>",
            "<com.game.myjewelsec.GameActivity: void access$10(com.game.myjewelsec.GameActivity,int)>",
            "<org.anddev.andengine.util.pool.Pool: void onHandleObtainItem(org.anddev.andengine.util.pool.PoolItem)>",
            "<org.anddev.andengine.opengl.font.FontManager: void reloadFonts()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void deleteBuffer(javax.microedition.khronos.opengles.GL11,int)>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: int getCurrentTileIndex()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXException: void <init>()>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: int[] classifyVertices(java.util.ArrayList)>",
            "<org.anddev.andengine.input.touch.TouchEvent: float getY()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean unregisterEntityModifiers(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher)>",
            "<org.anddev.andengine.entity.particle.emitter.CircleParticleEmitter: void <init>(float,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: android.util.SparseArray getTMXTileProperties()>",
            "<org.anddev.andengine.util.MathUtils: void arraySumInternal(long[])>",
            "<org.anddev.andengine.util.sort.InsertionSorter: void <init>()>",
            "<com.game.myjewelsec.GameActivity: void access$27(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.entity.shape.RectangularShape: boolean isCulled(org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.scene.Scene: void <init>(int)>",
            "<org.anddev.andengine.entity.sprite.BaseSprite: void <init>(float,float,float,float,org.anddev.andengine.opengl.texture.region.BaseTextureRegion,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<org.anddev.andengine.opengl.vertex.VertexBuffer: void <init>(int,int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void <init>(org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap,org.xml.sax.Attributes)>",
            "<org.anddev.andengine.util.StreamUtils: void <init>()>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: void setAccelerationY(float)>",
            "<org.anddev.andengine.entity.util.AverageFPSCounter: void onUpdate(float)>",
            "<com.game.myjewelsec.OptionActivity$Bar: org.anddev.andengine.entity.sprite.Sprite access$4(com.game.myjewelsec.OptionActivity$Bar)>",
            "<org.anddev.andengine.util.path.astar.ManhattanHeuristic: void <init>()>",
            "<com.game.myjewelsec.GameServer.GameServer: boolean changePosition(int,int)>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void addParticleModifier(org.anddev.andengine.entity.particle.modifier.IParticleModifier)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: void <init>(org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.Body,float)>",
            "<org.anddev.andengine.util.TimeUtils: void <init>()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection: org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection valueOf(java.lang.String)>",
            "<org.anddev.andengine.entity.scene.Scene: void setBackground(org.anddev.andengine.entity.scene.background.IBackground)>",
            "<org.anddev.andengine.util.modifier.BaseModifier: void <init>(org.anddev.andengine.util.modifier.BaseModifier)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getBaseWidth()>",
            "<org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter: float getRadiusX()>",
            "<com.game.myjewelsec.MapActivity: void initMap()>",
            "<org.anddev.andengine.util.modifier.ModifierList: java.lang.Object getTarget()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions clone()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuintOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.opengl.font.Size: void setWidth(float)>",
            "<org.anddev.andengine.entity.scene.menu.item.SpriteMenuItem: void onSelected()>",
            "<org.anddev.andengine.util.Base64$Encoder: boolean process(byte[],int,int,boolean)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void addMenuItem(org.anddev.andengine.entity.scene.menu.item.IMenuItem)>",
            "<com.game.myjewelsec.GameServer.ParticleSystemCrashPool: org.anddev.andengine.entity.particle.ParticleSystem obtainPoolItem()>",
            "<com.game.myjewelsec.GameServer.ParticleSystemCrashPool: void recyclePoolItem(org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<org.anddev.andengine.engine.Engine: void unregisterUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler)>",
            "<org.anddev.andengine.opengl.texture.source.FileTextureSource: int getHeight()>",
            "<org.anddev.andengine.opengl.font.FontManager: void clear()>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: void stopAnimation(int)>",
            "<org.anddev.andengine.engine.Engine: void onPause()>",
            "<org.anddev.andengine.entity.particle.initializer.ColorInitializer: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float,float)>",
            "<org.anddev.andengine.entity.scene.Scene: void clearTouchAreas()>",
            "<org.anddev.andengine.audio.music.Music: org.anddev.andengine.audio.music.MusicManager getAudioManager()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.ArcTextureSourceDecoratorShape: void <init>(float,float,boolean)>",
            "<org.anddev.andengine.opengl.texture.source.AssetTextureSource: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler$2: java.lang.Object onAllocatePoolItem()>",
            "<org.anddev.andengine.entity.Entity: float getRed()>",
            "<org.anddev.andengine.entity.Entity: boolean unregisterUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler)>",
            "<org.anddev.andengine.util.ActivityUtils$1$1: void <init>(org.anddev.andengine.util.ActivityUtils$1,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter: void setCenterX(float)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.QuickHull: int indexOfFurthestVertex(org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line,int,int)>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$44()>",
            "<org.anddev.andengine.opengl.vertex.TextVertexBuffer: void update(org.anddev.andengine.opengl.font.Font,int,int[],java.lang.String[])>",
            "<org.anddev.andengine.audio.sound.SoundFactory: void <init>()>",
            "<org.anddev.andengine.util.MultiKey: int hashCode()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: int getTileRows()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$2: void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object)>",
            "<org.anddev.andengine.extension.physics.box2d.util.Vector2Pool$1: void <init>()>",
            "<com.game.myjewelsec.LevelSeleActivity: void access$8(com.game.myjewelsec.LevelSeleActivity,int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: boolean getAutoClearForces()>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: void onSetValue(org.anddev.andengine.entity.IEntity,float,float)>",
            "<org.anddev.andengine.entity.scene.popup.TextPopupScene: void <init>(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.opengl.font.Font,java.lang.String,float,org.anddev.andengine.entity.modifier.IEntityModifier,java.lang.Runnable)>",
            "<org.anddev.andengine.util.modifier.ease.EaseStrongIn: float getPercentageDone(float,float,float,float)>",
            "<com.game.myjewelsec.GameServer.GameServer: boolean freeStone(int,int)>",
            "<org.anddev.andengine.util.SAXUtils: void appendAttribute(java.lang.StringBuilder,java.lang.String,int)>",
            "<com.game.myjewelsec.OptionActivity$Bar: void access$6(com.game.myjewelsec.OptionActivity$Bar,float)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: void onManagedUpdate(float)>",
            "<com.game.myjewelsec.MainActivity: void onLoadResources()>",
            "<org.anddev.andengine.util.pool.MultiPool: void registerPool(int,org.anddev.andengine.util.pool.GenericPool)>",
            "<org.anddev.andengine.audio.sound.Sound: void setLooping(boolean)>",
            "<org.anddev.andengine.opengl.texture.source.ResourceTextureSource: int getHeight()>",
            "<com.game.myjewelsec.LevelSeleActivity: float access$2(com.game.myjewelsec.LevelSeleActivity)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,org.anddev.andengine.entity.scene.Scene$ITouchArea,float,float)>",
            "<com.game.myjewelsec.GameServer.LevelManage$LData: int getNumber()>",
            "<org.anddev.andengine.engine.options.TouchOptions: void <init>()>",
            "<org.anddev.andengine.level.LevelLoader: void loadLevelFromStream(java.io.InputStream)>",
            "<org.anddev.andengine.entity.scene.Scene: boolean hasOnAreaTouchListener()>",
            "<org.anddev.andengine.entity.particle.modifier.AlphaModifier: void onSetValue(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.entity.modifier.EntityModifier: void <init>(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: java.util.ArrayList getTMXLayers()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createBoxBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float)>",
            "<org.anddev.andengine.util.pool.GenericPool: void shufflePoolItems()>",
            "<org.anddev.andengine.entity.primitive.Line: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.entity.modifier.RotationModifier: org.anddev.andengine.entity.modifier.RotationModifier clone()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: org.anddev.andengine.opengl.texture.region.TextureRegion getTextureRegionFromGlobalTileID(int)>",
            "<org.anddev.andengine.util.ActivityUtils: void doAsync(android.content.Context,int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback,boolean)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: boolean getAntiAliasing()>",
            "<org.anddev.andengine.collision.BaseCollisionChecker: boolean checkAxisAlignedRectangleCollision(float,float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl: void onUpdateControlKnob(float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: void setTextureRegion(org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int[],int,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener)>",
            "<org.anddev.andengine.entity.particle.initializer.ColorInitializer: void <init>(float,float,float)>",
            "<org.anddev.andengine.util.SmartList: boolean removeAll(org.anddev.andengine.util.IMatcher,org.anddev.andengine.util.ParameterCallable)>",
            "<org.anddev.andengine.audio.music.MusicFactory: org.anddev.andengine.audio.music.Music createMusicFromResource(org.anddev.andengine.audio.music.MusicManager,android.content.Context,int)>",
            "<org.anddev.andengine.opengl.texture.Texture: void deleteTextureOnHardware(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.opengl.view.LogWriter: void close()>",
            "<org.anddev.andengine.util.MathUtils: int random(int,int)>",
            "<com.game.myjewelsec.GameActivity: void access$25(com.game.myjewelsec.GameActivity,int)>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: void updateOrientation()>",
            "<com.game.myjewelsec.GameServer.GameServer: void addScore(int)>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>",
            "<org.anddev.andengine.opengl.texture.source.ExternalStorageFileTextureSource: void <init>(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation: java.lang.String toString()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void onUpdate(float)>",
            "<org.anddev.andengine.entity.Entity: void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.util.MathUtils: float random(float,float)>",
            "<org.anddev.andengine.engine.Engine: void yieldDraw()>",
            "<com.game.myjewelsec.LevelSeleActivity: void onLoadComplete()>",
            "<com.game.myjewelsec.GameActivity: void treatDeadstone()>",
            "<org.anddev.andengine.util.modifier.LoopModifier: float getDuration()>",
            "<org.anddev.andengine.entity.scene.menu.item.SpriteMenuItem: int getID()>",
            "<org.anddev.andengine.entity.particle.Particle: boolean isDead()>",
            "<org.anddev.andengine.entity.shape.RectangularShape: void setSize(float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXLoadException: void <init>(java.lang.Throwable)>",
            "<org.anddev.andengine.engine.options.EngineOptions: int getUpdateThreadPriority()>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: void setAccelerometerValues(float[])>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection: void <clinit>()>",
            "<org.anddev.andengine.util.SystemUtils: int getMemoryTotal()>",
            "<org.anddev.andengine.util.modifier.ease.EaseCircularInOut: void <init>()>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.BaseResolutionPolicy: void <init>()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void surfaceDestroyed()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean isScaled()>",
            "<org.anddev.andengine.entity.modifier.EntityModifierList: void <init>(org.anddev.andengine.entity.IEntity,int)>",
            "<org.anddev.andengine.ui.activity.BaseActivity: void doAsync(int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.engine.camera.Camera: float getNearZClippingPlane()>",
            "<org.anddev.andengine.entity.shape.RectangularShape: float getWidth()>",
            "<org.anddev.andengine.util.pool.EntityDetachRunnablePoolUpdateHandler: void <init>()>",
            "<org.anddev.andengine.engine.options.EngineOptions: org.anddev.andengine.engine.options.TouchOptions getTouchOptions()>",
            "<com.game.myjewelsec.GameActivity$15: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<com.game.myjewelsec.MapActivity: void access$2(com.game.myjewelsec.MapActivity,boolean)>",
            "<org.anddev.andengine.entity.layer.ZIndexSorter: void sort(org.anddev.andengine.entity.IEntity[])>",
            "<com.game.myjewelsec.OptionActivity: int getRenderSurfaceViewID()>",
            "<com.game.myjewelsec.GameServer.GameServer: void resetGamecount()>",
            "<com.game.myjewelsec.GameServer.GameServer: boolean inDeadList(int,int)>",
            "<org.anddev.andengine.util.SystemUtils: java.lang.String getPackageVersionName(android.content.Context)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: float getVelocityY()>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler$3: org.anddev.andengine.util.pool.PoolItem onAllocatePoolItem()>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: org.anddev.andengine.opengl.texture.Texture getTexture()>",
            "<org.anddev.andengine.util.StringUtils: void <init>()>",
            "<org.anddev.andengine.entity.layer.ZIndexSorter$1: int compare(org.anddev.andengine.entity.IEntity,org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.util.cache.RectangleVertexBufferCache: void <init>(int)>",
            "<org.anddev.andengine.util.SAXUtils: boolean getBooleanAttributeOrThrow(org.xml.sax.Attributes,java.lang.String)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void reset()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getY()>",
            "<org.anddev.andengine.entity.util.ScreenGrabber: void reset()>",
            "<org.anddev.andengine.util.Transformation: org.anddev.andengine.util.Transformation setToRotate(float)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void registerPhysicsConnector(org.anddev.andengine.extension.physics.box2d.PhysicsConnector)>",
            "<org.anddev.andengine.opengl.view.LogWriter: void flushBuilder()>",
            "<com.game.myjewelsec.GameActivity$5: void <init>(com.game.myjewelsec.GameActivity,org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<org.anddev.andengine.util.path.astar.NullHeuristic: float getExpectedRestCost(org.anddev.andengine.util.path.ITiledMap,java.lang.Object,int,int,int,int)>",
            "<org.anddev.andengine.collision.LineCollisionChecker: void <init>()>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: void setAccuracy(int)>",
            "<org.anddev.andengine.entity.Entity: void applyTranslation(javax.microedition.khronos.opengles.GL10)>",
            "<com.game.myjewelsec.GameServer.GameServer: void removeHashStone()>",
            "<org.anddev.andengine.engine.camera.Camera: void onUpdate(float)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableTextures(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.SAXUtils: void appendAttribute(java.lang.StringBuilder,java.lang.String,float)>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.opengl.texture.TextureManager getTextureManager()>",
            "<org.anddev.andengine.entity.util.FPSLogger: void onLogFPS()>",
            "<org.anddev.andengine.entity.shape.RectangularShape: void <init>(float,float,float,float,org.anddev.andengine.opengl.vertex.VertexBuffer)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TextureRegion createFromAsset(org.anddev.andengine.opengl.texture.Texture,android.content.Context,java.lang.String,int,int)>",
            "<org.anddev.andengine.entity.Entity: org.anddev.andengine.entity.IEntity findChild(org.anddev.andengine.entity.IEntity$IEntityMatcher)>",
            "<org.anddev.andengine.collision.LineCollisionChecker: boolean checkLineCollision(float,float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: void <init>(org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory$2: void onCallback(java.lang.Object)>",
            "<org.anddev.andengine.entity.scene.background.ParallaxBackground: void setParallaxValue(float)>",
            "<com.game.myjewelsec.GameActivity$3: void <init>(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.util.ActivityUtils: void doAsync(android.content.Context,int,int,java.util.concurrent.Callable,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator clone()>",
            "<org.anddev.andengine.util.MathUtils: float[] revertScaleAroundCenter(float[],float,float,float,float)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: int access$2(com.game.myjewelsec.GameServer.MyParticleSystem)>",
            "<org.anddev.andengine.entity.util.ScreenGrabber: void grab(int,int,org.anddev.andengine.entity.util.ScreenGrabber$IScreenGrabberCallback)>",
            "<org.anddev.andengine.audio.BaseAudioEntity: float getVolume()>",
            "<org.anddev.andengine.entity.shape.RectangularShape: void setHeight(float)>",
            "<org.anddev.andengine.util.modifier.BaseModifier: void setRemoveWhenFinished(boolean)>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.entity.text.ChangeableText access$1(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: org.anddev.andengine.opengl.texture.Texture getTexture()>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void <init>()>",
            "<com.game.myjewelsec.GameServer.myAppData$SysConfig: long getMusic()>",
            "<org.anddev.andengine.engine.Engine: void disableLocationSensor(android.content.Context)>",
            "<org.anddev.andengine.input.touch.TouchEvent: void recycle()>",
            "<org.anddev.andengine.extension.physics.box2d.util.Vector2Pool: com.badlogic.gdx.math.Vector2 obtain(com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.entity.shape.RectangularShape: void setWidth(float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setColor(float,float,float,float)>",
            "<org.anddev.andengine.input.touch.controller.BaseTouchController$1: org.anddev.andengine.input.touch.controller.BaseTouchController$TouchEventRunnablePoolItem onAllocatePoolItem()>",
            "<org.anddev.andengine.util.MathUtils: int randomSign()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuartIn: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.engine.camera.hud.HUD: void <init>(int)>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: void setValues(float[])>",
            "<org.anddev.andengine.util.modifier.ease.EaseExponentialInOut: void <init>()>",
            "<org.anddev.andengine.entity.scene.Scene: org.anddev.andengine.entity.scene.background.IBackground getBackground()>",
            "<org.anddev.andengine.util.SimplePreferences: int incrementAccessCount(android.content.Context,java.lang.String,int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseBackIn: org.anddev.andengine.util.modifier.ease.EaseBackIn getInstance()>",
            "<org.anddev.andengine.util.ActivityUtils$1: void <init>(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void setVelocity(float)>",
            "<org.anddev.andengine.engine.options.EngineOptions: org.anddev.andengine.engine.options.EngineOptions setNeedsMusic(boolean)>",
            "<org.anddev.andengine.opengl.texture.Texture: void <clinit>()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsetRight(float)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer onCreateTextureRegionBuffer()>",
            "<org.anddev.andengine.entity.primitive.Line: float getBaseWidth()>",
            "<org.anddev.andengine.audio.sound.Sound: void stop()>",
            "<com.game.myjewelsec.GameActivity: void <clinit>()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: int getSize()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void queueEvent(java.lang.Runnable)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: org.anddev.andengine.entity.scene.Scene getScene()>",
            "<org.anddev.andengine.util.modifier.LoopModifier: void onUpdate(float,java.lang.Object)>",
            "<org.anddev.andengine.entity.modifier.DurationShapeModifier: void <init>(float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ParallelBackgroundModifier: org.anddev.andengine.util.modifier.ParallelModifier clone()>",
            "<org.anddev.andengine.util.levelstats.LevelStatsDBConnector: java.lang.String access$0(org.anddev.andengine.util.levelstats.LevelStatsDBConnector)>",
            "<org.anddev.andengine.util.StreamUtils: void flushCloseStream(java.io.OutputStream)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$InnerOnGestureDetectorListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>",
            "<org.anddev.andengine.util.Base64InputStream: boolean markSupported()>",
            "<org.anddev.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem: int getID()>",
            "<org.anddev.andengine.util.MultiKey: java.lang.Object getKey(int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader: void <init>(android.content.Context,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.opengl.texture.TextureOptions)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXLoadException: void <init>()>",
            "<org.anddev.andengine.engine.handler.collision.CollisionHandler: void onUpdate(float)>",
            "<org.anddev.andengine.util.modifier.LoopModifier: org.anddev.andengine.util.modifier.LoopModifier$ILoopModifierListener getLoopModifierListener()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer: org.anddev.andengine.opengl.texture.region.TextureRegion getTextureRegion()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.ArcTextureSourceDecoratorShape: void <init>()>",
            "<org.anddev.andengine.util.modifier.BaseDoubleValueSpanModifier: void <init>(float,float,float,float,float)>",
            "<org.anddev.andengine.util.modifier.LoopModifier$InternalModifierListener: void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object)>",
            "<org.anddev.andengine.util.modifier.ParallelModifier: void access$1(org.anddev.andengine.util.modifier.ParallelModifier,boolean)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.JarvisMarch: int indexOfRightmostVertexOf(com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.util.Base64InputStream: int available()>",
            "<org.anddev.andengine.engine.camera.CameraFactory: org.anddev.andengine.engine.camera.Camera createPixelPerfectCamera(android.app.Activity,float,float)>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerData: java.lang.String toString()>",
            "<org.anddev.andengine.util.levelstats.LevelStatsDBConnector: void submitAsync(int,boolean,int,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator clone()>",
            "<org.anddev.andengine.ui.dialog.StringInputDialogBuilder: void <init>(android.content.Context,int,int,int,int,java.lang.String,org.anddev.andengine.util.Callback,android.content.DialogInterface$OnCancelListener)>",
            "<com.game.myjewelsec.GameServer.myAppData$ToolConfig: void <init>(com.game.myjewelsec.GameServer.myAppData,int,int,int,int)>",
            "<com.game.myjewelsec.OptionActivity: void <init>()>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void onCreate(android.os.Bundle)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void setContinuousPhysics(boolean)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: float getMaxVelocityY()>",
            "<com.game.myjewelsec.GameActivity: void access$11(com.game.myjewelsec.GameActivity,int)>",
            "<com.game.myjewelsec.OptionActivity$Button: boolean getVolume()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.ColorKeyTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.entity.modifier.FadeInModifier: void <init>(float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener)>",
            "<org.anddev.andengine.audio.sound.Sound: void setRate(float)>",
            "<com.game.myjewelsec.GameServer.mySprite: void setID(int)>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: void setMagneticFieldValues(float[])>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler: void <init>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXProperty: java.lang.String getValue()>",
            "<org.anddev.andengine.opengl.texture.source.ResourceTextureSource: java.lang.String toString()>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: float getDuration()>",
            "<com.game.myjewelsec.GameServer.GameServer: void addDeadstone(int,int)>",
            "<org.anddev.andengine.util.path.Path: void prepend(int,int)>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.particle.modifier.ScaleModifier: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void setShadeModelFlat(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.opengl.texture.Texture: void checkTextureSourcePosition(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int)>",
            "<com.game.myjewelsec.OptionActivity: void setConfig()>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback clone()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void applyToChildren(org.anddev.andengine.entity.IEntity$IEntityMatcher,org.anddev.andengine.entity.IEntity$IEntityCallable)>",
            "<org.anddev.andengine.opengl.font.Font: void prepareLettes(char[])>",
            "<com.game.myjewelsec.MapActivity: void onPause()>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void buildAnimations()>",
            "<com.game.myjewelsec.GameServer.mySprite: int getID()>",
            "<org.anddev.andengine.util.Transformation: org.anddev.andengine.util.Transformation setToScale(float,float)>",
            "<org.anddev.andengine.entity.particle.modifier.ExpireModifier: void <init>(float)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: void onSetInitialValue(org.anddev.andengine.entity.IEntity,float)>",
            "<com.game.myjewelsec.GameActivity: void access$5(com.game.myjewelsec.GameActivity,org.anddev.andengine.entity.sprite.Sprite,int)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter: float getCenterX()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void <clinit>()>",
            "<org.anddev.andengine.sensor.accelerometer.AccelerometerData: void setY(float)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegion: org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer getTextureBuffer()>",
            "<com.game.myjewelsec.MainActivity: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<com.games.AdReciver: void <init>()>",
            "<com.game.myjewelsec.GameActivity: void addTextbox(float,float)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: float getMaxAccelerationY()>",
            "<org.anddev.andengine.util.Debug: void setDebugLevel(org.anddev.andengine.util.Debug$DebugLevel)>",
            "<org.anddev.andengine.entity.modifier.SequenceEntityModifier: void <init>(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.entity.modifier.SequenceEntityModifier$ISubSequenceShapeModifierListener,org.anddev.andengine.entity.modifier.IEntityModifier[])>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: boolean enableOrientationSensor(org.anddev.andengine.sensor.orientation.IOrientationListener,org.anddev.andengine.sensor.orientation.OrientationSensorOptions)>",
            "<org.anddev.andengine.audio.music.Music: void release()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void <clinit>()>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl: boolean onHandleControlBaseTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseCircularInOut: org.anddev.andengine.util.modifier.ease.EaseCircularInOut getInstance()>",
            "<org.anddev.andengine.input.touch.TouchEvent: void offset(float,float)>",
            "<org.anddev.andengine.entity.Entity: float getAlpha()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void onApplyVertices(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler$1: void <init>(org.anddev.andengine.util.pool.PoolUpdateHandler)>",
            "<org.anddev.andengine.input.touch.TouchEvent: boolean isActionMove()>",
            "<org.anddev.andengine.engine.options.WakeLockOptions: void <clinit>()>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node: org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder$Node getChildA()>",
            "<org.anddev.andengine.opengl.font.Font: org.anddev.andengine.opengl.texture.Texture getTexture()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: org.anddev.andengine.extension.physics.box2d.PhysicsConnectorManager getPhysicsConnectorManager()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseShapeTextureSourceDecorator: void onDecorateBitmap(android.graphics.Canvas)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuadOut: void <init>()>",
            "<org.anddev.andengine.engine.Engine: boolean onTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: void <init>(org.anddev.andengine.entity.modifier.ColorModifier)>",
            "<org.anddev.andengine.util.modifier.ease.EaseBackOut: org.anddev.andengine.util.modifier.ease.EaseBackOut getInstance()>",
            "<org.anddev.andengine.entity.scene.menu.animator.DirectMenuAnimator: void <init>()>",
            "<org.anddev.andengine.entity.Entity: void reset()>",
            "<org.anddev.andengine.util.modifier.ease.EaseElasticInOut: org.anddev.andengine.util.modifier.ease.EaseElasticInOut getInstance()>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: int getCurrentTileRow()>",
            "<com.game.myjewelsec.GameServer.GameServer: int getScore()>",
            "<org.anddev.andengine.util.MultiKey: java.lang.Object[] getKeys()>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void reset()>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: float access$1(org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl)>",
            "<com.game.myjewelsec.MapActivity: void onLoadComplete()>",
            "<org.anddev.andengine.util.Debug: void <init>()>",
            "<org.anddev.andengine.engine.options.EngineOptions: org.anddev.andengine.engine.options.WakeLockOptions getWakeLockOptions()>",
            "<org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource: android.graphics.Bitmap onLoadBitmap()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: int getDebugFlags()>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$4: void <init>(com.game.myjewelsec.GameServer.MyParticleSystem,org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<org.anddev.andengine.audio.BaseAudioEntity: org.anddev.andengine.audio.IAudioManager getAudioManager()>",
            "<com.game.myjewelsec.GameServer.mySprite: int getSpec()>",
            "<org.anddev.andengine.sensor.location.LocationSensorOptions: void <init>(int,boolean,boolean,boolean,int,boolean,boolean,long,long)>",
            "<org.anddev.andengine.opengl.texture.source.AssetTextureSource: org.anddev.andengine.opengl.texture.source.AssetTextureSource clone()>",
            "<org.anddev.andengine.entity.scene.Scene: boolean hasOnSceneTouchListener()>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion()>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.FixedResolutionPolicy: void onMeasure(org.anddev.andengine.opengl.view.RenderSurfaceView,int,int)>",
            "<com.game.myjewelsec.GameActivity: void addExplodeObject(float,float)>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory: org.anddev.andengine.opengl.texture.region.TiledTextureRegion createTiledFromAsset(org.anddev.andengine.opengl.texture.BuildableTexture,android.content.Context,java.lang.String,int,int)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void setRotation(float)>",
            "<com.game.myjewelsec.MapActivity: void onLoadResources()>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: void setColorEnabled(boolean)>",
            "<org.anddev.andengine.util.DialogUtils: void keepScreenOn(android.app.Dialog)>",
            "<org.anddev.andengine.entity.util.FrameCounter: int getFrames()>",
            "<org.anddev.andengine.util.MathUtils: float bringToBounds(float,float,float)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: void <init>(float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: int getTexturePositionX()>",
            "<org.anddev.andengine.entity.scene.Scene: void setChildSceneModal(org.anddev.andengine.entity.scene.Scene)>",
            "<org.anddev.andengine.engine.Engine: void convertSurfaceToSceneTouchEvent(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.pool.MultiPool: java.lang.Object obtainPoolItem(int)>",
            "<org.anddev.andengine.engine.Engine: void onLoadComplete(org.anddev.andengine.entity.scene.Scene)>",
            "<org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$TextureStateAdapter: void onUnloadedFromHardware(org.anddev.andengine.opengl.texture.Texture)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator: void onMenuItemUnselected(org.anddev.andengine.entity.scene.menu.item.IMenuItem)>",
            "<org.anddev.andengine.entity.modifier.SingleValueSpanShapeModifier: void <init>(float,float,float)>",
            "<com.game.myjewelsec.ShakeCamera: void shake(float,float)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: void initTextureBuffer()>",
            "<org.anddev.andengine.entity.Entity: void setInitialPosition()>",
            "<org.anddev.andengine.engine.handler.UpdateHandlerList: void onUpdate(float)>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: void onUpdate(float,org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void disableBlend(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.audio.music.Music: void setLooping(boolean)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void <init>(org.anddev.andengine.opengl.view.GLSurfaceView,org.anddev.andengine.opengl.view.GLSurfaceView$Renderer)>",
            "<org.anddev.andengine.entity.shape.RectangularShape: org.anddev.andengine.opengl.vertex.VertexBuffer getVertexBuffer()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: org.anddev.andengine.entity.IEntity findChild(org.anddev.andengine.entity.IEntity$IEntityMatcher)>",
            "<org.anddev.andengine.engine.camera.Camera: void <clinit>()>",
            "<org.anddev.andengine.entity.util.ScreenGrabber: void <init>()>",
            "<org.anddev.andengine.entity.Entity: boolean detachSelf()>",
            "<org.anddev.andengine.opengl.texture.TextureFactory: org.anddev.andengine.opengl.texture.Texture createForTextureRegionSize(org.anddev.andengine.opengl.texture.region.TextureRegion,org.anddev.andengine.opengl.texture.TextureOptions)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: void initTextureBuffer()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMapProperty: void <init>(org.xml.sax.Attributes)>",
            "<org.anddev.andengine.input.touch.controller.SingleTouchControler: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setCullingEnabled(boolean)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuartInOut: org.anddev.andengine.util.modifier.ease.EaseQuartInOut getInstance()>",
            "<org.anddev.andengine.input.touch.TouchEvent: void set(float,float,int,int,android.view.MotionEvent)>",
            "<com.game.myjewelsec.GameServer.LevelManage$LData: void access$0(com.game.myjewelsec.GameServer.LevelManage$LData,int)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.ColorModifier)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void <clinit>()>",
            "<org.anddev.andengine.util.path.Path$Step: boolean equals(java.lang.Object)>",
            "<org.anddev.andengine.entity.Entity: org.anddev.andengine.util.Transformation getSceneToLocalTransformation()>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: boolean enableAccelerometerSensor(org.anddev.andengine.sensor.accelerometer.IAccelerometerListener,org.anddev.andengine.sensor.accelerometer.AccelerometerSensorOptions)>",
            "<org.anddev.andengine.entity.particle.modifier.RotationModifier: void onSetValue(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.entity.particle.modifier.BaseDoubleValueSpanModifier: void onSetValueInternal(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: void addTMXLayer(org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer)>",
            "<org.anddev.andengine.entity.particle.initializer.RotationInitializer: void setRotation(float)>",
            "<org.anddev.andengine.entity.modifier.FadeInModifier: org.anddev.andengine.entity.modifier.FadeInModifier clone()>",
            "<org.anddev.andengine.entity.Entity: org.anddev.andengine.entity.IEntity getParent()>",
            "<org.anddev.andengine.util.SAXUtils: void appendAttribute(java.lang.StringBuilder,java.lang.String,long)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void destroyBody(com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.util.ScreenCapture: void saveCapture(android.graphics.Bitmap,java.lang.String)>",
            "<com.game.myjewelsec.GameServer.ParticleSystemCrashPool: org.anddev.andengine.entity.particle.ParticleSystem obtainNinjaSprite(float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: boolean isCollinear(java.util.ArrayList,int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.FixtureDef createFixtureDef(float,float,float)>",
            "<org.anddev.andengine.util.SystemUtils$SystemUtilsException: void <init>(java.lang.Throwable)>",
            "<org.anddev.andengine.engine.options.EngineOptions: org.anddev.andengine.engine.options.RenderOptions getRenderOptions()>",
            "<com.game.myjewelsec.OptionActivity: org.anddev.andengine.entity.scene.Scene onLoadScene()>",
            "<org.anddev.andengine.util.MathUtils: float[] revertRotateAroundCenter(float[],float,float,float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.EllipseTextureSourceDecoratorShape: void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void setRenderer(org.anddev.andengine.opengl.view.GLSurfaceView$Renderer)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void guardedRun()>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void updateBufferObjects(javax.microedition.khronos.opengles.GL11)>",
            "<org.anddev.andengine.opengl.vertex.LineVertexBuffer: void <init>(int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: java.lang.Iterable getBodies()>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.util.path.astar.NullHeuristic: void <init>()>",
            "<org.anddev.andengine.opengl.texture.Texture: void sendPlaceholderBitmapToHardware(int,int)>",
            "<org.anddev.andengine.util.ActivityUtils: void <init>()>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: org.anddev.andengine.entity.particle.ParticleSystem ExplosionBuild()>",
            "<org.anddev.andengine.opengl.util.GLHelper: java.nio.Buffer convertARGBtoRGBABuffer(int[])>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: void updateLength()>",
            "<org.anddev.andengine.entity.Entity: void setVisible(boolean)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: void stop(org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<org.anddev.andengine.entity.modifier.RotationByModifier: void <init>(float,float)>",
            "<org.anddev.andengine.engine.camera.CameraFactory: void <init>()>",
            "<com.game.myjewelsec.GameActivity: void launchBomb(float,float,int,float)>",
            "<org.anddev.andengine.util.levelstats.LevelStatsDBConnector$1: void run()>",
            "<org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier: org.anddev.andengine.entity.scene.background.modifier.LoopBackgroundModifier clone()>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$IOnScreenControlListener getOnScreenControlListener()>",
            "<org.anddev.andengine.entity.modifier.PathModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.entity.modifier.DelayModifier: void onManagedInitialize(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.audio.sound.Sound: void <init>(org.anddev.andengine.audio.sound.SoundManager,int)>",
            "<com.game.myjewelsec.GameActivity: void LoadMessage()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void attachChild(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuadOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: void setCenterDirect(float,float)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: org.anddev.andengine.entity.scene.menu.MenuScene getChildScene()>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: float getMaxY()>",
            "<org.anddev.andengine.opengl.texture.TextureManager: boolean loadTexture(org.anddev.andengine.opengl.texture.Texture)>",
            "<com.game.myjewelsec.GameServer.GameServer: boolean doublecheck(int)>",
            "<org.anddev.andengine.entity.modifier.RotationByModifier: org.anddev.andengine.entity.modifier.RotationByModifier clone()>",
            "<org.anddev.andengine.util.StringUtils: java.lang.String padFront(java.lang.String,char,int)>",
            "<org.anddev.andengine.level.LevelLoader: void registerEntityLoader(java.lang.String[],org.anddev.andengine.level.LevelLoader$IEntityLoader)>",
            "<org.anddev.andengine.engine.camera.Camera: float getHeight()>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: int getAccelerometerAccuracy()>",
            "<org.anddev.andengine.entity.Entity: org.anddev.andengine.entity.IEntity getLastChild()>",
            "<org.anddev.andengine.audio.sound.Sound: void release()>",
            "<org.anddev.andengine.util.path.Path$Step: int getTileRow()>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: org.anddev.andengine.entity.sprite.Sprite getControlKnob()>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void <init>(float,float,float,float,float)>",
            "<com.game.myjewelsec.LevelSeleActivity: void access$12(com.game.myjewelsec.LevelSeleActivity,boolean)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void clearForces()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TSXParseException: void <init>(java.lang.String,java.lang.Exception)>",
            "<org.anddev.andengine.entity.primitive.Line: void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: void onSetInitialValue(org.anddev.andengine.entity.IEntity,float)>",
            "<org.anddev.andengine.entity.primitive.Line: float[] convertLocalToSceneCoordinates(float,float)>",
            "<org.anddev.andengine.util.SystemUtils$SystemUtilsException: void <init>()>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: org.anddev.andengine.entity.modifier.MoveYModifier clone()>",
            "<org.anddev.andengine.util.modifier.LoopModifier: void <init>(org.anddev.andengine.util.modifier.LoopModifier)>",
            "<org.anddev.andengine.entity.modifier.DelayModifier: void <init>(org.anddev.andengine.entity.modifier.DelayModifier)>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void <init>(float)>",
            "<org.anddev.andengine.entity.modifier.ParallelEntityModifier: org.anddev.andengine.entity.modifier.ParallelEntityModifier clone()>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: void <init>(float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<com.game.myjewelsec.GameServer.GameServer: boolean startchange(int,int)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: int getProxyCount()>",
            "<org.anddev.andengine.engine.camera.Camera: float getMaxX()>",
            "<com.game.myjewelsec.GameServer.GameServer: com.game.myjewelsec.GameServer.mySprite getHashStone(int)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void setProjectionIdentityMatrix(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: int getTileWidth()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void onResume()>",
            "<org.anddev.andengine.entity.particle.initializer.RotationInitializer: float getMinRotation()>",
            "<org.anddev.andengine.opengl.texture.source.ResourceTextureSource: void <init>(android.content.Context,int,int,int)>",
            "<org.anddev.andengine.entity.scene.Scene: org.anddev.andengine.entity.scene.Scene$IOnAreaTouchListener getOnAreaTouchListener()>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: int computeSpannedAreaSign(float,float,float,float,float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createLineBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.primitive.Line,com.badlogic.gdx.physics.box2d.FixtureDef,float)>",
            "<org.anddev.andengine.util.SimplePreferences: int incrementAccessCount(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.engine.camera.Camera: void convertSceneToCameraSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.sensor.location.LocationProviderStatus: org.anddev.andengine.sensor.location.LocationProviderStatus valueOf(java.lang.String)>",
            "<org.anddev.andengine.entity.particle.initializer.VelocityInitializer: float getMinVelocityY()>",
            "<org.anddev.andengine.entity.Entity: org.anddev.andengine.entity.IEntity detachChild(org.anddev.andengine.entity.IEntity$IEntityMatcher)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup: int getHeight()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: int getWidth()>",
            "<org.anddev.andengine.engine.camera.Camera: void applyRotation(javax.microedition.khronos.opengles.GL10,float,float,float)>",
            "<org.anddev.andengine.opengl.texture.TextureFactory: void <init>()>",
            "<org.anddev.andengine.util.pool.Pool: void <init>()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.ITextureSource clone()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void bindTexture(javax.microedition.khronos.opengles.GL10,int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseCubicIn: void <init>()>",
            "<com.game.myjewelsec.GameActivity: void savePreferences()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTilePropertiesByGlobalTileID(int)>",
            "<org.anddev.andengine.sensor.orientation.OrientationData: float getRoll()>",
            "<org.anddev.andengine.entity.Entity: void setRotationCenterY(float)>",
            "<org.anddev.andengine.input.touch.TouchEvent: float getX()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getRotationCenterY()>",
            "<org.anddev.andengine.entity.modifier.LoopEntityModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.entity.util.FPSLogger: void onHandleAverageDurationElapsed(float)>",
            "<com.game.myjewelsec.LevelSeleActivity: void addPage(int)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util: float getManhattanDistance(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.opengl.texture.source.AssetTextureSource: int getWidth()>",
            "<org.anddev.andengine.util.modifier.ease.EaseBackInOut: org.anddev.andengine.util.modifier.ease.EaseBackInOut getInstance()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void requestExitAndWait()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean detachChild(org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.entity.particle.Particle: void <init>(float,float,org.anddev.andengine.opengl.texture.region.TextureRegion,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<org.anddev.andengine.util.SAXUtils: short getShortAttributeOrThrow(org.xml.sax.Attributes,java.lang.String)>",
            "<org.anddev.andengine.util.ProbabilityGenerator: void add(float,java.lang.Object[])>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float[] convertSceneToLocalCoordinates(float,float)>",
            "<org.anddev.andengine.util.Debug$DebugLevel: org.anddev.andengine.util.Debug$DebugLevel[] values()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuartIn: void <init>()>",
            "<org.anddev.andengine.entity.modifier.DelayModifier: void onManagedUpdate(float,org.anddev.andengine.entity.IEntity)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener: void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object)>",
            "<org.anddev.andengine.entity.util.ScreenGrabber: void onManagedUpdate(float)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture$TextureSourceWithWithLocationCallback: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture: void <init>(int,int,org.anddev.andengine.opengl.texture.Texture$ITextureStateListener)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void reset()>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void <init>()>",
            "<org.anddev.andengine.util.modifier.ease.EaseExponentialInOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseBounceIn: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseElasticIn: org.anddev.andengine.util.modifier.ease.EaseElasticIn getInstance()>",
            "<org.anddev.andengine.audio.music.Music: void setVolume(float,float)>",
            "<com.game.myjewelsec.R$drawable: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.animator.SlideMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign)>",
            "<org.anddev.andengine.entity.particle.modifier.AlphaModifier: void <init>(float,float,float,float)>",
            "<com.game.myjewelsec.GameActivity: int access$14(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.util.path.astar.AStarPathFinder$Node: void <init>(int,int)>",
            "<com.game.myjewelsec.GameServer.GameServer: void changeAllposition()>",
            "<org.anddev.andengine.entity.text.TickerText: void <init>(float,float,org.anddev.andengine.opengl.font.Font,java.lang.String,org.anddev.andengine.util.HorizontalAlign,float)>",
            "<org.anddev.andengine.entity.Entity: void setIgnoreUpdate(boolean)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean unregisterEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.entity.Entity: void detachChildren()>",
            "<com.game.myjewelsec.GameActivity: boolean onKeyDown(int,android.view.KeyEvent)>",
            "<org.anddev.andengine.entity.primitive.Line: float getX2()>",
            "<org.anddev.andengine.entity.scene.Scene: org.anddev.andengine.entity.scene.Scene getChildScene()>",
            "<org.anddev.andengine.audio.BaseAudioEntity: float getActualLeftVolume()>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: int getHardwareBufferID()>",
            "<org.anddev.andengine.engine.camera.BoundCamera: void ensureInBounds()>",
            "<com.game.myjewelsec.GameActivity$4: void <init>(com.game.myjewelsec.GameActivity,org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl: void <init>(float,float,org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.opengl.texture.region.TextureRegion,org.anddev.andengine.opengl.texture.region.TextureRegion,float,long,org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl$IAnalogOnScreenControlListener)>",
            "<com.game.myjewelsec.MapActivity: org.anddev.andengine.entity.scene.Scene onLoadScene()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuintOut: void <init>()>",
            "<org.anddev.andengine.input.touch.detector.SurfaceScrollDetector: void <init>(org.anddev.andengine.input.touch.detector.ScrollDetector$IScrollDetectorListener)>",
            "<com.game.myjewelsec.LevelSeleActivity: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.util.MathUtils: float[] rotateAndScaleAroundCenter(float[],float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.IEaseFunction: void <clinit>()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.RoundedRectangleTextureSourceDecoratorShape: void onDecorateBitmap(android.graphics.Canvas,android.graphics.Paint,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<org.anddev.andengine.sensor.BaseSensorData: void <init>(int)>",
            "<org.anddev.andengine.entity.modifier.LoopEntityModifier: void <init>(org.anddev.andengine.entity.modifier.IEntityModifier)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: boolean contains(float,float)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void blendFunction(javax.microedition.khronos.opengles.GL10,int,int)>",
            "<com.game.myjewelsec.R$integer: void <init>()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void hackBrokenDevices()>",
            "<org.anddev.andengine.collision.BaseCollisionChecker: void <init>()>",
            "<org.anddev.andengine.entity.Entity: boolean unregisterEntityModifier(org.anddev.andengine.entity.modifier.IEntityModifier)>",
            "<org.anddev.andengine.entity.modifier.PathModifier: void <init>(float,org.anddev.andengine.entity.modifier.PathModifier$Path,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void onSelected()>",
            "<org.anddev.andengine.entity.particle.initializer.RotationInitializer: void <init>(float,float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getRotation()>",
            "<org.anddev.andengine.opengl.texture.Texture: void applyTextureOptions(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.modifier.MoveXModifier: void onSetInitialValue(java.lang.Object,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void onManagedUpdate(float)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: void setAccelerationX(float,float)>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: int remaining()>",
            "<org.anddev.andengine.engine.Engine: float getSecondsElapsedTotal()>",
            "<com.game.myjewelsec.OptionActivity$1: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.entity.util.AverageFPSCounter: void <init>()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.BaseTextureRegionBuffer: org.anddev.andengine.opengl.texture.region.BaseTextureRegion getTextureRegion()>",
            "<org.anddev.andengine.entity.particle.modifier.BaseSingleValueSpanModifier: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.util.modifier.ease.EaseLinear: void <init>()>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: void setTriggerHoldMinimumMilliseconds(long)>",
            "<org.anddev.andengine.engine.camera.Camera: void convertSurfaceToSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent,int,int)>",
            "<org.anddev.andengine.util.path.Direction: int getDeltaY()>",
            "<org.anddev.andengine.ui.activity.BaseActivity: void doProgressAsync(int,org.anddev.andengine.util.progress.ProgressCallable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.util.modifier.ease.EaseStrongInOut: void <init>()>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$41()>",
            "<org.anddev.andengine.entity.particle.initializer.RotationInitializer: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float)>",
            "<org.anddev.andengine.entity.scene.Scene: float getSecondsElapsedTotal()>",
            "<com.game.myjewelsec.GameServer.myAppData$SysConfig: void setVibra(boolean)>",
            "<com.game.myjewelsec.SelectActivity: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,org.anddev.andengine.entity.scene.Scene$ITouchArea,float,float)>",
            "<org.anddev.andengine.engine.options.resolutionpolicy.FillResolutionPolicy: void <init>()>",
            "<org.anddev.andengine.util.Transformation: void reset()>",
            "<org.anddev.andengine.engine.Engine: void setTouchController(org.anddev.andengine.input.touch.controller.ITouchController)>",
            "<org.anddev.andengine.util.pool.GenericPool: void <init>(int,int)>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier: void <init>(float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableScissorTest(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.engine.Engine: long getNanosecondsElapsed()>",
            "<org.anddev.andengine.entity.text.TickerText: float getCharactersPerSecond()>",
            "<org.anddev.andengine.entity.text.ChangeableText: void drawVertices(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void doPause()>",
            "<org.anddev.andengine.engine.options.WakeLockOptions: void <init>(java.lang.String,int,int)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: org.anddev.andengine.entity.scene.menu.MenuScene$IOnMenuItemClickListener getOnMenuItemClickListener()>",
            "<org.anddev.andengine.opengl.view.BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup: int getWidth()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuintInOut: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void onDetached()>",
            "<org.anddev.andengine.input.touch.detector.ScrollDetector: float getY(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.engine.camera.hud.controls.AnalogOnScreenControl: void setOnControlClickEnabled(boolean)>",
            "<org.anddev.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem: void <init>(int,org.anddev.andengine.opengl.texture.region.TiledTextureRegion)>",
            "<org.anddev.andengine.entity.Entity: boolean detachChild(org.anddev.andengine.entity.IEntity)>",
            "<com.game.myjewelsec.R$attr: void <init>()>",
            "<org.anddev.andengine.opengl.font.Size: float getHeight()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroup: void addTMXObjectGroupProperty(org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectGroupProperty)>",
            "<org.anddev.andengine.engine.handler.BaseEntityUpdateHandler: void onUpdate(float)>",
            "<com.game.myjewelsec.GameActivity: void exit()>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void onSetContentView()>",
            "<org.anddev.andengine.entity.scene.background.EntityBackground: void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.engine.handler.runnable.RunnableHandler: void <init>()>",
            "<org.anddev.andengine.entity.modifier.RotationByModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.util.modifier.LoopModifier: void <init>(org.anddev.andengine.util.modifier.IModifier$IModifierListener,int,org.anddev.andengine.util.modifier.LoopModifier$ILoopModifierListener,org.anddev.andengine.util.modifier.IModifier)>",
            "<com.game.myjewelsec.GameActivity: android.os.Handler access$48(com.game.myjewelsec.GameActivity)>",
            "<com.game.myjewelsec.LoadActivity: void onDestroy()>",
            "<com.game.myjewelsec.GameActivity: void onDestroy()>",
            "<org.anddev.andengine.entity.modifier.DelayModifier: void <init>(float)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: void setSecondScene(org.anddev.andengine.entity.scene.Scene)>",
            "<org.anddev.andengine.util.sort.Sorter: void <init>()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void QueryAABB(com.badlogic.gdx.physics.box2d.QueryCallback,float,float,float,float)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void onPause()>",
            "<org.anddev.andengine.opengl.buffer.BufferObject: void loadToHardware(javax.microedition.khronos.opengles.GL11)>",
            "<org.anddev.andengine.level.LevelLoader: void onBeforeLoadLevel()>",
            "<com.game.myjewelsec.MainActivity: int getRenderSurfaceViewID()>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line: void <init>(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)>",
            "<com.game.myjewelsec.MapActivity$1: void onTimePassed(org.anddev.andengine.engine.handler.timer.TimerHandler)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection: org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection valueOf(java.lang.String)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsConnector: void <init>(org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.Body,boolean,boolean,float)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator: android.graphics.Paint getPaint()>",
            "<org.anddev.andengine.engine.handler.timer.TimerHandler: void onUpdate(float)>",
            "<org.anddev.andengine.entity.modifier.SequenceEntityModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableCulling(javax.microedition.khronos.opengles.GL10)>",
            "<com.game.myjewelsec.GameActivity: boolean access$21(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.util.SystemUtils: float getCPUBogoMips()>",
            "<com.game.myjewelsec.LevelSeleActivity: int access$7(com.game.myjewelsec.LevelSeleActivity)>",
            "<org.anddev.andengine.entity.scene.background.ColorBackground: void <init>(float,float,float)>",
            "<org.anddev.andengine.entity.sprite.Sprite: void <init>(float,float,float,float,org.anddev.andengine.opengl.texture.region.TextureRegion,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem: void start(org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: void onSetValues(org.anddev.andengine.entity.scene.background.IBackground,float,float,float,float)>",
            "<org.anddev.andengine.util.ActivityUtils$3: void <init>(android.app.ProgressDialog,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void <init>(org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TSXLoader: void <init>(android.content.Context,org.anddev.andengine.opengl.texture.TextureManager,org.anddev.andengine.opengl.texture.TextureOptions)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TSXLoader: org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet loadFromAsset(android.content.Context,int,java.lang.String)>",
            "<com.game.myjewelsec.MainActivity: void onResumeGame()>",
            "<com.game.myjewelsec.MainActivity$2: void <init>(com.game.myjewelsec.MainActivity,float,float,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler$3: java.lang.Object onAllocatePoolItem()>",
            "<org.anddev.andengine.entity.scene.CameraScene: void <init>(int)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: boolean disableOrientationSensor()>",
            "<com.game.myjewelsec.MapActivity$1: void <init>(com.game.myjewelsec.MapActivity)>",
            "<org.anddev.andengine.opengl.texture.Texture: void setLoadedToHardware(boolean)>",
            "<org.anddev.andengine.collision.RectangularShapeCollisionChecker: boolean checkContains(org.anddev.andengine.entity.shape.RectangularShape,float,float)>",
            "<org.anddev.andengine.engine.camera.BoundCamera: boolean isBoundsEnabled()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void <init>(float,float,float,float,float)>",
            "<org.anddev.andengine.opengl.texture.region.BaseTextureRegion: int getWidth()>",
            "<org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource: java.lang.Object clone()>",
            "<org.anddev.andengine.util.Transformation: void preRotate(float)>",
            "<org.anddev.andengine.audio.music.Music: void <init>(org.anddev.andengine.audio.music.MusicManager,android.media.MediaPlayer)>",
            "<org.anddev.andengine.opengl.vertex.RectangleVertexBuffer: void <init>(int)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void detachChildren()>",
            "<org.anddev.andengine.opengl.font.Font: org.anddev.andengine.opengl.font.Letter getLetter(char)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: int getTileCount()>",
            "<org.anddev.andengine.input.touch.TouchEvent: void <clinit>()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.shape.ArcTextureSourceDecoratorShape: org.anddev.andengine.opengl.texture.source.decorator.shape.ArcTextureSourceDecoratorShape getDefaultInstance()>",
            "<org.anddev.andengine.engine.camera.Camera: float getCameraSceneRotation()>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: void nextTile()>",
            "<org.anddev.andengine.entity.Entity: void <init>(float,float)>",
            "<org.anddev.andengine.opengl.texture.source.ResourceTextureSource: java.lang.Object clone()>",
            "<com.game.myjewelsec.GameServer.GameServer: com.game.myjewelsec.GameServer.mySprite getRstone(int)>",
            "<com.game.myjewelsec.OptionActivity$Bar: float access$5(com.game.myjewelsec.OptionActivity$Bar)>",
            "<com.game.myjewelsec.MapActivity: int getRenderSurfaceViewID()>",
            "<org.anddev.andengine.entity.particle.emitter.CircleOutlineParticleEmitter: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util: float area2(com.badlogic.gdx.math.Vector2,org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Line)>",
            "<org.anddev.andengine.util.modifier.ease.EaseExponentialOut: org.anddev.andengine.util.modifier.ease.EaseExponentialOut getInstance()>",
            "<org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener: void <init>(org.anddev.andengine.util.modifier.SequenceModifier,org.anddev.andengine.util.modifier.SequenceModifier$InternalModifierListener)>",
            "<org.anddev.andengine.util.SystemUtils: int getMemoryFree()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getWidth()>",
            "<org.anddev.andengine.engine.Engine$UpdateThread: void run()>",
            "<org.anddev.andengine.engine.Engine: long calculateNanosecondsElapsed(long,long)>",
            "<org.anddev.andengine.entity.shape.Shape: float getWidthScaled()>",
            "<org.anddev.andengine.entity.modifier.PathModifier$Path: float[] getCoordinatesY()>",
            "<org.anddev.andengine.entity.Entity: void allocateEntityModifiers()>",
            "<com.game.myjewelsec.MainActivity: org.anddev.andengine.entity.scene.Scene onLoadScene()>",
            "<org.anddev.andengine.opengl.texture.Texture: int getWidth()>",
            "<org.anddev.andengine.entity.util.FPSCounter: void <init>()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: int getRenderMode()>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void onSetValues(org.anddev.andengine.entity.IEntity,float,float,float)>",
            "<com.game.myjewelsec.LevelSeleActivity: void onLoadResources()>",
            "<com.game.myjewelsec.OptionActivity$Button: void <init>(com.game.myjewelsec.OptionActivity,float,float,boolean,org.anddev.andengine.opengl.texture.region.TiledTextureRegion,java.lang.String)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener)>",
            "<com.game.myjewelsec.GameServer.ParticleSystemCrashPool: void recyclePoolItem(java.lang.Object)>",
            "<org.anddev.andengine.ui.dialog.StringInputDialogBuilder: java.lang.String generateResult(java.lang.String)>",
            "<org.anddev.andengine.engine.camera.Camera: float getWidth()>",
            "<com.game.myjewelsec.GameActivity: int access$28(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.JarvisMarch: int computeHull(com.badlogic.gdx.math.Vector2[])>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[],int,int,int)>",
            "<com.game.myjewelsec.OptionActivity: void buttonSound()>",
            "<org.anddev.andengine.opengl.texture.Texture: void <init>(int,int,org.anddev.andengine.opengl.texture.Texture$ITextureStateListener)>",
            "<org.anddev.andengine.util.SystemUtils: int getPackageVersionCode(android.content.Context)>",
            "<org.anddev.andengine.entity.particle.initializer.AlphaInitializer: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle,float)>",
            "<com.game.myjewelsec.ShakeCamera: void onUpdate(float)>",
            "<org.anddev.andengine.engine.Engine: void onProviderEnabled(java.lang.String)>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture: void clearTextureSources()>",
            "<org.anddev.andengine.entity.scene.CameraScene: void <init>(int,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int,int,org.anddev.andengine.opengl.texture.source.decorator.RadialGradientFillTextureSourceDecorator$RadialGradientDirection,org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions)>",
            "<com.game.myjewelsec.LoadActivity: void onLoadComplete()>",
            "<org.anddev.andengine.entity.layer.ZIndexSorter: org.anddev.andengine.entity.layer.ZIndexSorter getInstance()>",
            "<com.game.myjewelsec.SelectActivity: void StartGame(int)>",
            "<org.anddev.andengine.entity.util.AverageFPSCounter: void <init>(float)>",
            "<org.anddev.andengine.util.path.Path: boolean contains(int,int)>",
            "<org.anddev.andengine.ui.activity.BaseActivity: void doProgressAsync(int,org.anddev.andengine.util.progress.ProgressCallable,org.anddev.andengine.util.Callback)>",
            "<com.game.myjewelsec.GameActivity: com.game.myjewelsec.ObjectPool access$37()>",
            "<org.anddev.andengine.util.ArrayUtils: java.lang.Object random(java.lang.Object[])>",
            "<org.anddev.andengine.entity.Entity: void setParent(org.anddev.andengine.entity.IEntity)>",
            "<com.game.myjewelsec.MapActivity: int getLayoutID()>",
            "<org.anddev.andengine.entity.particle.initializer.BaseSingleValueInitializer: void <init>(float,float)>",
            "<org.anddev.andengine.util.SystemUtils: int getCPUFrequencyMinScaling()>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: org.anddev.andengine.entity.modifier.ColorModifier clone()>",
            "<org.anddev.andengine.util.pool.GenericPool: void <init>(int)>",
            "<org.anddev.andengine.opengl.font.Font: int getStringWidth(java.lang.String)>",
            "<org.anddev.andengine.entity.primitive.Rectangle: void <init>(float,float,float,float)>",
            "<com.game.myjewelsec.GameActivity: void CROSSBOMB(int,int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseElasticOut: void <init>()>",
            "<org.anddev.andengine.entity.particle.modifier.BaseTripleValueSpanModifier: void onSetInitialValues(org.anddev.andengine.entity.particle.Particle,float,float)>",
            "<org.anddev.andengine.opengl.texture.Texture: void <init>(int,int,org.anddev.andengine.opengl.texture.TextureOptions)>",
            "<org.anddev.andengine.entity.particle.emitter.BaseCircleParticleEmitter: void setRadiusY(float)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void setDebugFlags(int)>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions setInsetLeft(float)>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector$1: void <init>(org.anddev.andengine.input.touch.detector.HoldDetector)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: boolean isTriangleConvex(float,float,float,float,float,float)>",
            "<org.anddev.andengine.engine.camera.ZoomCamera: float getZoomFactor()>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: com.badlogic.gdx.physics.box2d.Joint createJoint(com.badlogic.gdx.physics.box2d.JointDef)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void queueEvent(java.lang.Runnable)>",
            "<org.anddev.andengine.engine.Engine: org.anddev.andengine.sensor.orientation.OrientationData getOrientationData()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionLibrary: org.anddev.andengine.opengl.texture.region.TiledTextureRegion getTiled(int)>",
            "<org.anddev.andengine.entity.Entity: float getY()>",
            "<com.game.myjewelsec.GameServer.LevelManage$LData: void <init>(com.game.myjewelsec.GameServer.LevelManage)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: int getGlobalTileID()>",
            "<com.game.myjewelsec.GameServer.ParticleSystemCrashPool: java.lang.Object onAllocatePoolItem()>",
            "<org.anddev.andengine.util.modifier.ease.EaseBackInOut: float getPercentageDone(float,float,float,float)>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.entity.sprite.Sprite access$4(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: org.anddev.andengine.audio.music.MusicManager getMusicManager()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void clearUpdateHandlers()>",
            "<org.anddev.andengine.engine.camera.Camera: void offsetCenter(float,float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.ScaleMenuItemDecorator: void onMenuItemSelected(org.anddev.andengine.entity.scene.menu.item.IMenuItem)>",
            "<com.games.b: java.lang.String a()>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.GrahamScan: void sort()>",
            "<org.anddev.andengine.util.pool.GenericPool: int getUnrecycledCount()>",
            "<org.anddev.andengine.util.MultiKey: java.lang.String toString()>",
            "<org.anddev.andengine.util.pool.EntityDetachRunnablePoolUpdateHandler: org.anddev.andengine.util.pool.EntityDetachRunnablePoolItem onAllocatePoolItem()>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: void <init>(org.anddev.andengine.entity.modifier.AlphaModifier)>",
            "<org.anddev.andengine.util.FileUtils: boolean ensureDirectoriesExistOnExternalStorage(android.content.Context,java.lang.String)>",
            "<org.anddev.andengine.entity.scene.Scene: boolean unregisterTouchAreas(org.anddev.andengine.entity.scene.Scene$ITouchArea$ITouchAreaMatcher)>",
            "<org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier: org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier clone()>",
            "<org.anddev.andengine.engine.Engine: boolean isMethodTracing()>",
            "<com.game.myjewelsec.GameServer.mySprite: float getYspeed()>",
            "<com.game.myjewelsec.LoadActivity: void onPause()>",
            "<com.game.myjewelsec.GameServer.mySprite: void setYspeed(float)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long[])>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: void <clinit>()>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$GLThread: void setRenderMode(int)>",
            "<org.anddev.andengine.entity.util.FPSLogger: void onUpdate(float)>",
            "<org.anddev.andengine.entity.scene.menu.item.SpriteMenuItem: void <init>(int,org.anddev.andengine.opengl.texture.region.TextureRegion)>",
            "<org.anddev.andengine.entity.scene.menu.MenuScene: void setMenuAnimator(org.anddev.andengine.entity.scene.menu.animator.IMenuAnimator)>",
            "<org.anddev.andengine.util.modifier.BaseTripleValueSpanModifier: void <init>(float,float,float,float,float,float,float,org.anddev.andengine.util.modifier.IModifier$IModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.progress.ProgressMonitor: void <init>(org.anddev.andengine.util.progress.ProgressMonitor)>",
            "<org.anddev.andengine.entity.particle.modifier.ScaleModifier: void onSetInitialValues(org.anddev.andengine.entity.particle.Particle,float,float)>",
            "<org.anddev.andengine.engine.camera.Camera: void onApplyMatrix(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.opengl.buffer.BufferObjectManager: void <clinit>()>",
            "<org.anddev.andengine.util.modifier.ModifierList: void <init>(java.lang.Object)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator: void onMenuItemReset(org.anddev.andengine.entity.scene.menu.item.IMenuItem)>",
            "<org.anddev.andengine.opengl.texture.builder.BlackPawnTextureBuilder: void pack(org.anddev.andengine.opengl.texture.BuildableTexture,java.util.ArrayList)>",
            "<org.anddev.andengine.opengl.font.FontManager: void loadFonts(org.anddev.andengine.opengl.font.FontLibrary)>",
            "<org.anddev.andengine.util.modifier.ease.EaseCubicInOut: org.anddev.andengine.util.modifier.ease.EaseCubicInOut getInstance()>",
            "<org.anddev.andengine.engine.handler.physics.PhysicsHandler: float getAccelerationY()>",
            "<com.game.myjewelsec.GameActivity$2: void <init>(com.game.myjewelsec.GameActivity)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: int getTileHeight()>",
            "<org.anddev.andengine.ui.dialog.GenericInputDialogBuilder$2: void <init>(org.anddev.andengine.ui.dialog.GenericInputDialogBuilder)>",
            "<com.game.myjewelsec.MapActivity: boolean onSceneTouchEvent(org.anddev.andengine.entity.scene.Scene,org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.shape.Shape: void doDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.entity.modifier.RotationAtModifier: void <init>(org.anddev.andengine.entity.modifier.RotationAtModifier)>",
            "<org.anddev.andengine.util.pool.MultiPool: void recyclePoolItem(int,java.lang.Object)>",
            "<org.anddev.andengine.engine.camera.Camera: float getCenterX()>",
            "<org.anddev.andengine.entity.sprite.TiledSprite: org.anddev.andengine.opengl.texture.region.TiledTextureRegion getTextureRegion()>",
            "<com.game.myjewelsec.GameServer.GameServer: void <clinit>()>",
            "<org.anddev.andengine.util.modifier.ModifierList: void onUpdate(float)>",
            "<org.anddev.andengine.entity.particle.modifier.RotationModifier: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier[])>",
            "<org.anddev.andengine.util.FileUtils: void copyToInternalStorage(android.content.Context,java.io.InputStream,java.lang.String)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setRotationCenter(float,float)>",
            "<org.anddev.andengine.input.touch.detector.BaseDetector: boolean isEnabled()>",
            "<org.anddev.andengine.entity.primitive.Line: float getBaseHeight()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.BaseTextureSourceDecorator$TextureSourceDecoratorOptions: java.lang.Object clone()>",
            "<org.anddev.andengine.opengl.texture.Texture$ITextureStateListener$TextureStateAdapter: void onLoadedToHardware(org.anddev.andengine.opengl.texture.Texture)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: void convertSurfaceToSceneTouchEvent(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.input.touch.TouchEvent)>",
            "<com.game.myjewelsec.LoadActivity: void onResumeGame()>",
            "<org.anddev.andengine.entity.shape.RectangularShape: float getHeight()>",
            "<org.anddev.andengine.util.path.Path: void <init>()>",
            "<org.anddev.andengine.engine.camera.Camera: void setHUD(org.anddev.andengine.engine.camera.hud.HUD)>",
            "<org.anddev.andengine.entity.scene.SplashScene: void <init>(org.anddev.andengine.engine.camera.Camera,org.anddev.andengine.opengl.texture.region.TextureRegion,float,float,float)>",
            "<com.game.myjewelsec.GameServer.myAppData$SysConfig: long getSound()>",
            "<org.anddev.andengine.util.modifier.ease.EaseStrongOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView$EglHelper: boolean swap()>",
            "<com.game.myjewelsec.GameServer.ScoreImg: void access$1(com.game.myjewelsec.GameServer.ScoreImg,int)>",
            "<org.anddev.andengine.entity.scene.menu.animator.AlphaMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: org.anddev.andengine.entity.IEntity getFirstChild()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TiledTextureRegionBuffer: org.anddev.andengine.opengl.texture.region.TiledTextureRegion getTextureRegion()>",
            "<org.anddev.andengine.engine.camera.hud.HUD: void <init>()>",
            "<org.anddev.andengine.opengl.texture.builder.ITextureBuilder$TextureSourcePackingException: void <init>()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: int getX()>",
            "<org.anddev.andengine.util.pool.GenericPool: void onHandleObtainItem(java.lang.Object)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$InnerOnGestureDetectorListener: boolean onDoubleTap(android.view.MotionEvent)>",
            "<org.anddev.andengine.entity.scene.background.modifier.SequenceBackgroundModifier: void <init>(org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier$IBackgroundModifierListener,org.anddev.andengine.entity.scene.background.modifier.IBackgroundModifier[])>",
            "<com.game.myjewelsec.GameActivity: int getRenderSurfaceViewID()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TextureRegionBuffer: float getY1()>",
            "<org.anddev.andengine.entity.modifier.ScaleModifier: void <init>(float,float,float,float,float,org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.opengl.texture.Texture: void allocateAndBindTextureOnHardware(javax.microedition.khronos.opengles.GL10)>",
            "<com.game.myjewelsec.GameServer.mySprite: float getXspeed()>",
            "<org.anddev.andengine.util.path.Path: int getToTileColumn()>",
            "<org.anddev.andengine.engine.Engine: void updateUpdateHandlers(float)>",
            "<org.anddev.andengine.util.path.Direction: void <init>(java.lang.String,int,int,int)>",
            "<org.anddev.andengine.opengl.texture.Texture: boolean isUpdateOnHardwareNeeded()>",
            "<com.game.myjewelsec.ObjectPool: java.lang.Object onAllocatePoolItem()>",
            "<org.anddev.andengine.util.modifier.ease.EaseStrongOut: org.anddev.andengine.util.modifier.ease.EaseStrongOut getInstance()>",
            "<org.anddev.andengine.engine.options.EngineOptions: org.anddev.andengine.engine.options.EngineOptions setWakeLockOptions(org.anddev.andengine.engine.options.WakeLockOptions)>",
            "<org.anddev.andengine.util.modifier.ease.EaseStrongIn: org.anddev.andengine.util.modifier.ease.EaseStrongIn getInstance()>",
            "<org.anddev.andengine.util.SystemUtils: boolean isAndroidVersionOrHigher(int)>",
            "<org.anddev.andengine.engine.camera.Camera: void convertAxisAlignedSurfaceToSceneTouchEvent(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void initializeTMXTileFromXML(org.xml.sax.Attributes,org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener)>",
            "<com.game.myjewelsec.GameActivity: void ShowLoseMessage()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator: org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator clone()>",
            "<org.anddev.andengine.util.ListUtils: java.util.ArrayList toList(java.lang.Object)>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: void <init>(float,float,float)>",
            "<org.anddev.andengine.entity.layer.Layer: void <init>(float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: int getTileX()>",
            "<org.anddev.andengine.entity.modifier.PathModifier: org.anddev.andengine.entity.modifier.PathModifier$Path getPath()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: float getAlpha()>",
            "<org.anddev.andengine.input.touch.detector.HoldDetector: void <init>(org.anddev.andengine.input.touch.detector.HoldDetector$IHoldDetectorListener)>",
            "<com.game.myjewelsec.GameActivity: void addExplodeObjectOneStone(float,float,float,float,float)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void requestRender()>",
            "<org.anddev.andengine.input.touch.detector.ClickDetector: void <init>(long,org.anddev.andengine.input.touch.detector.ClickDetector$IClickDetectorListener)>",
            "<org.anddev.andengine.entity.scene.background.ParallaxBackground: boolean detachParallaxEntity(org.anddev.andengine.entity.scene.background.ParallaxBackground$ParallaxEntity)>",
            "<com.game.myjewelsec.Shell: void setLifeTime(int)>",
            "<com.game.myjewelsec.LevelSeleActivity: void access$11(com.game.myjewelsec.LevelSeleActivity,float)>",
            "<org.anddev.andengine.engine.options.EngineOptions: org.anddev.andengine.engine.options.EngineOptions setNeedsSound(boolean)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void destroyJoint(com.badlogic.gdx.physics.box2d.Joint)>",
            "<org.anddev.andengine.util.pool.GenericPool: void batchAllocatePoolItems(int)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void disableLocationSensor()>",
            "<org.anddev.andengine.entity.scene.menu.animator.DirectMenuAnimator: void <init>(org.anddev.andengine.util.HorizontalAlign,float)>",
            "<org.anddev.andengine.entity.text.Text: int getCharacterCount()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setPosition(float,float)>",
            "<org.anddev.andengine.opengl.vertex.RectangleVertexBuffer: void update(float,float)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void <init>()>",
            "<org.anddev.andengine.entity.modifier.ColorModifier: void onSetInitialValues(java.lang.Object,float,float,float)>",
            "<org.anddev.andengine.entity.scene.background.SpriteBackground: void <init>(org.anddev.andengine.entity.sprite.BaseSprite)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: int getPositionIterations()>",
            "<com.game.myjewelsec.modifier.RandomColorInitializer: void onInitializeParticle(org.anddev.andengine.entity.particle.Particle)>",
            "<org.anddev.andengine.engine.Engine: void onProviderDisabled(java.lang.String)>",
            "<org.anddev.andengine.util.modifier.ParallelModifier$InternalModifierListener: void onModifierFinished(org.anddev.andengine.util.modifier.IModifier,java.lang.Object)>",
            "<org.anddev.andengine.entity.modifier.FadeOutModifier: org.anddev.andengine.entity.modifier.FadeOutModifier clone()>",
            "<com.game.myjewelsec.LevelSeleActivity: void access$5(com.game.myjewelsec.LevelSeleActivity,int)>",
            "<org.anddev.andengine.util.SystemUtils: int getCPUFrequencyMin()>",
            "<org.anddev.andengine.util.progress.ProgressMonitor: org.anddev.andengine.util.progress.ProgressMonitor getParentProgressMonitor()>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableDither(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayerProperty: void <init>(org.xml.sax.Attributes)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void setGravity(com.badlogic.gdx.math.Vector2)>",
            "<com.game.myjewelsec.GameActivity: void showScore(float,float,int)>",
            "<com.games.b: java.lang.String a(android.content.Context)>",
            "<org.anddev.andengine.opengl.texture.region.TiledTextureRegion: org.anddev.andengine.opengl.texture.region.buffer.TiledTextureRegionBuffer getTextureBuffer()>",
            "<org.anddev.andengine.util.modifier.ease.EaseBackIn: void <init>()>",
            "<org.anddev.andengine.opengl.font.FontFactory: void <init>()>",
            "<org.anddev.andengine.util.Transformation: void preConcat(org.anddev.andengine.util.Transformation)>",
            "<com.game.myjewelsec.LevelSeleActivity: void access$6(com.game.myjewelsec.LevelSeleActivity,int)>",
            "<org.anddev.andengine.entity.primitive.Rectangle: void <init>(float,float,float,float,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<org.anddev.andengine.sensor.location.LocationSensorOptions: boolean isEnabledOnly()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.FillTextureSourceDecorator: void <init>(org.anddev.andengine.opengl.texture.source.ITextureSource,org.anddev.andengine.opengl.texture.source.decorator.shape.ITextureSourceDecoratorShape,int)>",
            "<org.anddev.andengine.entity.modifier.ParallelEntityModifier: void <init>(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierListener,org.anddev.andengine.entity.modifier.IEntityModifier[])>",
            "<com.game.myjewelsec.OptionActivity: int getLayoutID()>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$1: void onUpdate(float)>",
            "<com.game.myjewelsec.MaxStepPhysicsWorld: void onUpdate(float)>",
            "<org.anddev.andengine.level.LevelLoader: void <init>(java.lang.String)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.ColorMenuItemDecorator: void onMenuItemUnselected(org.anddev.andengine.entity.scene.menu.item.IMenuItem)>",
            "<com.game.myjewelsec.MainActivity: org.anddev.andengine.engine.Engine onLoadEngine()>",
            "<org.anddev.andengine.opengl.texture.Texture: void writeTextureToHardware(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.engine.SingleSceneSplitScreenEngine: org.anddev.andengine.engine.camera.Camera getCamera()>",
            "<org.anddev.andengine.opengl.texture.source.ResourceTextureSource: void <init>(android.content.Context,int)>",
            "<org.anddev.andengine.util.modifier.ease.EaseSineIn: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setVisible(boolean)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsFactory: com.badlogic.gdx.physics.box2d.Body createCircleBody(org.anddev.andengine.extension.physics.box2d.PhysicsWorld,org.anddev.andengine.entity.shape.IShape,com.badlogic.gdx.physics.box2d.BodyDef$BodyType,com.badlogic.gdx.physics.box2d.FixtureDef,float)>",
            "<org.anddev.andengine.util.SAXUtils: int getIntAttribute(org.xml.sax.Attributes,java.lang.String,int)>",
            "<org.anddev.andengine.audio.BaseAudioEntity: float getActualRightVolume()>",
            "<org.anddev.andengine.util.Transformation: org.anddev.andengine.util.Transformation setToTranslate(float,float)>",
            "<org.anddev.andengine.audio.BaseAudioManager: void releaseAll()>",
            "<org.anddev.andengine.entity.modifier.PathModifier: org.anddev.andengine.entity.modifier.PathModifier$IPathModifierListener getPathModifierListener()>",
            "<org.anddev.andengine.opengl.texture.source.decorator.LinearGradientFillTextureSourceDecorator$LinearGradientDirection: void <init>(java.lang.String,int,int,int,int,int)>",
            "<org.anddev.andengine.entity.util.FrameCounter: void <init>()>",
            "<org.anddev.andengine.util.Base64: void <init>()>",
            "<org.anddev.andengine.engine.camera.Camera: void unapplyCameraSceneRotation(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.engine.Engine$UpdateThread: void <init>(org.anddev.andengine.engine.Engine)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TSXParser: void endElement(java.lang.String,java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.util.cache.RectangleVertexBufferCache: org.anddev.andengine.opengl.vertex.RectangleVertexBuffer put(int,int,org.anddev.andengine.opengl.vertex.RectangleVertexBuffer)>",
            "<org.anddev.andengine.engine.DoubleSceneSplitScreenEngine: void onDrawScene(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.modifier.ease.EaseElasticIn: float getPercentageDone(float,float,float,float)>",
            "<com.game.myjewelsec.LevelSeleActivity: int access$3(com.game.myjewelsec.LevelSeleActivity)>",
            "<org.anddev.andengine.collision.RectangularShapeCollisionChecker: void <clinit>()>",
            "<org.anddev.andengine.engine.options.WakeLockOptions: org.anddev.andengine.engine.options.WakeLockOptions valueOf(java.lang.String)>",
            "<com.game.myjewelsec.GameServer.MyParticleSystem$3: void <init>(com.game.myjewelsec.GameServer.MyParticleSystem,org.anddev.andengine.entity.particle.ParticleSystem)>",
            "<org.anddev.andengine.engine.options.RenderOptions: boolean isDisableExtensionVertexBufferObjects()>",
            "<org.anddev.andengine.util.MathUtils: float[] revertRotateAndScaleAroundCenter(float[],float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap: org.anddev.andengine.opengl.vertex.RectangleVertexBuffer getSharedVertexBuffer()>",
            "<org.anddev.andengine.opengl.texture.region.buffer.TiledTextureRegionBuffer: float getY1()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory$1: void onCallback(org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXParseException: void <init>(java.lang.Exception)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: void refreshControlKnobPosition()>",
            "<org.anddev.andengine.entity.modifier.MoveModifier: void <init>(float,float,float,float,float,org.anddev.andengine.util.modifier.ease.IEaseFunction)>",
            "<org.anddev.andengine.util.pool.GenericPool: void recyclePoolItem(java.lang.Object)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXParser: void endElement(java.lang.String,java.lang.String,java.lang.String)>",
            "<org.anddev.andengine.util.Transformation: void postConcat(org.anddev.andengine.util.Transformation)>",
            "<org.anddev.andengine.util.pool.PoolUpdateHandler: org.anddev.andengine.util.pool.PoolItem obtainPoolItem()>",
            "<org.anddev.andengine.util.progress.ProgressMonitor: void onProgressChanged(int)>",
            "<org.anddev.andengine.opengl.util.FastFloatBuffer: void put(float)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.JarvisMarch: void <init>()>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl: void updateControlKnob(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.util.levelstats.LevelStatsDBConnector: java.lang.String access$2(org.anddev.andengine.util.levelstats.LevelStatsDBConnector)>",
            "<org.anddev.andengine.entity.util.ScreenCapture: void capture(int,int,int,int,java.lang.String,org.anddev.andengine.entity.util.ScreenCapture$IScreenCaptureCallback)>",
            "<org.anddev.andengine.util.levelstats.LevelStatsDBConnector: int access$1(org.anddev.andengine.util.levelstats.LevelStatsDBConnector)>",
            "<org.anddev.andengine.engine.camera.hud.controls.BaseOnScreenControl$1: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.engine.camera.SmoothCamera: float cutToMaxVelocityY(float,float)>",
            "<com.game.myjewelsec.GameActivity$12: void <init>(com.game.myjewelsec.GameActivity,com.game.myjewelsec.Shell,com.badlogic.gdx.physics.box2d.Body)>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueChangeModifier: void <init>(org.anddev.andengine.util.modifier.BaseSingleValueChangeModifier)>",
            "<org.anddev.andengine.entity.modifier.DelayModifier: void onManagedInitialize(java.lang.Object)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: boolean enableAccelerometerSensor(org.anddev.andengine.sensor.accelerometer.IAccelerometerListener)>",
            "<org.anddev.andengine.util.modifier.LoopModifier: org.anddev.andengine.util.modifier.LoopModifier clone()>",
            "<org.anddev.andengine.util.Base64$Decoder: int maxOutputSize(int)>",
            "<org.anddev.andengine.opengl.texture.Texture: org.anddev.andengine.opengl.texture.TextureOptions getTextureOptions()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXLayer: void initializeTMXTilesFromDataString(java.lang.String,java.lang.String,java.lang.String,org.anddev.andengine.entity.layer.tiled.tmx.TMXLoader$ITMXTilePropertiesListener)>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: void reset()>",
            "<org.anddev.andengine.entity.particle.modifier.BaseSingleValueSpanModifier: float calculateValue(float)>",
            "<org.anddev.andengine.entity.scene.Scene: void setBackgroundEnabled(boolean)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void setWarmStarting(boolean)>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: void onSetValue(java.lang.Object,float,float)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: int getZIndex()>",
            "<org.anddev.andengine.entity.Entity: boolean unregisterEntityModifiers(org.anddev.andengine.entity.modifier.IEntityModifier$IEntityModifierMatcher)>",
            "<org.anddev.andengine.util.path.Path: int getToTileRow()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObject: int getGID()>",
            "<org.anddev.andengine.util.modifier.ease.EaseSineOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.entity.Entity: void onUpdate(float)>",
            "<org.anddev.andengine.opengl.texture.Texture: org.anddev.andengine.opengl.texture.Texture$TextureSourceWithLocation addTextureSource(org.anddev.andengine.opengl.texture.source.ITextureSource,int,int)>",
            "<com.game.myjewelsec.MainActivity$3: boolean onAreaTouched(org.anddev.andengine.input.touch.TouchEvent,float,float)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>",
            "<org.anddev.andengine.extension.physics.box2d.util.hull.Vector2Util: boolean isLess(com.badlogic.gdx.math.Vector2,com.badlogic.gdx.math.Vector2)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXException: void <init>(java.lang.String,java.lang.Throwable)>",
            "<org.anddev.andengine.opengl.texture.source.EmptyBitmapTextureSource: java.lang.String toString()>",
            "<org.anddev.andengine.entity.Entity: void clearEntityModifiers()>",
            "<org.anddev.andengine.util.modifier.BaseModifier: java.lang.Object clone()>",
            "<com.game.myjewelsec.LoadActivity: org.anddev.andengine.engine.Engine onLoadEngine()>",
            "<org.anddev.andengine.entity.scene.Scene: org.anddev.andengine.entity.layer.Layer getTopLayer()>",
            "<org.anddev.andengine.opengl.texture.region.TextureRegionFactory$2: void <init>(org.anddev.andengine.opengl.texture.region.TiledTextureRegion)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$SurfaceGestureDetectorAdapter: boolean onDoubleTap()>",
            "<com.game.myjewelsec.GameActivity: void createHUD()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTileSet: void <init>(int,org.xml.sax.Attributes,org.anddev.andengine.opengl.texture.TextureOptions)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void registerUpdateHandler(org.anddev.andengine.engine.handler.IUpdateHandler)>",
            "<org.anddev.andengine.util.levelstats.LevelStatsDBConnector$1: void <init>(org.anddev.andengine.util.levelstats.LevelStatsDBConnector,int,boolean,int,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.entity.modifier.AlphaModifier: org.anddev.andengine.util.modifier.IModifier clone()>",
            "<org.anddev.andengine.util.ActivityUtils: void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,org.anddev.andengine.util.Callback)>",
            "<org.anddev.andengine.entity.Entity: org.anddev.andengine.util.Transformation getLocalToSceneTransformation()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: void onManagedDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.sensor.location.LocationSensorOptions: long getMinimumTriggerTime()>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.util.exception.TMXParseException: void <init>()>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: void onSetInitialValue(java.lang.Object,float)>",
            "<org.anddev.andengine.entity.particle.initializer.BaseDoubleValueInitializer: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.extension.physics.box2d.PhysicsWorld: void setDestructionListener(com.badlogic.gdx.physics.box2d.DestructionListener)>",
            "<com.game.myjewelsec.GameActivity: void ClearMessage()>",
            "<org.anddev.andengine.util.ActivityUtils: void requestFullscreen(android.app.Activity)>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: int getChildCount()>",
            "<org.anddev.andengine.input.touch.detector.ScrollDetector: float getX(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.opengl.texture.Texture: int getHeight()>",
            "<org.anddev.andengine.util.ActivityUtils$2: void onProgressUpdate(java.lang.Integer[])>",
            "<org.anddev.andengine.opengl.texture.BuildableTexture: void <init>(int,int,org.anddev.andengine.opengl.texture.TextureOptions)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: void setAccelerationY(float,float)>",
            "<org.anddev.andengine.entity.Entity: float getInitialX()>",
            "<org.anddev.andengine.util.modifier.ParallelModifier: void <init>(org.anddev.andengine.util.modifier.IModifier[])>",
            "<org.anddev.andengine.entity.modifier.ScaleAtModifier: void onManagedInitialize(java.lang.Object)>",
            "<org.anddev.andengine.entity.scene.Scene: java.lang.Boolean onAreaTouchEvent(org.anddev.andengine.input.touch.TouchEvent,float,float,org.anddev.andengine.entity.scene.Scene$ITouchArea)>",
            "<com.game.myjewelsec.LevelSeleActivity$1: void <init>(com.game.myjewelsec.LevelSeleActivity)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXObjectProperty: void <init>(org.xml.sax.Attributes)>",
            "<org.anddev.andengine.entity.particle.initializer.AccelerationInitializer: void <init>(float,float,float,float)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceGestureDetector$SurfaceGestureDetectorAdapter: boolean onSingleTap()>",
            "<org.anddev.andengine.util.SystemUtils: java.util.regex.MatchResult matchSystemFile(java.lang.String,java.lang.String,int)>",
            "<org.anddev.andengine.util.ActivityUtils: void doAsync(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.util.concurrent.Callable,org.anddev.andengine.util.Callback,boolean)>",
            "<org.anddev.andengine.engine.FixedStepEngine: void <init>(org.anddev.andengine.engine.options.EngineOptions,int)>",
            "<org.anddev.andengine.audio.sound.SoundManager: void releaseAll()>",
            "<org.anddev.andengine.util.path.Path$Step: int hashCode()>",
            "<org.anddev.andengine.util.modifier.ease.EaseBackOut: float getPercentageDone(float,float,float,float)>",
            "<org.anddev.andengine.input.touch.detector.SurfaceScrollDetector: float getY(org.anddev.andengine.input.touch.TouchEvent)>",
            "<org.anddev.andengine.entity.layer.tiled.tmx.TMXTile: org.anddev.andengine.entity.layer.tiled.tmx.TMXProperties getTMXTileProperties(org.anddev.andengine.entity.layer.tiled.tmx.TMXTiledMap)>",
            "<com.game.myjewelsec.GameActivity: org.anddev.andengine.entity.scene.Scene onLoadScene()>",
            "<org.anddev.andengine.util.Base64InputStream: void reset()>",
            "<org.anddev.andengine.entity.particle.modifier.BaseTripleValueSpanModifier: void <init>(float,float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.engine.handler.UpdateHandlerList: void reset()>",
            "<org.anddev.andengine.engine.handler.runnable.RunnableHandler: void postRunnable(java.lang.Runnable)>",
            "<org.anddev.andengine.entity.primitive.Line: float getY1()>",
            "<org.anddev.andengine.util.modifier.BaseSingleValueSpanModifier: void <init>(float,float,float,org.anddev.andengine.util.modifier.IModifier$IModifierListener)>",
            "<org.anddev.andengine.opengl.view.GLSurfaceView: java.util.concurrent.Semaphore access$0()>",
            "<org.anddev.andengine.util.ActivityUtils$3: void onCallback(java.lang.Object)>",
            "<org.anddev.andengine.ui.activity.BaseGameActivity: void onDestroy()>",
            "<org.anddev.andengine.entity.particle.ParticleSystem: org.anddev.andengine.entity.particle.emitter.IParticleEmitter getParticleEmitter()>",
            "<org.anddev.andengine.util.modifier.SequenceModifier: void onUpdate(float,java.lang.Object)>",
            "<org.anddev.andengine.entity.sprite.AnimatedSprite: org.anddev.andengine.entity.sprite.AnimatedSprite animate(long,boolean,org.anddev.andengine.entity.sprite.AnimatedSprite$IAnimationListener)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableExtensions(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.options.RenderOptions)>",
            "<org.anddev.andengine.opengl.util.GLHelper: void enableLightning(javax.microedition.khronos.opengles.GL10)>",
            "<org.anddev.andengine.util.modifier.ease.EaseElasticOut: org.anddev.andengine.util.modifier.ease.EaseElasticOut getInstance()>",
            "<org.anddev.andengine.entity.particle.emitter.BaseParticleEmitter: void <init>(float,float)>",
            "<org.anddev.andengine.opengl.view.RenderSurfaceView$Renderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>",
            "<org.anddev.andengine.entity.modifier.FadeInModifier: void <init>(float)>",
            "<org.anddev.andengine.entity.scene.background.modifier.ColorModifier: void <init>(float,float,float,float,float,float,float)>",
            "<org.anddev.andengine.entity.Entity: void onDraw(javax.microedition.khronos.opengles.GL10,org.anddev.andengine.engine.camera.Camera)>",
            "<org.anddev.andengine.util.SimplePreferences: android.content.SharedPreferences getInstance(android.content.Context)>",
            "<org.anddev.andengine.entity.scene.menu.item.AnimatedSpriteMenuItem: void onUnselected()>",
            "<org.anddev.andengine.util.modifier.ease.EaseQuadInOut: void <init>()>",
            "<org.anddev.andengine.entity.scene.menu.item.decorator.BaseMenuItemDecorator: void setZIndex(int)>",
            "<org.anddev.andengine.extension.physics.box2d.util.triangulation.EarClippingTriangulator: java.util.List computeTriangles(java.util.List)>",
            "<org.anddev.andengine.entity.modifier.MoveYModifier: void onSetValue(org.anddev.andengine.entity.IEntity,float,float)>",
            "<com.game.myjewelsec.GameActivity: void findone(int)>",
            "<org.anddev.andengine.opengl.vertex.TextVertexBuffer: void <init>(int,org.anddev.andengine.util.HorizontalAlign,int)>"
        ],
        "similar": ["<com.games.AdReciver: void onReceive(android.content.Context,android.content.Intent)>"],
        "new": ["<com.games.AdReciver: void a(android.content.Context)>"],
        "deleted": [
            "<com.games.a: void <clinit>()>",
            "<com.games.a: void a()>",
            "<com.games.a: byte[] a(char[])>",
            "<com.games.a: void a(android.app.Activity)>",
            "<com.games.a: void b(android.content.Context)>",
            "<com.games.a: void a(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>",
            "<com.games.a: void a(android.content.Context)>",
            "<com.games.a: java.lang.String a(java.lang.String)>",
            "<com.games.a: java.lang.String a(java.lang.String,int)>",
            "<com.games.a: byte a(byte,int)>"
        ]
    }
}